{"ast":null,"code":"\"use strict\";\n\nvar Stream = require(\"stream\").Stream,\n    utillib = require(\"util\"),\n    mimelib = require(\"mimelib\"),\n    he = require(\"he\"),\n    toPunycode = require(\"./topunycode\"),\n    runDKIMSign = require(\"dkim-signer\").DKIMSign,\n    urlFetch = require(\"./urlfetch\"),\n    fs = require(\"fs\"),\n    mime = require(\"mime\"),\n    crypto = require(\"crypto\");\n\nmodule.exports.MailComposer = MailComposer;\n/**\n * <p>Costructs a MailComposer object. This is a Stream instance so you could\n * pipe the output to a file or send it to network.</p>\n *\n * <p>Possible options properties are:</p>\n *\n * <ul>\n *     <li><b>escapeSMTP</b> - convert dots in the beginning of line to double dots</li>\n *     <li><b>encoding</b> - forced transport encoding (quoted-printable, base64, 7bit or 8bit)</li>\n *     <li><b>charset</b> - forced output charset (utf-8, iso-8859-1 etc)</li>\n *     <li><b>keepBcc</b> - include Bcc: field in the message headers (default is false)</li>\n *     <li><b>forceEmbeddedImages</b> - convert image urls and absolute paths in HTML to embedded attachments (default is false)</li>\n * </ul>\n *\n * <p><b>Events</b></p>\n *\n * <ul>\n *     <li><b>'envelope'</b> - emits an envelope object with <code>from</code> and <code>to</code> (array) addresses.</li>\n *     <li><b>'data'</b> - emits a chunk of data</li>\n *     <li><b>'end'</b> - composing the message has ended</li>\n * </ul>\n *\n * @constructor\n * @param {Object} [options] Optional options object\n */\n\nfunction MailComposer(options) {\n  Stream.call(this);\n  this.readable = true;\n  this.options = options || {};\n  this.options.charset = (this.options.charset || \"utf-8\").toString().trim().toLowerCase();\n  this.options.identityString = (this.options.identityString || \"mailcomposer\").toString().trim().replace(/\\s/g, \"-\");\n  this._lineEnding = \"\\r\\n\";\n\n  this._init();\n}\n\nutillib.inherits(MailComposer, Stream);\n/**\n * <p>Resets and initializes MailComposer</p>\n */\n\nMailComposer.prototype._init = function () {\n  /**\n   * <p>Contains all header values</p>\n   * @private\n   */\n  this._headers = {};\n  /**\n   * <p>Contains message related values</p>\n   * @private\n   */\n\n  this._message = {};\n  /**\n   * <p>Contains a list of alternatives for text and html body</p>\n   * @private\n   */\n\n  this._alternatives = [];\n  /**\n   * <p>Contains a list of attachments</p>\n   * @private\n   */\n\n  this._attachments = [];\n  /**\n   * <p>Contains a list of attachments that are related to HTML body</p>\n   * @private\n   */\n\n  this._relatedAttachments = [];\n  /**\n   * <p>Contains e-mail addresses for the SMTP</p>\n   * @private\n   */\n\n  this._envelope = {};\n  /**\n   * <p>If set to true, caches the output for further processing (DKIM signing etc.)</p>\n   * @private\n   */\n\n  this._cacheOutput = false;\n  /**\n   * <p>If _cacheOutput is true, caches the output to _outputBuffer</p>\n   * @private\n   */\n\n  this._outputBuffer = \"\";\n  /**\n   * <p>DKIM message signing options, set with useDKIM</p>\n   * @private\n   */\n\n  this._dkim = false;\n  /**\n   * <p>Current stream being processed. Needed for directing backpressure</p>\n   * @private\n   */\n\n  this._currentStream = false;\n  /**\n   * <p>Counter for generating unique mime boundaries etc.</p>\n   * @private\n   */\n\n  this._gencounter = 0;\n};\n/* PUBLIC API */\n\n/**\n * <p>Adds a header field to the headers object</p>\n *\n * @param {String} key Key name\n * @param {String} value Header value\n * @param {Boolean} [formatted] If set to true, the value is not modified and passed to output as is\n */\n\n\nMailComposer.prototype.addHeader = function (key, value, formatted) {\n  key = this._normalizeKey(key);\n\n  if (value && Object.prototype.toString.call(value) == \"[object Object]\") {\n    value = this._encodeMimeWord(JSON.stringify(value), \"Q\", 52);\n  } else {\n    value = (value || \"\").toString().trim();\n  }\n\n  if (!key || !value) {\n    return;\n  }\n\n  if (formatted) {\n    value = {\n      formatted: !!formatted,\n      value: value\n    };\n  }\n\n  if (!(key in this._headers)) {\n    this._headers[key] = value;\n  } else {\n    if (!Array.isArray(this._headers[key])) {\n      this._headers[key] = [this._headers[key], value];\n    } else {\n      this._headers[key].push(value);\n    }\n  }\n};\n/**\n * <p>Resets and initializes MailComposer</p>\n *\n * <p>Setting an option overwrites an earlier setup for the same keys</p>\n *\n * <p>Possible options:</p>\n *\n * <ul>\n *     <li><b>from</b> - The e-mail address of the sender. All e-mail addresses can be plain <code>sender@server.com</code> or formatted <code>Sender Name &lt;sender@server.com&gt;</code></li>\n *     <li><b>to</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>To:</code> field</li>\n *     <li><b>cc</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>Cc:</code> field</li>\n *     <li><b>bcc</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>Bcc:</code> field</li>\n *     <li><b>replyTo</b> - An e-mail address that will appear on the <code>Reply-To:</code> field</li>\n *     <li><b>subject</b> - The subject of the e-mail</li>\n *     <li><b>body</b> - The plaintext version of the message</li>\n *     <li><b>html</b> - The HTML version of the message</li>\n * </ul>\n *\n * @param {Object} options Message related options\n */\n\n\nMailComposer.prototype.setMessageOption = function (options) {\n  var fields = [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\", \"inReplyTo\", \"references\", \"subject\", \"body\", \"html\", \"envelope\"],\n      rewrite = {\n    \"sender\": \"from\",\n    \"reply_to\": \"replyTo\",\n    \"text\": \"body\"\n  };\n  options = options || {};\n  var keys = Object.keys(options),\n      key,\n      value;\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    value = options[key];\n\n    if (key in rewrite) {\n      key = rewrite[key];\n    }\n\n    if (fields.indexOf(key) >= 0) {\n      this._message[key] = this._handleValue(key, value);\n    }\n  }\n};\n/**\n * <p>Setup DKIM for signing generated message. Use with caution as this forces\n * the generated message to be cached entirely before emitted.</p>\n *\n * @param {Object} dkim DKIM signing settings\n * @param {String} [dkim.headerFieldNames=\"from:to:cc:subject\"] Header fields to sign\n * @param {String} dkim.privateKey DKMI private key\n * @param {String} dkim.domainName Domain name to use for signing (ie: \"domain.com\")\n * @param {String} dkim.keySelector Selector for the DKMI public key (ie. \"dkim\" if you have set up a TXT record for \"dkim._domainkey.domain.com\"\n */\n\n\nMailComposer.prototype.useDKIM = function (dkim) {\n  this._dkim = dkim || {};\n  this._cacheOutput = true;\n};\n/**\n * <p>Adds an alternative to the list</p>\n *\n * <p>Following options are allowed:</p>\n *\n * <ul>\n *     <li><b>fileName</b> - filename for the alternative</li>\n *     <li><b>contentType</b> - content type for the attachmetn (default will be derived from the filename)</li>\n *     <li><b>cid</b> - Content ID value for inline images</li>\n *     <li><b>contents</b> - String or Buffer alternative contents</li>\n *     <li><b>filePath</b> - Path to a file for streaming</li>\n *     <li><b>streamSource</b> - Stream object for arbitrary streams</li>\n * </ul>\n *\n * <p>One of <code>contents</code> or <code>filePath</code> or <code>stream</code>\n * must be specified, otherwise the alternative is not included</p>\n *\n * @param {Object} alternative Alternative info\n */\n\n\nMailComposer.prototype.addAlternative = function (alternative) {\n  alternative = alternative || {};\n\n  if (!alternative.contentType) {\n    alternative.contentType = \"application/octet-stream\";\n  }\n\n  if (!alternative.contentEncoding) {\n    alternative.contentEncoding = \"base64\";\n  }\n\n  if (alternative.contents) {\n    this._alternatives.push(alternative);\n  }\n};\n/**\n * <p>Adds an attachment to the list</p>\n *\n * <p>Following options are allowed:</p>\n *\n * <ul>\n *     <li><b>fileName</b> - filename for the attachment</li>\n *     <li><b>contentType</b> - content type for the attachmetn (default will be derived from the filename)</li>\n *     <li><b>cid</b> - Content ID value for inline images</li>\n *     <li><b>contents</b> - String or Buffer attachment contents</li>\n *     <li><b>filePath</b> - Path to a file for streaming</li>\n *     <li><b>streamSource</b> - Stream object for arbitrary streams</li>\n * </ul>\n *\n * <p>One of <code>contents</code> or <code>filePath</code> or <code>stream</code>\n * must be specified, otherwise the attachment is not included</p>\n *\n * @param {Object} attachment Attachment info\n */\n\n\nMailComposer.prototype.addAttachment = function (attachment) {\n  attachment = attachment || {}; // Needed for Nodemailer compatibility\n\n  if (attachment.filename) {\n    attachment.fileName = attachment.filename;\n    delete attachment.filename;\n  }\n\n  if (!attachment.fileName && attachment.filePath) {\n    attachment.fileName = attachment.filePath.split(/[\\/\\\\]/).pop();\n  }\n\n  if (!attachment.contentType) {\n    attachment.contentType = mime.lookup(attachment.fileName || attachment.filePath || \"\");\n  }\n\n  if (attachment.streamSource) {\n    // check for pause and resume support\n    if (typeof attachment.streamSource.pause != \"function\" || typeof attachment.streamSource.resume != \"function\") {\n      // Unsupported Stream source, skip it\n      return;\n    }\n\n    attachment.streamSource.pause();\n  }\n\n  if (attachment.filePath || attachment.contents || attachment.streamSource) {\n    this._attachments.push(attachment);\n  }\n};\n/**\n * <p>Composes and returns an envelope from the <code>this._envelope</code>\n * object. Needed for the SMTP client</p>\n *\n * <p>Generated envelope is int hte following structure:</p>\n *\n * <pre>\n * {\n *     to: \"address\",\n *     from: [\"list\", \"of\", \"addresses\"]\n * }\n * </pre>\n *\n * <p>Both properties (<code>from</code> and <code>to</code>) are optional\n * and may not exist</p>\n *\n * @return {Object} envelope object with \"from\" and \"to\" params\n */\n\n\nMailComposer.prototype.getEnvelope = function () {\n  var envelope = {},\n      toKeys = [\"to\", \"cc\", \"bcc\"],\n      key; // If multiple addresses, only use the first one\n\n  if (this._envelope.from && this._envelope.from.length) {\n    envelope.from = [].concat(this._envelope.from).shift();\n  }\n\n  for (var i = 0, len = toKeys.length; i < len; i++) {\n    key = toKeys[i];\n\n    if (this._envelope[key] && this._envelope[key].length) {\n      if (!envelope.to) {\n        envelope.to = [];\n      }\n\n      envelope.to = envelope.to.concat(this._envelope[key]);\n    }\n  } // every envelope needs a stamp :)\n\n\n  envelope.stamp = \"Postage paid, Par Avion\";\n  return envelope;\n};\n/**\n * <p>Starts streaming the message</p>\n */\n\n\nMailComposer.prototype.streamMessage = function () {\n  if (typeof setImmediate == \"function\") {\n    setImmediate(this._composeMessage.bind(this));\n  } else {\n    process.nextTick(this._composeMessage.bind(this));\n  }\n};\n/**\n * <p>Builds the entire message and returns it as a string</p>\n *\n * @param {Function} callback Callback function to run\n */\n\n\nMailComposer.prototype.buildMessage = function (callback) {\n  var body = \"\",\n      done = false;\n  this.on(\"data\", function (chunk) {\n    body += (chunk || \"\").toString();\n  });\n  this.on(\"error\", function (error) {\n    if (done) {\n      return;\n    }\n\n    done = true;\n    callback(error);\n  });\n  this.on(\"end\", function () {\n    if (done) {\n      return;\n    }\n\n    done = true;\n    callback(null, body);\n  });\n  this.streamMessage();\n};\n/**\n * <p>Handles backpressure by resuming streaming when possible</p>\n */\n\n\nMailComposer.prototype.resume = function () {\n  if (this._currentStream && typeof this._currentStream.resume == \"function\") {\n    this._currentStream.resume();\n  }\n};\n/**\n * <p>Handles backpressure by pausing streaming if required</p>\n */\n\n\nMailComposer.prototype.pause = function () {\n  if (this._currentStream && typeof this._currentStream.pause == \"function\") {\n    this._currentStream.pause();\n  }\n};\n\nMailComposer.prototype.convertAddress = function (address) {\n  // if user part of the address contains foreign symbols\n  // make a mime word of it\n  address.address = address.address.replace(/^.*?(?=\\@)/, function (user) {\n    if (this._hasUTFChars(user)) {\n      return mimelib.encodeMimeWord(user, \"Q\", this.options.charset);\n    } else {\n      return user;\n    }\n  }.bind(this)); // If there's still foreign symbols, then punycode convert it\n\n  if (this._hasUTFChars(address.address)) {\n    address.address = toPunycode(address.address);\n  }\n\n  if (!address.name) {\n    return address.address;\n  } else if (address.name) {\n    if (this._hasUTFChars(address.name)) {\n      address.name = this._encodePartialMimeWord(address.name, \"Q\", 52);\n    } else {\n      address.name = JSON.stringify(address.name);\n    }\n\n    return address.name + ' <' + address.address + '>';\n  }\n};\n/* PRIVATE API */\n\n/**\n * <p>Handles a message object value, converts addresses etc.</p>\n *\n * @param {String} key Message options key\n * @param {String} value Message options value\n * @return {String} converted value\n */\n\n\nMailComposer.prototype._handleValue = function (key, value) {\n  key = (key || \"\").toString();\n  var addresses;\n\n  switch (key) {\n    case \"from\":\n    case \"to\":\n    case \"cc\":\n    case \"bcc\":\n    case \"replyTo\":\n      value = (value || \"\").toString().replace(/\\r?\\n|\\r/g, \" \");\n      addresses = [].concat.apply([], [].concat(value).map(mimelib.parseAddresses.bind(mimelib)));\n\n      if (!this._envelope.userDefined) {\n        this._envelope[key] = [].concat(this._envelope[key] || []);\n        addresses.forEach(function (address) {\n          [].concat(address.group || address || []).forEach(function (address) {\n            address = address.address;\n\n            if (this._hasUTFChars(address)) {\n              address = toPunycode(address);\n            }\n\n            if (this._envelope[key].indexOf(address) < 0) {\n              this._envelope[key].push(address);\n            }\n          }.bind(this));\n        }.bind(this));\n      }\n\n      return this._convertAddresses(addresses);\n\n    case \"inReplyTo\":\n      value = (value || \"\").toString().replace(/\\s/g, \"\");\n\n      if (value.charAt(0) != \"<\") {\n        value = \"<\" + value;\n      }\n\n      if (value.charAt(value.length - 1) != \">\") {\n        value = value + \">\";\n      }\n\n      return value;\n\n    case \"references\":\n      value = [].concat.apply([], [].concat(value || \"\").map(function (elm) {\n        elm = (elm || \"\").toString().trim();\n        return elm.replace(/<[^>]*>/g, function (str) {\n          return str.replace(/\\s/g, \"\");\n        }).split(/\\s+/);\n      })).map(function (elm) {\n        elm = (elm || \"\").toString().trim();\n\n        if (elm.charAt(0) != \"<\") {\n          elm = \"<\" + elm;\n        }\n\n        if (elm.charAt(elm.length - 1) != \">\") {\n          elm = elm + \">\";\n        }\n\n        return elm;\n      });\n      return value.join(\" \").trim();\n\n    case \"subject\":\n      value = (value || \"\").toString().replace(/\\r?\\n|\\r/g, \" \");\n      return this._encodeMimeWord(value, \"Q\", 52);\n\n    case \"envelope\":\n      this._envelope = {\n        userDefined: true\n      };\n      Object.keys(value).forEach(function (key) {\n        this._envelope[key] = [];\n        [].concat(value[key]).forEach(function (address) {\n          var addresses = mimelib.parseAddresses(address);\n          this._envelope[key] = this._envelope[key].concat(addresses.map(function (address) {\n            if (this._hasUTFChars(address.address)) {\n              return toPunycode(address.address);\n            } else {\n              return address.address;\n            }\n          }.bind(this)));\n        }.bind(this));\n      }.bind(this));\n      break;\n  }\n\n  return value;\n};\n/**\n * <p>Handles a list of parsed e-mail addresses, checks encoding etc.</p>\n *\n * @param {Array} value A list or single e-mail address <code>{address:'...', name:'...'}</code>\n * @return {String} Comma separated and encoded list of addresses\n */\n\n\nMailComposer.prototype._convertAddresses = function (addresses) {\n  var values = [],\n      address;\n\n  for (var i = 0, len = addresses.length; i < len; i++) {\n    address = addresses[i];\n\n    if (address.address) {\n      values.push(this.convertAddress(address));\n    }\n\n    if (address.group) {\n      address.name = address.name || \"Recipients\";\n\n      if (this._hasUTFChars(address.name)) {\n        address.name = this._encodeMimeWord(address.name, \"Q\", 52);\n      } else {\n        address.name = address.name;\n      }\n\n      values.push(address.name + \":\" + address.group.map(this.convertAddress.bind(this)).join(\", \") + \";\");\n    }\n  }\n\n  return values.join(\", \");\n};\n/**\n * <p>Gets a header field</p>\n *\n * @param {String} key Key name\n * @return {String|Array} Header field - if several values, then it's an array\n */\n\n\nMailComposer.prototype._getHeader = function (key) {\n  var value;\n  key = this._normalizeKey(key);\n  value = [].concat(this._headers[key] || []).map(function (val) {\n    return val && val.value || val;\n  });\n\n  switch (value.length) {\n    case 0:\n      return \"\";\n\n    case 1:\n      return value[0];\n\n    default:\n      return value;\n  }\n};\n/**\n * <p>Generate an e-mail from the described info</p>\n */\n\n\nMailComposer.prototype._composeMessage = function () {\n  // Preprocess functions\n  if (this.options.forceEmbeddedImages) {\n    this._convertImagesToInline();\n  } // Generate headers for the message\n\n\n  this._composeHeader(); // Make the mime tree flat\n\n\n  this._flattenMimeTree(); // Compose message body\n\n\n  this._composeBody();\n};\n/**\n * <p>Composes a header for the message and emits it with a <code>'data'</code>\n * event</p>\n *\n * <p>Also checks and build a structure for the message (is it a multipart message\n * and does it need a boundary etc.)</p>\n *\n * <p>By default the message is not a multipart. If the message containes both\n * plaintext and html contents, an alternative block is used. it it containes\n * attachments, a mixed block is used. If both alternative and mixed exist, then\n * alternative resides inside mixed.</p>\n */\n\n\nMailComposer.prototype._composeHeader = function () {\n  var headers = [],\n      i,\n      len; // if an attachment uses content-id and is linked from the html\n  // then it should be placed in a separate \"related\" part with the html\n\n  this._message.useRelated = false;\n\n  if (this._message.html && (len = this._attachments.length)) {\n    for (i = len - 1; i >= 0; i--) {\n      if (this._attachments[i].cid && this._message.html.indexOf(\"cid:\" + this._attachments[i].cid) >= 0) {\n        this._message.useRelated = true;\n\n        this._relatedAttachments.unshift(this._attachments[i]);\n\n        this._attachments.splice(i, 1);\n      }\n    }\n  }\n\n  if (this._attachments.length) {\n    this._message.useMixed = true;\n    this._message.mixedBoundary = this._generateBoundary();\n  } else {\n    this._message.useMixed = false;\n  }\n\n  if ([].concat(this._message.body || []).concat(this._message.html || []).concat(this._alternatives || []).length > 1) {\n    this._message.useAlternative = true;\n    this._message.alternativeBoundary = this._generateBoundary();\n  } else {\n    this._message.useAlternative = false;\n  } // let's do it here, so the counter in the boundary would look better\n\n\n  if (this._message.useRelated) {\n    this._message.relatedBoundary = this._generateBoundary();\n  }\n\n  if (!this._message.html && !this._message.body) {\n    // If there's nothing to show, show a linebreak\n    this._message.body = this._lineEnding;\n  }\n\n  this._buildMessageHeaders();\n\n  this._generateBodyStructure(); // Compile header lines\n\n\n  headers = this.compileHeaders(this._headers);\n  headers.push(\"MIME-Version: 1.0\");\n\n  if (!this._cacheOutput) {\n    this.emit(\"data\", new Buffer(headers.join(this._lineEnding) + this._lineEnding + this._lineEnding, \"utf-8\"));\n  } else {\n    this._outputBuffer += headers.join(this._lineEnding) + this._lineEnding + this._lineEnding;\n  }\n};\n/**\n * <p>Uses data from the <code>this._message</code> object to build headers</p>\n */\n\n\nMailComposer.prototype._buildMessageHeaders = function () {\n  // FROM\n  if (this._message.from && this._message.from.length) {\n    [].concat(this._message.from).forEach(function (from) {\n      this.addHeader(\"From\", from);\n    }.bind(this));\n  } // TO\n\n\n  if (this._message.to && this._message.to.length) {\n    [].concat(this._message.to).forEach(function (to) {\n      this.addHeader(\"To\", to);\n    }.bind(this));\n  } // CC\n\n\n  if (this._message.cc && this._message.cc.length) {\n    [].concat(this._message.cc).forEach(function (cc) {\n      this.addHeader(\"Cc\", cc);\n    }.bind(this));\n  } // BCC\n  // By default not included, set options.keepBcc to true to keep\n\n\n  if (this.options.keepBcc) {\n    if (this._message.bcc && this._message.bcc.length) {\n      [].concat(this._message.bcc).forEach(function (bcc) {\n        this.addHeader(\"Bcc\", bcc);\n      }.bind(this));\n    }\n  } // REPLY-TO\n\n\n  if (this._message.replyTo && this._message.replyTo.length) {\n    [].concat(this._message.replyTo).forEach(function (replyTo) {\n      this.addHeader(\"Reply-To\", replyTo);\n    }.bind(this));\n  } // If in-reply-to message id is missing from the references, add it automatically\n\n\n  if (this._message.inReplyTo && this._message.inReplyTo.length && (this._message.references || \"\").toString().indexOf(this._message.inReplyTo) < 0) {\n    this._message.references = [].concat(this._message.inReplyTo).concat(this._message.references || []).join(\" \");\n  } // REFERENCES\n\n\n  if (this._message.references && this._message.references.length) {\n    this.addHeader(\"References\", this._message.references);\n  } // IN-REPLY-TO\n\n\n  if (this._message.inReplyTo && this._message.inReplyTo.length) {\n    this.addHeader(\"In-Reply-To\", this._message.inReplyTo);\n  } // SUBJECT\n\n\n  if (this._message.subject) {\n    this.addHeader(\"Subject\", this._message.subject);\n  }\n};\n/**\n * <p>Generates the structure (mime tree) of the body. This sets up multipart\n * structure, individual part headers, boundaries etc.</p>\n *\n * <p>The headers of the root element will be appended to the message\n * headers</p>\n */\n\n\nMailComposer.prototype._generateBodyStructure = function () {\n  var tree = this._createMimeNode(),\n      currentNode,\n      node,\n      i,\n      len;\n\n  if (this._message.useMixed) {\n    node = this._createMimeNode();\n    node.boundary = this._message.mixedBoundary;\n    node.headers.push([\"Content-Type\", \"multipart/mixed; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n\n    if (currentNode) {\n      currentNode.childNodes.push(node);\n      node.parentNode = currentNode;\n    } else {\n      tree = node;\n    }\n\n    currentNode = node;\n  }\n\n  if (this._message.useAlternative) {\n    node = this._createMimeNode();\n    node.boundary = this._message.alternativeBoundary;\n    node.headers.push([\"Content-Type\", \"multipart/alternative; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n\n    if (currentNode) {\n      currentNode.childNodes.push(node);\n      node.parentNode = currentNode;\n    } else {\n      tree = node;\n    }\n\n    currentNode = node;\n  }\n\n  if (this._message.body) {\n    node = this._createTextComponent(this._message.body, \"text/plain\");\n\n    if (currentNode) {\n      currentNode.childNodes.push(node);\n      node.parentNode = currentNode;\n    } else {\n      tree = node;\n    }\n  }\n\n  if (this._message.useRelated) {\n    node = this._createMimeNode();\n    node.boundary = this._message.relatedBoundary;\n    node.headers.push([\"Content-Type\", \"multipart/related; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n\n    if (currentNode) {\n      currentNode.childNodes.push(node);\n      node.parentNode = currentNode;\n    } else {\n      tree = node;\n    }\n\n    currentNode = node;\n  }\n\n  if (this._message.html) {\n    node = this._createTextComponent(this._message.html, \"text/html\");\n\n    if (currentNode) {\n      currentNode.childNodes.push(node);\n      node.parentNode = currentNode;\n    } else {\n      tree = node;\n    }\n  } // Alternatives\n\n\n  if (this._alternatives && this._alternatives.length) {\n    for (i = 0, len = this._alternatives.length; i < len; i++) {\n      node = this._createAlternativeComponent(this._alternatives[i]);\n\n      if (currentNode) {\n        currentNode.childNodes.push(node);\n        node.parentNode = currentNode;\n      } else {\n        tree = node;\n      }\n    }\n  } // Related attachments are added to the multipart/related part\n\n\n  if (this._relatedAttachments && this._relatedAttachments.length) {\n    for (i = 0, len = this._relatedAttachments.length; i < len; i++) {\n      node = this._createAttachmentComponent(this._relatedAttachments[i]);\n      node.parentNode = currentNode;\n      currentNode.childNodes.push(node);\n    }\n  } // Attachments are added to the first element (should be multipart/mixed)\n\n\n  currentNode = tree;\n\n  if (this._attachments && this._attachments.length) {\n    for (i = 0, len = this._attachments.length; i < len; i++) {\n      node = this._createAttachmentComponent(this._attachments[i]);\n      node.parentNode = currentNode;\n      currentNode.childNodes.push(node);\n    }\n  } // Add the headers from the root element to the main headers list\n\n\n  for (i = 0, len = tree.headers.length; i < len; i++) {\n    this.addHeader(tree.headers[i][0], tree.headers[i][1]);\n  }\n\n  this._message.tree = tree;\n};\n/**\n * <p>Creates a mime tree node for a text component (plaintext, HTML)</p>\n *\n * @param {String} text Text contents for the component\n * @param {String} [contentType=\"text/plain\"] Content type for the text component\n * @return {Object} Mime tree node\n */\n\n\nMailComposer.prototype._createTextComponent = function (text, contentType) {\n  var node = this._createMimeNode();\n\n  node.contentEncoding = (this.options.encoding || \"quoted-printable\").toLowerCase().trim();\n  node.useTextType = true;\n  contentType = [contentType || \"text/plain\"];\n  contentType.push(\"charset=\" + this.options.charset);\n\n  if ([\"7bit\", \"8bit\", \"binary\"].indexOf(node.contentEncoding) >= 0) {\n    node.textFormat = \"flowed\";\n    contentType.push(\"format=\" + node.textFormat);\n  }\n\n  node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n  node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n  node.contents = text;\n  return node;\n};\n/**\n * <p>Creates a mime tree node for an attachment component</p>\n *\n * @param {Object} attachment Attachment info for the component\n * @return {Object} Mime tree node\n */\n\n\nMailComposer.prototype._createAttachmentComponent = function (attachment) {\n  var node = this._createMimeNode(),\n      contentType = [attachment.contentType],\n      contentDisposition = [attachment.contentDisposition || \"attachment\"],\n      fileName;\n\n  node.contentEncoding = \"base64\";\n\n  if (attachment.fileName) {\n    fileName = this._encodeMimeWord(attachment.fileName, \"Q\", 1024).replace(/\"/g, \"\\\\\\\"\");\n    contentType.push(\"name=\\\"\" + fileName + \"\\\"\");\n    contentDisposition.push(\"filename=\\\"\" + fileName + \"\\\"\");\n  }\n\n  node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n  node.headers.push([\"Content-Disposition\", contentDisposition.join(\"; \")]);\n  node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n\n  if (attachment.cid) {\n    node.headers.push([\"Content-Id\", \"<\" + this._encodeMimeWord(attachment.cid) + \">\"]);\n  }\n\n  if (attachment.contents) {\n    node.contents = attachment.contents;\n  } else if (attachment.filePath) {\n    node.filePath = attachment.filePath;\n\n    if (attachment.userAgent) {\n      node.userAgent = attachment.userAgent;\n    }\n  } else if (attachment.streamSource) {\n    node.streamSource = attachment.streamSource;\n  }\n\n  return node;\n};\n/**\n * <p>Creates a mime tree node for an alternative text component (ODF/DOC/etc)</p>\n *\n * @param {Object} alternative Alternative info for the component\n * @return {Object} Mime tree node\n */\n\n\nMailComposer.prototype._createAlternativeComponent = function (alternative) {\n  var node = this._createMimeNode(),\n      contentType = alternative.contentType.split(\";\").map(function (part) {\n    return (part || \"\").trim();\n  });\n\n  node.contentEncoding = alternative.contentEncoding || \"base64\";\n\n  if ([\"7bit\", \"8bit\", \"binary\"].indexOf(node.contentEncoding) >= 0) {\n    node.textFormat = \"flowed\";\n    contentType.push(\"format=\" + node.textFormat);\n  }\n\n  if (alternative.charset) {\n    contentType.push(\"charset=\" + alternative.charset);\n  }\n\n  if (alternative.method) {\n    contentType.push(\"method=\" + alternative.method);\n  }\n\n  node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n  node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n  node.contents = alternative.contents;\n  return node;\n};\n/**\n * <p>Creates an empty mime tree node</p>\n *\n * @return {Object} Mime tree node\n */\n\n\nMailComposer.prototype._createMimeNode = function () {\n  return {\n    childNodes: [],\n    headers: [],\n    parentNode: null\n  };\n};\n/**\n * <p>Compiles headers object into an array of header lines. If needed, the\n * lines are folded</p>\n *\n * @param {Object|Array} headers An object with headers in the form of\n *        <code>{key:value}</code> or <ocde>[[key, value]]</code> or\n *        <code>[{key:key, value: value}]</code>\n * @return {Array} A list of header lines. Can be joined with \\r\\n\n */\n\n\nMailComposer.prototype.compileHeaders = function (headers) {\n  var headersArr = [];\n\n  if (Array.isArray(headers)) {\n    headersArr = headers.map(function (field) {\n      var key = this._normalizeKey(field.key || field[0]),\n          value = field.value || field[1];\n\n      if (typeof value == \"string\") {\n        value = {\n          formatted: false,\n          value: value\n        };\n      }\n\n      if (value.formatted) {\n        return key + \": \" + value.value;\n      }\n\n      return mimelib.foldLine(key + \": \" + this._sanitizeHeaderValue(value.value), 76, false, false, 52);\n    }.bind(this));\n  } else {\n    Object.keys(headers).forEach(function (key) {\n      key = this._normalizeKey(key);\n      headersArr = headersArr.concat([].concat(headers[key]).map(function (field) {\n        if (typeof field == \"string\") {\n          field = {\n            formatted: false,\n            value: field\n          };\n        }\n\n        if (field.formatted) {\n          return key + \": \" + field.value;\n        }\n\n        return mimelib.foldLine(key + \": \" + this._sanitizeHeaderValue(field.value), 76, false, false, 52);\n      }.bind(this)));\n    }.bind(this));\n  }\n\n  return headersArr;\n};\n/**\n * Sanitizes header value by replacing newlines with spaces\n *\n * @param {String} value Header line value\n * @return {String} sanitized header line value\n */\n\n\nMailComposer.prototype._sanitizeHeaderValue = function (value) {\n  value = (value || \"\").toString().replace(/(\\r?\\n|\\r)\\s?/g, \"\").replace(/%0[ad]/gi, \"\");\n  return value;\n};\n/**\n * <p>Converts a structured mimetree into an one dimensional array of\n * components. This includes headers and multipart boundaries as strings,\n * textual and attachment contents are.</p>\n */\n\n\nMailComposer.prototype._flattenMimeTree = function () {\n  var flatTree = [];\n\n  var walkTree = function (node, level) {\n    var contentObject = {};\n    level = level || 0; // if not root element, include headers\n\n    if (level) {\n      flatTree = flatTree.concat(this.compileHeaders(node.headers));\n      flatTree.push('');\n    }\n\n    if (node.textFormat) {\n      contentObject.textFormat = node.textFormat;\n    }\n\n    if (node.contentEncoding) {\n      contentObject.contentEncoding = node.contentEncoding;\n    }\n\n    if (node.contents) {\n      contentObject.contents = node.contents;\n    } else if (node.filePath) {\n      contentObject.filePath = node.filePath;\n\n      if (node.userAgent) {\n        contentObject.userAgent = node.userAgent;\n      }\n    } else if (node.streamSource) {\n      contentObject.streamSource = node.streamSource;\n    }\n\n    if (node.contents || node.filePath || node.streamSource) {\n      flatTree.push(contentObject);\n    } // walk children\n\n\n    for (var i = 0, len = node.childNodes.length; i < len; i++) {\n      if (node.boundary) {\n        flatTree.push(\"--\" + node.boundary);\n      }\n\n      walkTree(node.childNodes[i], level + 1);\n    }\n\n    if (node.boundary && node.childNodes.length) {\n      flatTree.push(\"--\" + node.boundary + \"--\");\n      flatTree.push('');\n    }\n  }.bind(this);\n\n  walkTree(this._message.tree);\n\n  if (flatTree.length && flatTree[flatTree.length - 1] === '') {\n    flatTree.pop();\n  }\n\n  this._message.flatTree = flatTree;\n};\n/**\n * <p>Composes the e-mail body based on the previously generated mime tree</p>\n *\n * <p>Assumes that the linebreak separating headers and contents is already\n * sent</p>\n *\n * <p>Emits 'data' events</p>\n */\n\n\nMailComposer.prototype._composeBody = function () {\n  var flatTree = this._message.flatTree,\n      slice,\n      isObject = false,\n      isEnd = false,\n      curObject;\n\n  var emitElementCallback = function (isEnd) {\n    if (!isEnd) {\n      if (typeof setImmediate == \"function\") {\n        setImmediate(this._composeBody.bind(this));\n      } else {\n        process.nextTick(this._composeBody.bind(this));\n      }\n    } else {\n      if (!this._cacheOutput) {\n        this.emit(\"end\");\n      } else {\n        this._processBufferedOutput();\n      }\n    }\n  };\n\n  this._message.processingStart = this._message.processingStart || 0;\n  this._message.processingPos = this._message.processingPos || 0;\n\n  for (var len = flatTree.length; this._message.processingPos < len; this._message.processingPos++) {\n    isEnd = this._message.processingPos >= len - 1;\n    isObject = typeof flatTree[this._message.processingPos] == \"object\";\n\n    if (isEnd || isObject) {\n      slice = flatTree.slice(this._message.processingStart, isEnd && !isObject ? undefined : this._message.processingPos);\n\n      if (slice && slice.length) {\n        if (!this._cacheOutput) {\n          this.emit(\"data\", new Buffer(slice.join(this._lineEnding) + this._lineEnding, \"utf-8\"));\n        } else {\n          this._outputBuffer += slice.join(this._lineEnding) + this._lineEnding;\n        }\n      }\n\n      if (isObject) {\n        curObject = flatTree[this._message.processingPos];\n        this._message.processingPos++;\n        this._message.processingStart = this._message.processingPos;\n\n        this._emitDataElement(curObject, emitElementCallback.bind(this, isEnd));\n      } else if (isEnd) {\n        if (!this._cacheOutput) {\n          this.emit(\"end\");\n        } else {\n          this._processBufferedOutput();\n        }\n      }\n\n      break;\n    }\n  }\n};\n/**\n * <p>Emits a data event for a text or html body and attachments. If it is a\n * file, stream it</p>\n *\n * <p>If <code>this.options.escapeSMTP</code> is true, replace dots in the\n * beginning of a line with double dots - only valid for QP encoding</p>\n *\n * @param {Object} element Data element descriptor\n * @param {Function} callback Callback function to run when completed\n */\n\n\nMailComposer.prototype._emitDataElement = function (element, callback) {\n  var data = \"\";\n\n  if (element.contents) {\n    switch (element.contentEncoding) {\n      case \"quoted-printable\":\n        data = mimelib.encodeQuotedPrintable(element.contents, false, this.options.charset);\n        break;\n\n      case \"base64\":\n        data = new Buffer(element.contents, \"utf-8\").toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n        break;\n      //case \"7bit\":\n      //case \"8bit\":\n      //case \"binary\":\n\n      default:\n        data = mimelib.foldLine(element.contents, 76, false, element.textFormat == \"flowed\"); //mimelib puts a long whitespace to the beginning of the lines\n\n        data = data.replace(/^[ ]{7}/mg, \"\");\n        break;\n    }\n\n    if (this.options.escapeSMTP) {\n      data = data.replace(/^\\./gm, '..');\n    }\n\n    if (!this._cacheOutput) {\n      this.emit(\"data\", new Buffer(data + this._lineEnding, \"utf-8\"));\n    } else {\n      this._outputBuffer += data + this._lineEnding;\n    }\n\n    if (typeof setImmediate == \"function\") {\n      setImmediate(callback);\n    } else {\n      process.nextTick(callback);\n    }\n\n    return;\n  }\n\n  if (element.filePath) {\n    if (element.filePath.match(/^https?:\\/\\//)) {\n      this._serveStream(urlFetch(element.filePath, {\n        userAgent: element.userAgent\n      }), callback);\n    } else {\n      this._serveFile(element.filePath, callback);\n    }\n\n    return;\n  } else if (element.streamSource) {\n    this._serveStream(element.streamSource, callback);\n\n    return;\n  }\n\n  callback();\n};\n/**\n * <p>Pipes a file to the e-mail stream</p>\n *\n * @param {String} filePath Path to the file\n * @param {Function} callback Callback function to run after completion\n */\n\n\nMailComposer.prototype._serveFile = function (filePath, callback) {\n  fs.stat(filePath, function (err, stat) {\n    if (err || !stat.isFile()) {\n      if (!this._cacheOutput) {\n        this.emit(\"data\", new Buffer(new Buffer(\"<ERROR OPENING FILE>\", \"utf-8\").toString(\"base64\") + this._lineEnding, \"utf-8\"));\n      } else {\n        this._outputBuffer += new Buffer(\"<ERROR OPENING FILE>\", \"utf-8\").toString(\"base64\") + this._lineEnding;\n      }\n\n      if (typeof setImmediate == \"function\") {\n        setImmediate(callback);\n      } else {\n        process.nextTick(callback);\n      }\n\n      return;\n    }\n\n    var stream = fs.createReadStream(filePath);\n\n    this._serveStream(stream, callback);\n  }.bind(this));\n};\n/**\n * <p>Pipes a stream source to the e-mail stream</p>\n *\n * <p>This function resumes the stream and starts sending 76 bytes long base64\n * encoded lines. To achieve this, the incoming stream is divded into\n * chunks of 57 bytes (57/3*4=76) to achieve exactly 76 byte long\n * base64</p>\n *\n * @param {Object} stream Stream to be piped\n * @param {Function} callback Callback function to run after completion\n */\n\n\nMailComposer.prototype._serveStream = function (stream, callback) {\n  var remainder = new Buffer(0);\n  this._currentStream = stream;\n  stream.on(\"error\", function (error) {\n    if (!this._cacheOutput) {\n      this.emit(\"data\", new Buffer(new Buffer(\"<ERROR READING STREAM>\\n\" + error.message, \"utf-8\").toString(\"base64\") + this._lineEnding, \"utf-8\"));\n    } else {\n      this._outputBuffer += new Buffer(\"<ERROR READING STREAM>\\n\" + error.message, \"utf-8\").toString(\"base64\") + this._lineEnding;\n    }\n\n    this._currentStream = false;\n\n    if (typeof setImmediate == \"function\") {\n      setImmediate(callback);\n    } else {\n      process.nextTick(callback);\n    }\n  }.bind(this));\n  stream.on(\"data\", function (chunk) {\n    var data = \"\",\n        len = remainder.length + chunk.length,\n        remainderLength = len % 57,\n        // we use 57 bytes as it composes\n    // a 76 bytes long base64 string\n    buffer = new Buffer(len);\n    remainder.copy(buffer); // copy remainder into the beginning of the new buffer\n\n    chunk.copy(buffer, remainder.length); // copy data chunk after the remainder\n\n    remainder = buffer.slice(len - remainderLength); // create a new remainder\n\n    data = buffer.slice(0, len - remainderLength).toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n\n    if (data.length) {\n      if (!this._cacheOutput) {\n        this.emit(\"data\", new Buffer(data.trim() + this._lineEnding, \"utf-8\"));\n      } else {\n        this._outputBuffer += data.trim() + this._lineEnding;\n      }\n    }\n  }.bind(this));\n  stream.on(\"end\", function () {\n    var data; // stream the remainder (if any)\n\n    if (remainder.length) {\n      data = remainder.toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n\n      if (!this._cacheOutput) {\n        this.emit(\"data\", new Buffer(data.trim() + this._lineEnding, \"utf-8\"));\n      } else {\n        this._outputBuffer += data.trim() + this._lineEnding;\n      }\n    }\n\n    this._currentStream = false;\n\n    if (typeof setImmediate == \"function\") {\n      setImmediate(callback);\n    } else {\n      process.nextTick(callback);\n    }\n  }.bind(this)); // resume streaming if paused\n\n  stream.resume();\n};\n/**\n * <p>Processes buffered output and emits 'end'</p>\n */\n\n\nMailComposer.prototype._processBufferedOutput = function () {\n  var dkimSignature;\n\n  if (this._dkim) {\n    if (dkimSignature = runDKIMSign(this.options.escapeSMTP ? this._outputBuffer.replace(/^\\.\\./mg, \".\") : this._outputBuffer, this._dkim)) {\n      this.emit(\"data\", new Buffer(dkimSignature + this._lineEnding, \"utf-8\"));\n    }\n  }\n\n  this.emit(\"data\", new Buffer(this._outputBuffer, \"utf-8\"));\n\n  if (typeof setImmediate == \"function\") {\n    setImmediate(this.emit.bind(this, \"end\"));\n  } else {\n    process.nextTick(this.emit.bind(this, \"end\"));\n  }\n};\n/* HELPER FUNCTIONS */\n\n/**\n * <p>Normalizes a key name by cpitalizing first chars of words, except for\n * custom keys (starting with \"X-\") that have only uppercase letters, which will\n * not be modified.</p>\n *\n * <p><code>x-mailer</code> will become <code>X-Mailer</code></p>\n *\n * <p>Needed to avoid duplicate header keys</p>\n *\n * @param {String} key Key name\n * @return {String} First chars uppercased\n */\n\n\nMailComposer.prototype._normalizeKey = function (key) {\n  key = (key || \"\").toString().trim(); // If only uppercase letters, leave everything as is\n\n  if (key.match(/^X\\-[A-Z0-9\\-]+$/)) {\n    return key;\n  } // Convert first letter upper case, others lower case\n\n\n  return key.toLowerCase().replace(/^\\S|[\\-\\s]\\S/g, function (c) {\n    return c.toUpperCase();\n  }).replace(/^MIME\\-/i, \"MIME-\").replace(/^DKIM\\-/i, \"DKIM-\");\n};\n/**\n * <p>Tests if a string has high bit (UTF-8) symbols</p>\n *\n * @param {String} str String to be tested for high bit symbols\n * @return {Boolean} true if high bit symbols were found\n */\n\n\nMailComposer.prototype._hasUTFChars = function (str) {\n  var rforeign = /[^\\u0000-\\u007f]/;\n  return !!rforeign.test(str);\n};\n/**\n * <p>Generates a boundary for multipart bodies</p>\n *\n * @return {String} Boundary String\n */\n\n\nMailComposer.prototype._generateBoundary = function () {\n  // \"_\" is not allowed in quoted-printable and \"?\" not in base64\n  return \"----\" + this.options.identityString + \"-?=_\" + ++this._gencounter + \"-\" + Date.now();\n};\n/**\n * <p>Converts a string to mime word format. If the length is longer than\n * <code>maxlen</code>, split it</p>\n *\n * <p>If the string doesn't have any unicode characters return the original\n * string instead</p>\n *\n * @param {String} str String to be encoded\n * @param {String} encoding Either Q for Quoted-Printable or B for Base64\n * @param {Number} [maxlen] Optional length of the resulting string, whitespace will be inserted if needed\n *\n * @return {String} Mime-word encoded string (if needed)\n */\n\n\nMailComposer.prototype._encodeMimeWord = function (str, encoding, maxlen) {\n  return mimelib.encodeMimeWords(str, encoding, maxlen, this.options.charset);\n};\n/**\n * <p>Converts a partial string to mime word format. If the length is longer than\n * <code>maxlen</code>, split it</p>\n *\n * <p>If the string doesn't have any unicode characters return the original\n * string instead</p>\n *\n * @param {String} str String to be encoded\n * @param {String} encoding Either Q for Quoted-Printable or B for Base64\n * @param {Number} [maxlen] Optional length of the resulting string, whitespace will be inserted if needed\n *\n * @return {String} Mime-word encoded string (if needed)\n */\n\n\nMailComposer.prototype._encodePartialMimeWord = function (str, encoding, maxlen) {\n  return str.replace(/[^\\s]*[^\\s\\w\\?!*=+-]+[^\\s]*(\\s+[^\\s]*[^\\s\\w\\?!*=+-]+[^\\s]*)*/g, function (str) {\n    if (!str.length) {\n      return '';\n    }\n\n    return mimelib.encodeMimeWord(str, encoding, this.options.charset, maxlen).replace(/[^\\w\\s\\?!*=+-]/g, function (chr) {\n      var code = chr.charCodeAt(0);\n      return \"=\" + (code < 0x10 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n    });\n  }.bind(this));\n};\n/**\n * <p>Splits a mime-encoded string</p>\n *\n * @param {String} str Input string\n * @param {Number} maxlen Maximum line length\n * @return {Array} split string\n */\n\n\nMailComposer.prototype._splitEncodedString = function (str, maxlen) {\n  var curLine,\n      match,\n      chr,\n      done,\n      lines = [];\n\n  while (str.length) {\n    curLine = str.substr(0, maxlen); // move incomplete escaped char back to main\n\n    if (match = curLine.match(/\\=[0-9A-F]?$/i)) {\n      curLine = curLine.substr(0, match.index);\n    }\n\n    done = false;\n\n    while (!done) {\n      done = true; // check if not middle of a unicode char sequence\n\n      if (match = str.substr(curLine.length).match(/^\\=([0-9A-F]{2})/i)) {\n        chr = parseInt(match[1], 16); // invalid sequence, move one char back anc recheck\n\n        if (chr < 0xC2 && chr > 0x7F) {\n          curLine = curLine.substr(0, curLine.length - 3);\n          done = false;\n        }\n      }\n    }\n\n    if (curLine.length) {\n      lines.push(curLine);\n    }\n\n    str = str.substr(curLine.length);\n  }\n\n  return lines;\n};\n/**\n * Detects image urls and paths from HTML code and replaces with attachments\n * for embedding images inline\n */\n\n\nMailComposer.prototype._convertImagesToInline = function () {\n  if (!this._message.html) {\n    return;\n  }\n\n  this._message.html = this._message.html.replace(/<img[^>]*>/gi, function (imgTag) {\n    return imgTag.replace(/\\b(src\\s*=\\s*(?:['\"]?))([^'\"> ]+)/i, function (src, prefix, url) {\n      var cid;\n      url = he.decode(url || \"\").trim();\n      prefix = prefix || \"\";\n\n      if (url.match(/^https?:\\/\\//i) || url.match(/^\\//i) || url.match(/^[a-z]:\\\\/i)) {\n        cid = crypto.randomBytes(20).toString(\"hex\") + \"@\" + this.options.identityString;\n        this.addAttachment({\n          filePath: url,\n          cid: cid\n        });\n        url = \"cid:\" + cid;\n      }\n\n      return prefix + url;\n    }.bind(this));\n  }.bind(this));\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/mailcomposer/lib/mailcomposer.js"],"names":["Stream","require","utillib","mimelib","he","toPunycode","runDKIMSign","DKIMSign","urlFetch","fs","mime","crypto","module","exports","MailComposer","options","call","readable","charset","toString","trim","toLowerCase","identityString","replace","_lineEnding","_init","inherits","prototype","_headers","_message","_alternatives","_attachments","_relatedAttachments","_envelope","_cacheOutput","_outputBuffer","_dkim","_currentStream","_gencounter","addHeader","key","value","formatted","_normalizeKey","Object","_encodeMimeWord","JSON","stringify","Array","isArray","push","setMessageOption","fields","rewrite","keys","i","len","length","indexOf","_handleValue","useDKIM","dkim","addAlternative","alternative","contentType","contentEncoding","contents","addAttachment","attachment","filename","fileName","filePath","split","pop","lookup","streamSource","pause","resume","getEnvelope","envelope","toKeys","from","concat","shift","to","stamp","streamMessage","setImmediate","_composeMessage","bind","process","nextTick","buildMessage","callback","body","done","on","chunk","error","convertAddress","address","user","_hasUTFChars","encodeMimeWord","name","_encodePartialMimeWord","addresses","apply","map","parseAddresses","userDefined","forEach","group","_convertAddresses","charAt","elm","str","join","values","_getHeader","val","forceEmbeddedImages","_convertImagesToInline","_composeHeader","_flattenMimeTree","_composeBody","headers","useRelated","html","cid","unshift","splice","useMixed","mixedBoundary","_generateBoundary","useAlternative","alternativeBoundary","relatedBoundary","_buildMessageHeaders","_generateBodyStructure","compileHeaders","emit","Buffer","cc","keepBcc","bcc","replyTo","inReplyTo","references","subject","tree","_createMimeNode","currentNode","node","boundary","childNodes","parentNode","_createTextComponent","_createAlternativeComponent","_createAttachmentComponent","text","encoding","useTextType","textFormat","contentDisposition","userAgent","part","method","headersArr","field","foldLine","_sanitizeHeaderValue","flatTree","walkTree","level","contentObject","slice","isObject","isEnd","curObject","emitElementCallback","_processBufferedOutput","processingStart","processingPos","undefined","_emitDataElement","element","data","encodeQuotedPrintable","escapeSMTP","match","_serveStream","_serveFile","stat","err","isFile","stream","createReadStream","remainder","message","remainderLength","buffer","copy","dkimSignature","c","toUpperCase","rforeign","test","Date","now","maxlen","encodeMimeWords","chr","code","charCodeAt","_splitEncodedString","curLine","lines","substr","index","parseInt","imgTag","src","prefix","url","decode","randomBytes"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar Stream = require(\"stream\").Stream,\n    utillib = require(\"util\"),\n    mimelib = require(\"mimelib\"),\n    he = require(\"he\"),\n    toPunycode = require(\"./topunycode\"),\n    runDKIMSign = require(\"dkim-signer\").DKIMSign,\n    urlFetch = require(\"./urlfetch\"),\n    fs = require(\"fs\"),\n    mime = require(\"mime\"),\n    crypto = require(\"crypto\");\n\nmodule.exports.MailComposer = MailComposer;\n\n/**\n * <p>Costructs a MailComposer object. This is a Stream instance so you could\n * pipe the output to a file or send it to network.</p>\n *\n * <p>Possible options properties are:</p>\n *\n * <ul>\n *     <li><b>escapeSMTP</b> - convert dots in the beginning of line to double dots</li>\n *     <li><b>encoding</b> - forced transport encoding (quoted-printable, base64, 7bit or 8bit)</li>\n *     <li><b>charset</b> - forced output charset (utf-8, iso-8859-1 etc)</li>\n *     <li><b>keepBcc</b> - include Bcc: field in the message headers (default is false)</li>\n *     <li><b>forceEmbeddedImages</b> - convert image urls and absolute paths in HTML to embedded attachments (default is false)</li>\n * </ul>\n *\n * <p><b>Events</b></p>\n *\n * <ul>\n *     <li><b>'envelope'</b> - emits an envelope object with <code>from</code> and <code>to</code> (array) addresses.</li>\n *     <li><b>'data'</b> - emits a chunk of data</li>\n *     <li><b>'end'</b> - composing the message has ended</li>\n * </ul>\n *\n * @constructor\n * @param {Object} [options] Optional options object\n */\nfunction MailComposer(options) {\n    Stream.call(this);\n\n    this.readable = true;\n\n    this.options = options || {};\n    this.options.charset = (this.options.charset || \"utf-8\").toString().trim().toLowerCase();\n    this.options.identityString = (this.options.identityString || \"mailcomposer\").toString().trim().replace(/\\s/g, \"-\");\n\n    this._lineEnding = \"\\r\\n\";\n\n    this._init();\n}\nutillib.inherits(MailComposer, Stream);\n\n/**\n * <p>Resets and initializes MailComposer</p>\n */\nMailComposer.prototype._init = function() {\n    /**\n     * <p>Contains all header values</p>\n     * @private\n     */\n    this._headers = {};\n\n    /**\n     * <p>Contains message related values</p>\n     * @private\n     */\n    this._message = {};\n\n    /**\n     * <p>Contains a list of alternatives for text and html body</p>\n     * @private\n     */\n    this._alternatives = [];\n\n    /**\n     * <p>Contains a list of attachments</p>\n     * @private\n     */\n    this._attachments = [];\n\n    /**\n     * <p>Contains a list of attachments that are related to HTML body</p>\n     * @private\n     */\n    this._relatedAttachments = [];\n\n    /**\n     * <p>Contains e-mail addresses for the SMTP</p>\n     * @private\n     */\n    this._envelope = {};\n\n    /**\n     * <p>If set to true, caches the output for further processing (DKIM signing etc.)</p>\n     * @private\n     */\n    this._cacheOutput = false;\n\n    /**\n     * <p>If _cacheOutput is true, caches the output to _outputBuffer</p>\n     * @private\n     */\n    this._outputBuffer = \"\";\n\n    /**\n     * <p>DKIM message signing options, set with useDKIM</p>\n     * @private\n     */\n    this._dkim = false;\n\n    /**\n     * <p>Current stream being processed. Needed for directing backpressure</p>\n     * @private\n     */\n    this._currentStream = false;\n\n    /**\n     * <p>Counter for generating unique mime boundaries etc.</p>\n     * @private\n     */\n    this._gencounter = 0;\n};\n\n/* PUBLIC API */\n\n/**\n * <p>Adds a header field to the headers object</p>\n *\n * @param {String} key Key name\n * @param {String} value Header value\n * @param {Boolean} [formatted] If set to true, the value is not modified and passed to output as is\n */\nMailComposer.prototype.addHeader = function(key, value, formatted) {\n    key = this._normalizeKey(key);\n\n    if (value && Object.prototype.toString.call(value) == \"[object Object]\") {\n        value = this._encodeMimeWord(JSON.stringify(value), \"Q\", 52);\n    } else {\n        value = (value || \"\").toString().trim();\n    }\n\n    if (!key || !value) {\n        return;\n    }\n\n    if (formatted) {\n        value = {\n            formatted: !! formatted,\n            value: value\n        };\n    }\n\n    if (!(key in this._headers)) {\n        this._headers[key] = value;\n    } else {\n        if (!Array.isArray(this._headers[key])) {\n            this._headers[key] = [this._headers[key], value];\n        } else {\n            this._headers[key].push(value);\n        }\n    }\n};\n\n/**\n * <p>Resets and initializes MailComposer</p>\n *\n * <p>Setting an option overwrites an earlier setup for the same keys</p>\n *\n * <p>Possible options:</p>\n *\n * <ul>\n *     <li><b>from</b> - The e-mail address of the sender. All e-mail addresses can be plain <code>sender@server.com</code> or formatted <code>Sender Name &lt;sender@server.com&gt;</code></li>\n *     <li><b>to</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>To:</code> field</li>\n *     <li><b>cc</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>Cc:</code> field</li>\n *     <li><b>bcc</b> - Comma separated list of recipients e-mail addresses that will appear on the <code>Bcc:</code> field</li>\n *     <li><b>replyTo</b> - An e-mail address that will appear on the <code>Reply-To:</code> field</li>\n *     <li><b>subject</b> - The subject of the e-mail</li>\n *     <li><b>body</b> - The plaintext version of the message</li>\n *     <li><b>html</b> - The HTML version of the message</li>\n * </ul>\n *\n * @param {Object} options Message related options\n */\nMailComposer.prototype.setMessageOption = function(options) {\n    var fields = [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\", \"inReplyTo\", \"references\", \"subject\", \"body\", \"html\", \"envelope\"],\n        rewrite = {\n            \"sender\": \"from\",\n            \"reply_to\": \"replyTo\",\n            \"text\": \"body\"\n        };\n\n    options = options || {};\n\n    var keys = Object.keys(options),\n        key, value;\n    for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        value = options[key];\n\n        if (key in rewrite) {\n            key = rewrite[key];\n        }\n\n        if (fields.indexOf(key) >= 0) {\n            this._message[key] = this._handleValue(key, value);\n        }\n    }\n};\n\n/**\n * <p>Setup DKIM for signing generated message. Use with caution as this forces\n * the generated message to be cached entirely before emitted.</p>\n *\n * @param {Object} dkim DKIM signing settings\n * @param {String} [dkim.headerFieldNames=\"from:to:cc:subject\"] Header fields to sign\n * @param {String} dkim.privateKey DKMI private key\n * @param {String} dkim.domainName Domain name to use for signing (ie: \"domain.com\")\n * @param {String} dkim.keySelector Selector for the DKMI public key (ie. \"dkim\" if you have set up a TXT record for \"dkim._domainkey.domain.com\"\n */\nMailComposer.prototype.useDKIM = function(dkim) {\n    this._dkim = dkim || {};\n    this._cacheOutput = true;\n};\n\n/**\n * <p>Adds an alternative to the list</p>\n *\n * <p>Following options are allowed:</p>\n *\n * <ul>\n *     <li><b>fileName</b> - filename for the alternative</li>\n *     <li><b>contentType</b> - content type for the attachmetn (default will be derived from the filename)</li>\n *     <li><b>cid</b> - Content ID value for inline images</li>\n *     <li><b>contents</b> - String or Buffer alternative contents</li>\n *     <li><b>filePath</b> - Path to a file for streaming</li>\n *     <li><b>streamSource</b> - Stream object for arbitrary streams</li>\n * </ul>\n *\n * <p>One of <code>contents</code> or <code>filePath</code> or <code>stream</code>\n * must be specified, otherwise the alternative is not included</p>\n *\n * @param {Object} alternative Alternative info\n */\nMailComposer.prototype.addAlternative = function(alternative) {\n    alternative = alternative || {};\n\n    if (!alternative.contentType) {\n        alternative.contentType = \"application/octet-stream\";\n    }\n\n    if (!alternative.contentEncoding) {\n        alternative.contentEncoding = \"base64\";\n    }\n\n    if (alternative.contents) {\n        this._alternatives.push(alternative);\n    }\n};\n\n/**\n * <p>Adds an attachment to the list</p>\n *\n * <p>Following options are allowed:</p>\n *\n * <ul>\n *     <li><b>fileName</b> - filename for the attachment</li>\n *     <li><b>contentType</b> - content type for the attachmetn (default will be derived from the filename)</li>\n *     <li><b>cid</b> - Content ID value for inline images</li>\n *     <li><b>contents</b> - String or Buffer attachment contents</li>\n *     <li><b>filePath</b> - Path to a file for streaming</li>\n *     <li><b>streamSource</b> - Stream object for arbitrary streams</li>\n * </ul>\n *\n * <p>One of <code>contents</code> or <code>filePath</code> or <code>stream</code>\n * must be specified, otherwise the attachment is not included</p>\n *\n * @param {Object} attachment Attachment info\n */\nMailComposer.prototype.addAttachment = function(attachment) {\n    attachment = attachment || {};\n\n    // Needed for Nodemailer compatibility\n    if (attachment.filename) {\n        attachment.fileName = attachment.filename;\n        delete attachment.filename;\n    }\n\n    if (!attachment.fileName && attachment.filePath) {\n        attachment.fileName = attachment.filePath.split(/[\\/\\\\]/).pop();\n    }\n\n    if (!attachment.contentType) {\n        attachment.contentType = mime.lookup(attachment.fileName || attachment.filePath || \"\");\n    }\n\n    if (attachment.streamSource) {\n        // check for pause and resume support\n        if (typeof attachment.streamSource.pause != \"function\" ||\n            typeof attachment.streamSource.resume != \"function\") {\n            // Unsupported Stream source, skip it\n            return;\n        }\n        attachment.streamSource.pause();\n    }\n\n    if (attachment.filePath || attachment.contents || attachment.streamSource) {\n        this._attachments.push(attachment);\n    }\n};\n\n/**\n * <p>Composes and returns an envelope from the <code>this._envelope</code>\n * object. Needed for the SMTP client</p>\n *\n * <p>Generated envelope is int hte following structure:</p>\n *\n * <pre>\n * {\n *     to: \"address\",\n *     from: [\"list\", \"of\", \"addresses\"]\n * }\n * </pre>\n *\n * <p>Both properties (<code>from</code> and <code>to</code>) are optional\n * and may not exist</p>\n *\n * @return {Object} envelope object with \"from\" and \"to\" params\n */\nMailComposer.prototype.getEnvelope = function() {\n    var envelope = {},\n        toKeys = [\"to\", \"cc\", \"bcc\"],\n        key;\n\n    // If multiple addresses, only use the first one\n    if (this._envelope.from && this._envelope.from.length) {\n        envelope.from = [].concat(this._envelope.from).shift();\n    }\n\n    for (var i = 0, len = toKeys.length; i < len; i++) {\n        key = toKeys[i];\n        if (this._envelope[key] && this._envelope[key].length) {\n            if (!envelope.to) {\n                envelope.to = [];\n            }\n            envelope.to = envelope.to.concat(this._envelope[key]);\n        }\n    }\n\n    // every envelope needs a stamp :)\n    envelope.stamp = \"Postage paid, Par Avion\";\n\n    return envelope;\n};\n\n/**\n * <p>Starts streaming the message</p>\n */\nMailComposer.prototype.streamMessage = function() {\n    if (typeof setImmediate == \"function\") {\n        setImmediate(this._composeMessage.bind(this));\n    } else {\n        process.nextTick(this._composeMessage.bind(this));\n    }\n};\n\n/**\n * <p>Builds the entire message and returns it as a string</p>\n *\n * @param {Function} callback Callback function to run\n */\nMailComposer.prototype.buildMessage = function(callback) {\n    var body = \"\",\n        done = false;\n\n    this.on(\"data\", function(chunk) {\n        body += (chunk || \"\").toString();\n    });\n\n    this.on(\"error\", function(error) {\n        if (done) {\n            return;\n        }\n        done = true;\n        callback(error);\n    });\n\n    this.on(\"end\", function() {\n        if (done) {\n            return;\n        }\n        done = true;\n        callback(null, body);\n    });\n\n    this.streamMessage();\n};\n\n/**\n * <p>Handles backpressure by resuming streaming when possible</p>\n */\nMailComposer.prototype.resume = function() {\n    if (this._currentStream && typeof this._currentStream.resume == \"function\") {\n        this._currentStream.resume();\n    }\n};\n\n/**\n * <p>Handles backpressure by pausing streaming if required</p>\n */\nMailComposer.prototype.pause = function() {\n    if (this._currentStream && typeof this._currentStream.pause == \"function\") {\n        this._currentStream.pause();\n    }\n};\n\nMailComposer.prototype.convertAddress = function(address) {\n    // if user part of the address contains foreign symbols\n    // make a mime word of it\n    address.address = address.address.replace(/^.*?(?=\\@)/, (function(user) {\n        if (this._hasUTFChars(user)) {\n            return mimelib.encodeMimeWord(user, \"Q\", this.options.charset);\n        } else {\n            return user;\n        }\n    }).bind(this));\n\n    // If there's still foreign symbols, then punycode convert it\n    if (this._hasUTFChars(address.address)) {\n        address.address = toPunycode(address.address);\n    }\n\n    if (!address.name) {\n        return address.address;\n    } else if (address.name) {\n        if (this._hasUTFChars(address.name)) {\n            address.name = this._encodePartialMimeWord(address.name, \"Q\", 52);\n        } else {\n            address.name = JSON.stringify(address.name);\n        }\n        return address.name + ' <' + address.address + '>';\n    }\n};\n\n/* PRIVATE API */\n\n/**\n * <p>Handles a message object value, converts addresses etc.</p>\n *\n * @param {String} key Message options key\n * @param {String} value Message options value\n * @return {String} converted value\n */\nMailComposer.prototype._handleValue = function(key, value) {\n    key = (key || \"\").toString();\n\n    var addresses;\n\n    switch (key) {\n        case \"from\":\n        case \"to\":\n        case \"cc\":\n        case \"bcc\":\n        case \"replyTo\":\n            value = (value || \"\").toString().replace(/\\r?\\n|\\r/g, \" \");\n            addresses = [].concat.apply([], [].concat(value).map(mimelib.parseAddresses.bind(mimelib)));\n            if (!this._envelope.userDefined) {\n                this._envelope[key] = [].concat(this._envelope[key] || []);\n                addresses.forEach((function(address) {\n                    [].concat(address.group || address || []).forEach((function(address) {\n                        address = address.address;\n                        if (this._hasUTFChars(address)) {\n                            address = toPunycode(address);\n                        }\n                        if (this._envelope[key].indexOf(address) < 0) {\n                            this._envelope[key].push(address);\n                        }\n                    }).bind(this));\n                }).bind(this));\n            }\n            return this._convertAddresses(addresses);\n\n        case \"inReplyTo\":\n            value = (value || \"\").toString().replace(/\\s/g, \"\");\n            if (value.charAt(0) != \"<\") {\n                value = \"<\" + value;\n            }\n            if (value.charAt(value.length - 1) != \">\") {\n                value = value + \">\";\n            }\n            return value;\n\n        case \"references\":\n            value = [].concat.apply([], [].concat(value || \"\").map(function(elm) {\n                elm = (elm || \"\").toString().trim();\n                return elm.replace(/<[^>]*>/g, function(str) {\n                    return str.replace(/\\s/g, \"\");\n                }).split(/\\s+/);\n            })).map(function(elm) {\n                elm = (elm || \"\").toString().trim();\n                if (elm.charAt(0) != \"<\") {\n                    elm = \"<\" + elm;\n                }\n                if (elm.charAt(elm.length - 1) != \">\") {\n                    elm = elm + \">\";\n                }\n                return elm;\n            });\n\n            return value.join(\" \").trim();\n\n        case \"subject\":\n            value = (value || \"\").toString().replace(/\\r?\\n|\\r/g, \" \");\n            return this._encodeMimeWord(value, \"Q\", 52);\n\n        case \"envelope\":\n\n            this._envelope = {\n                userDefined: true\n            };\n\n            Object.keys(value).forEach((function(key) {\n\n                this._envelope[key] = [];\n\n                [].concat(value[key]).forEach((function(address) {\n                    var addresses = mimelib.parseAddresses(address);\n\n                    this._envelope[key] = this._envelope[key].concat(addresses.map((function(address) {\n                        if (this._hasUTFChars(address.address)) {\n                            return toPunycode(address.address);\n                        } else {\n                            return address.address;\n                        }\n                    }).bind(this)));\n\n                }).bind(this));\n            }).bind(this));\n            break;\n    }\n\n    return value;\n};\n\n/**\n * <p>Handles a list of parsed e-mail addresses, checks encoding etc.</p>\n *\n * @param {Array} value A list or single e-mail address <code>{address:'...', name:'...'}</code>\n * @return {String} Comma separated and encoded list of addresses\n */\nMailComposer.prototype._convertAddresses = function(addresses) {\n    var values = [],\n        address;\n\n    for (var i = 0, len = addresses.length; i < len; i++) {\n        address = addresses[i];\n\n        if (address.address) {\n            values.push(this.convertAddress(address));\n        }\n        if (address.group) {\n            address.name = address.name || \"Recipients\";\n            if (this._hasUTFChars(address.name)) {\n                address.name = this._encodeMimeWord(address.name, \"Q\", 52);\n            } else {\n                address.name = address.name;\n            }\n            values.push(address.name + \":\" + address.group.map(this.convertAddress.bind(this)).join(\", \") + \";\");\n        }\n\n    }\n    return values.join(\", \");\n};\n\n/**\n * <p>Gets a header field</p>\n *\n * @param {String} key Key name\n * @return {String|Array} Header field - if several values, then it's an array\n */\nMailComposer.prototype._getHeader = function(key) {\n    var value;\n\n    key = this._normalizeKey(key);\n\n    value = [].concat(this._headers[key] || []).map(function(val) {\n        return val && val.value || val;\n    });\n\n    switch (value.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return value[0];\n        default:\n            return value;\n    }\n};\n\n/**\n * <p>Generate an e-mail from the described info</p>\n */\nMailComposer.prototype._composeMessage = function() {\n\n    // Preprocess functions\n    if (this.options.forceEmbeddedImages) {\n        this._convertImagesToInline();\n    }\n\n    // Generate headers for the message\n    this._composeHeader();\n\n    // Make the mime tree flat\n    this._flattenMimeTree();\n\n    // Compose message body\n    this._composeBody();\n\n};\n\n/**\n * <p>Composes a header for the message and emits it with a <code>'data'</code>\n * event</p>\n *\n * <p>Also checks and build a structure for the message (is it a multipart message\n * and does it need a boundary etc.)</p>\n *\n * <p>By default the message is not a multipart. If the message containes both\n * plaintext and html contents, an alternative block is used. it it containes\n * attachments, a mixed block is used. If both alternative and mixed exist, then\n * alternative resides inside mixed.</p>\n */\nMailComposer.prototype._composeHeader = function() {\n    var headers = [],\n        i, len;\n\n    // if an attachment uses content-id and is linked from the html\n    // then it should be placed in a separate \"related\" part with the html\n    this._message.useRelated = false;\n    if (this._message.html && (len = this._attachments.length)) {\n\n        for (i = len - 1; i >= 0; i--) {\n            if (this._attachments[i].cid &&\n                this._message.html.indexOf(\"cid:\" + this._attachments[i].cid) >= 0) {\n                this._message.useRelated = true;\n                this._relatedAttachments.unshift(this._attachments[i]);\n                this._attachments.splice(i, 1);\n            }\n        }\n\n    }\n\n    if (this._attachments.length) {\n        this._message.useMixed = true;\n        this._message.mixedBoundary = this._generateBoundary();\n    } else {\n        this._message.useMixed = false;\n    }\n\n    if ([].concat(this._message.body || []).concat(this._message.html || []).concat(this._alternatives || []).length > 1) {\n        this._message.useAlternative = true;\n        this._message.alternativeBoundary = this._generateBoundary();\n    } else {\n        this._message.useAlternative = false;\n    }\n\n    // let's do it here, so the counter in the boundary would look better\n    if (this._message.useRelated) {\n        this._message.relatedBoundary = this._generateBoundary();\n    }\n\n    if (!this._message.html && !this._message.body) {\n        // If there's nothing to show, show a linebreak\n        this._message.body = this._lineEnding;\n    }\n\n    this._buildMessageHeaders();\n    this._generateBodyStructure();\n\n    // Compile header lines\n    headers = this.compileHeaders(this._headers);\n    headers.push(\"MIME-Version: 1.0\");\n\n    if (!this._cacheOutput) {\n        this.emit(\"data\", new Buffer(headers.join(this._lineEnding) + this._lineEnding + this._lineEnding, \"utf-8\"));\n    } else {\n        this._outputBuffer += headers.join(this._lineEnding) + this._lineEnding + this._lineEnding;\n    }\n};\n\n/**\n * <p>Uses data from the <code>this._message</code> object to build headers</p>\n */\nMailComposer.prototype._buildMessageHeaders = function() {\n\n    // FROM\n    if (this._message.from && this._message.from.length) {\n        [].concat(this._message.from).forEach((function(from) {\n            this.addHeader(\"From\", from);\n        }).bind(this));\n    }\n\n    // TO\n    if (this._message.to && this._message.to.length) {\n        [].concat(this._message.to).forEach((function(to) {\n            this.addHeader(\"To\", to);\n        }).bind(this));\n    }\n\n    // CC\n    if (this._message.cc && this._message.cc.length) {\n        [].concat(this._message.cc).forEach((function(cc) {\n            this.addHeader(\"Cc\", cc);\n        }).bind(this));\n    }\n\n    // BCC\n    // By default not included, set options.keepBcc to true to keep\n    if (this.options.keepBcc) {\n        if (this._message.bcc && this._message.bcc.length) {\n            [].concat(this._message.bcc).forEach((function(bcc) {\n                this.addHeader(\"Bcc\", bcc);\n            }).bind(this));\n        }\n    }\n\n    // REPLY-TO\n    if (this._message.replyTo && this._message.replyTo.length) {\n        [].concat(this._message.replyTo).forEach((function(replyTo) {\n            this.addHeader(\"Reply-To\", replyTo);\n        }).bind(this));\n    }\n\n    // If in-reply-to message id is missing from the references, add it automatically\n    if (this._message.inReplyTo && this._message.inReplyTo.length &&\n        (this._message.references || \"\").toString().indexOf(this._message.inReplyTo) < 0) {\n        this._message.references = [].\n        concat(this._message.inReplyTo).\n        concat(this._message.references || []).\n        join(\" \");\n    }\n\n    // REFERENCES\n    if (this._message.references && this._message.references.length) {\n        this.addHeader(\"References\", this._message.references);\n    }\n\n    // IN-REPLY-TO\n    if (this._message.inReplyTo && this._message.inReplyTo.length) {\n        this.addHeader(\"In-Reply-To\", this._message.inReplyTo);\n    }\n\n    // SUBJECT\n    if (this._message.subject) {\n        this.addHeader(\"Subject\", this._message.subject);\n    }\n};\n\n/**\n * <p>Generates the structure (mime tree) of the body. This sets up multipart\n * structure, individual part headers, boundaries etc.</p>\n *\n * <p>The headers of the root element will be appended to the message\n * headers</p>\n */\nMailComposer.prototype._generateBodyStructure = function() {\n\n    var tree = this._createMimeNode(),\n        currentNode, node,\n        i, len;\n\n    if (this._message.useMixed) {\n\n        node = this._createMimeNode();\n        node.boundary = this._message.mixedBoundary;\n        node.headers.push([\"Content-Type\", \"multipart/mixed; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n\n        if (currentNode) {\n            currentNode.childNodes.push(node);\n            node.parentNode = currentNode;\n        } else {\n            tree = node;\n        }\n        currentNode = node;\n\n    }\n\n    if (this._message.useAlternative) {\n\n        node = this._createMimeNode();\n        node.boundary = this._message.alternativeBoundary;\n        node.headers.push([\"Content-Type\", \"multipart/alternative; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n        if (currentNode) {\n            currentNode.childNodes.push(node);\n            node.parentNode = currentNode;\n        } else {\n            tree = node;\n        }\n        currentNode = node;\n\n    }\n\n    if (this._message.body) {\n        node = this._createTextComponent(this._message.body, \"text/plain\");\n        if (currentNode) {\n            currentNode.childNodes.push(node);\n            node.parentNode = currentNode;\n        } else {\n            tree = node;\n        }\n    }\n\n    if (this._message.useRelated) {\n\n        node = this._createMimeNode();\n        node.boundary = this._message.relatedBoundary;\n        node.headers.push([\"Content-Type\", \"multipart/related; boundary=\\\"\" + node.boundary + \"\\\"\"]);\n        if (currentNode) {\n            currentNode.childNodes.push(node);\n            node.parentNode = currentNode;\n        } else {\n            tree = node;\n        }\n        currentNode = node;\n\n    }\n\n    if (this._message.html) {\n        node = this._createTextComponent(this._message.html, \"text/html\");\n        if (currentNode) {\n            currentNode.childNodes.push(node);\n            node.parentNode = currentNode;\n        } else {\n            tree = node;\n        }\n    }\n\n    // Alternatives\n    if (this._alternatives && this._alternatives.length) {\n        for (i = 0, len = this._alternatives.length; i < len; i++) {\n            node = this._createAlternativeComponent(this._alternatives[i]);\n            if (currentNode) {\n                currentNode.childNodes.push(node);\n                node.parentNode = currentNode;\n            } else {\n                tree = node;\n            }\n        }\n    }\n\n    // Related attachments are added to the multipart/related part\n    if (this._relatedAttachments && this._relatedAttachments.length) {\n        for (i = 0, len = this._relatedAttachments.length; i < len; i++) {\n            node = this._createAttachmentComponent(this._relatedAttachments[i]);\n            node.parentNode = currentNode;\n            currentNode.childNodes.push(node);\n        }\n    }\n\n    // Attachments are added to the first element (should be multipart/mixed)\n    currentNode = tree;\n    if (this._attachments && this._attachments.length) {\n        for (i = 0, len = this._attachments.length; i < len; i++) {\n            node = this._createAttachmentComponent(this._attachments[i]);\n            node.parentNode = currentNode;\n            currentNode.childNodes.push(node);\n        }\n    }\n\n    // Add the headers from the root element to the main headers list\n    for (i = 0, len = tree.headers.length; i < len; i++) {\n        this.addHeader(tree.headers[i][0], tree.headers[i][1]);\n    }\n\n    this._message.tree = tree;\n};\n\n/**\n * <p>Creates a mime tree node for a text component (plaintext, HTML)</p>\n *\n * @param {String} text Text contents for the component\n * @param {String} [contentType=\"text/plain\"] Content type for the text component\n * @return {Object} Mime tree node\n */\nMailComposer.prototype._createTextComponent = function(text, contentType) {\n    var node = this._createMimeNode();\n\n    node.contentEncoding = (this.options.encoding || \"quoted-printable\").toLowerCase().trim();\n    node.useTextType = true;\n\n    contentType = [contentType || \"text/plain\"];\n    contentType.push(\"charset=\" + this.options.charset);\n\n    if ([\"7bit\", \"8bit\", \"binary\"].indexOf(node.contentEncoding) >= 0) {\n        node.textFormat = \"flowed\";\n        contentType.push(\"format=\" + node.textFormat);\n    }\n\n    node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n    node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n\n    node.contents = text;\n\n    return node;\n};\n\n/**\n * <p>Creates a mime tree node for an attachment component</p>\n *\n * @param {Object} attachment Attachment info for the component\n * @return {Object} Mime tree node\n */\nMailComposer.prototype._createAttachmentComponent = function(attachment) {\n    var node = this._createMimeNode(),\n        contentType = [attachment.contentType],\n        contentDisposition = [attachment.contentDisposition || \"attachment\"],\n        fileName;\n\n    node.contentEncoding = \"base64\";\n\n    if (attachment.fileName) {\n        fileName = this._encodeMimeWord(attachment.fileName, \"Q\", 1024).replace(/\"/g, \"\\\\\\\"\");\n        contentType.push(\"name=\\\"\" + fileName + \"\\\"\");\n        contentDisposition.push(\"filename=\\\"\" + fileName + \"\\\"\");\n    }\n\n    node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n    node.headers.push([\"Content-Disposition\", contentDisposition.join(\"; \")]);\n    node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n\n    if (attachment.cid) {\n        node.headers.push([\"Content-Id\", \"<\" + this._encodeMimeWord(attachment.cid) + \">\"]);\n    }\n\n    if (attachment.contents) {\n        node.contents = attachment.contents;\n    } else if (attachment.filePath) {\n        node.filePath = attachment.filePath;\n        if (attachment.userAgent) {\n            node.userAgent = attachment.userAgent;\n        }\n    } else if (attachment.streamSource) {\n        node.streamSource = attachment.streamSource;\n    }\n\n    return node;\n};\n\n/**\n * <p>Creates a mime tree node for an alternative text component (ODF/DOC/etc)</p>\n *\n * @param {Object} alternative Alternative info for the component\n * @return {Object} Mime tree node\n */\nMailComposer.prototype._createAlternativeComponent = function(alternative) {\n    var node = this._createMimeNode(),\n        contentType = alternative.contentType.split(\";\").map(function(part) {\n            return (part || \"\").trim();\n        });\n\n    node.contentEncoding = alternative.contentEncoding || \"base64\";\n\n    if ([\"7bit\", \"8bit\", \"binary\"].indexOf(node.contentEncoding) >= 0) {\n        node.textFormat = \"flowed\";\n        contentType.push(\"format=\" + node.textFormat);\n    }\n\n    if (alternative.charset) {\n        contentType.push(\"charset=\" + alternative.charset);\n    }\n    if (alternative.method) {\n        contentType.push(\"method=\" + alternative.method);\n    }\n    node.headers.push([\"Content-Type\", contentType.join(\"; \")]);\n    node.headers.push([\"Content-Transfer-Encoding\", node.contentEncoding]);\n\n    node.contents = alternative.contents;\n\n    return node;\n};\n\n/**\n * <p>Creates an empty mime tree node</p>\n *\n * @return {Object} Mime tree node\n */\nMailComposer.prototype._createMimeNode = function() {\n    return {\n        childNodes: [],\n        headers: [],\n        parentNode: null\n    };\n};\n\n/**\n * <p>Compiles headers object into an array of header lines. If needed, the\n * lines are folded</p>\n *\n * @param {Object|Array} headers An object with headers in the form of\n *        <code>{key:value}</code> or <ocde>[[key, value]]</code> or\n *        <code>[{key:key, value: value}]</code>\n * @return {Array} A list of header lines. Can be joined with \\r\\n\n */\nMailComposer.prototype.compileHeaders = function(headers) {\n    var headersArr = [];\n\n    if (Array.isArray(headers)) {\n        headersArr = headers.map((function(field) {\n            var key = this._normalizeKey(field.key || field[0]),\n                value = field.value || field[1];\n\n            if (typeof value == \"string\") {\n                value = {\n                    formatted: false,\n                    value: value\n                };\n            }\n\n            if (value.formatted) {\n                return key + \": \" + value.value;\n            }\n\n            return mimelib.foldLine(key + \": \" + this._sanitizeHeaderValue(value.value), 76, false, false, 52);\n        }).bind(this));\n    } else {\n        Object.keys(headers).forEach(function(key) {\n            key = this._normalizeKey(key);\n\n            headersArr = headersArr.concat([].concat(headers[key]).map((function(field) {\n\n                if (typeof field == \"string\") {\n                    field = {\n                        formatted: false,\n                        value: field\n                    };\n                }\n\n                if (field.formatted) {\n                    return key + \": \" + field.value;\n                }\n                return mimelib.foldLine(key + \": \" + this._sanitizeHeaderValue(field.value), 76, false, false, 52);\n            }).bind(this)));\n        }.bind(this));\n    }\n\n    return headersArr;\n};\n\n/**\n * Sanitizes header value by replacing newlines with spaces\n *\n * @param {String} value Header line value\n * @return {String} sanitized header line value\n */\nMailComposer.prototype._sanitizeHeaderValue = function(value) {\n    value = (value || \"\").toString().\n    replace(/(\\r?\\n|\\r)\\s?/g, \"\").\n    replace(/%0[ad]/gi, \"\");\n    return value;\n};\n\n/**\n * <p>Converts a structured mimetree into an one dimensional array of\n * components. This includes headers and multipart boundaries as strings,\n * textual and attachment contents are.</p>\n */\nMailComposer.prototype._flattenMimeTree = function() {\n    var flatTree = [];\n\n    var walkTree = (function(node, level) {\n        var contentObject = {};\n        level = level || 0;\n\n        // if not root element, include headers\n        if (level) {\n            flatTree = flatTree.concat(this.compileHeaders(node.headers));\n            flatTree.push('');\n        }\n\n        if (node.textFormat) {\n            contentObject.textFormat = node.textFormat;\n        }\n\n        if (node.contentEncoding) {\n            contentObject.contentEncoding = node.contentEncoding;\n        }\n\n        if (node.contents) {\n            contentObject.contents = node.contents;\n        } else if (node.filePath) {\n            contentObject.filePath = node.filePath;\n            if (node.userAgent) {\n                contentObject.userAgent = node.userAgent;\n            }\n        } else if (node.streamSource) {\n            contentObject.streamSource = node.streamSource;\n        }\n\n        if (node.contents || node.filePath || node.streamSource) {\n            flatTree.push(contentObject);\n        }\n\n        // walk children\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\n            if (node.boundary) {\n                flatTree.push(\"--\" + node.boundary);\n            }\n            walkTree(node.childNodes[i], level + 1);\n        }\n        if (node.boundary && node.childNodes.length) {\n            flatTree.push(\"--\" + node.boundary + \"--\");\n            flatTree.push('');\n        }\n    }).bind(this);\n\n    walkTree(this._message.tree);\n\n    if (flatTree.length && flatTree[flatTree.length - 1] === '') {\n        flatTree.pop();\n    }\n\n    this._message.flatTree = flatTree;\n};\n\n/**\n * <p>Composes the e-mail body based on the previously generated mime tree</p>\n *\n * <p>Assumes that the linebreak separating headers and contents is already\n * sent</p>\n *\n * <p>Emits 'data' events</p>\n */\nMailComposer.prototype._composeBody = function() {\n    var flatTree = this._message.flatTree,\n        slice, isObject = false,\n        isEnd = false,\n        curObject;\n\n    var emitElementCallback = function(isEnd) {\n        if (!isEnd) {\n            if (typeof setImmediate == \"function\") {\n                setImmediate(this._composeBody.bind(this));\n            } else {\n                process.nextTick(this._composeBody.bind(this));\n            }\n        } else {\n            if (!this._cacheOutput) {\n                this.emit(\"end\");\n            } else {\n                this._processBufferedOutput();\n            }\n        }\n    };\n\n    this._message.processingStart = this._message.processingStart || 0;\n    this._message.processingPos = this._message.processingPos || 0;\n\n    for (var len = flatTree.length; this._message.processingPos < len; this._message.processingPos++) {\n\n        isEnd = this._message.processingPos >= len - 1;\n        isObject = typeof flatTree[this._message.processingPos] == \"object\";\n\n        if (isEnd || isObject) {\n\n            slice = flatTree.slice(this._message.processingStart, isEnd && !isObject ? undefined : this._message.processingPos);\n            if (slice && slice.length) {\n                if (!this._cacheOutput) {\n                    this.emit(\"data\", new Buffer(slice.join(this._lineEnding) + this._lineEnding, \"utf-8\"));\n                } else {\n                    this._outputBuffer += slice.join(this._lineEnding) + this._lineEnding;\n                }\n            }\n\n            if (isObject) {\n                curObject = flatTree[this._message.processingPos];\n\n                this._message.processingPos++;\n                this._message.processingStart = this._message.processingPos;\n\n                this._emitDataElement(curObject, emitElementCallback.bind(this, isEnd));\n\n            } else if (isEnd) {\n                if (!this._cacheOutput) {\n                    this.emit(\"end\");\n                } else {\n                    this._processBufferedOutput();\n                }\n            }\n            break;\n        }\n\n    }\n};\n\n/**\n * <p>Emits a data event for a text or html body and attachments. If it is a\n * file, stream it</p>\n *\n * <p>If <code>this.options.escapeSMTP</code> is true, replace dots in the\n * beginning of a line with double dots - only valid for QP encoding</p>\n *\n * @param {Object} element Data element descriptor\n * @param {Function} callback Callback function to run when completed\n */\nMailComposer.prototype._emitDataElement = function(element, callback) {\n\n    var data = \"\";\n\n    if (element.contents) {\n        switch (element.contentEncoding) {\n            case \"quoted-printable\":\n                data = mimelib.encodeQuotedPrintable(element.contents, false, this.options.charset);\n                break;\n            case \"base64\":\n                data = new Buffer(element.contents, \"utf-8\").toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n                break;\n                //case \"7bit\":\n                //case \"8bit\":\n                //case \"binary\":\n            default:\n                data = mimelib.foldLine(element.contents, 76, false, element.textFormat == \"flowed\");\n                //mimelib puts a long whitespace to the beginning of the lines\n                data = data.replace(/^[ ]{7}/mg, \"\");\n                break;\n        }\n\n        if (this.options.escapeSMTP) {\n            data = data.replace(/^\\./gm, '..');\n        }\n\n        if (!this._cacheOutput) {\n            this.emit(\"data\", new Buffer(data + this._lineEnding, \"utf-8\"));\n        } else {\n            this._outputBuffer += data + this._lineEnding;\n        }\n\n        if (typeof setImmediate == \"function\") {\n            setImmediate(callback);\n        } else {\n            process.nextTick(callback);\n        }\n        return;\n    }\n\n    if (element.filePath) {\n        if (element.filePath.match(/^https?:\\/\\//)) {\n            this._serveStream(urlFetch(element.filePath, {\n                userAgent: element.userAgent\n            }), callback);\n        } else {\n            this._serveFile(element.filePath, callback);\n        }\n        return;\n    } else if (element.streamSource) {\n        this._serveStream(element.streamSource, callback);\n        return;\n    }\n\n    callback();\n};\n\n/**\n * <p>Pipes a file to the e-mail stream</p>\n *\n * @param {String} filePath Path to the file\n * @param {Function} callback Callback function to run after completion\n */\nMailComposer.prototype._serveFile = function(filePath, callback) {\n    fs.stat(filePath, (function(err, stat) {\n        if (err || !stat.isFile()) {\n\n\n            if (!this._cacheOutput) {\n                this.emit(\"data\", new Buffer(new Buffer(\"<ERROR OPENING FILE>\",\n                    \"utf-8\").toString(\"base64\") + this._lineEnding, \"utf-8\"));\n            } else {\n                this._outputBuffer += new Buffer(\"<ERROR OPENING FILE>\",\n                    \"utf-8\").toString(\"base64\") + this._lineEnding;\n            }\n\n            if (typeof setImmediate == \"function\") {\n                setImmediate(callback);\n            } else {\n                process.nextTick(callback);\n            }\n            return;\n        }\n\n        var stream = fs.createReadStream(filePath);\n\n        this._serveStream(stream, callback);\n\n    }).bind(this));\n};\n\n/**\n * <p>Pipes a stream source to the e-mail stream</p>\n *\n * <p>This function resumes the stream and starts sending 76 bytes long base64\n * encoded lines. To achieve this, the incoming stream is divded into\n * chunks of 57 bytes (57/3*4=76) to achieve exactly 76 byte long\n * base64</p>\n *\n * @param {Object} stream Stream to be piped\n * @param {Function} callback Callback function to run after completion\n */\nMailComposer.prototype._serveStream = function(stream, callback) {\n    var remainder = new Buffer(0);\n\n    this._currentStream = stream;\n\n    stream.on(\"error\", (function(error) {\n        if (!this._cacheOutput) {\n            this.emit(\"data\", new Buffer(new Buffer(\"<ERROR READING STREAM>\\n\" + error.message,\n                \"utf-8\").toString(\"base64\") + this._lineEnding, \"utf-8\"));\n        } else {\n            this._outputBuffer += new Buffer(\"<ERROR READING STREAM>\\n\" + error.message,\n                \"utf-8\").toString(\"base64\") + this._lineEnding;\n        }\n\n        this._currentStream = false;\n\n        if (typeof setImmediate == \"function\") {\n            setImmediate(callback);\n        } else {\n            process.nextTick(callback);\n        }\n    }).bind(this));\n\n    stream.on(\"data\", (function(chunk) {\n        var data = \"\",\n            len = remainder.length + chunk.length,\n            remainderLength = len % 57, // we use 57 bytes as it composes\n            // a 76 bytes long base64 string\n            buffer = new Buffer(len);\n\n        remainder.copy(buffer); // copy remainder into the beginning of the new buffer\n        chunk.copy(buffer, remainder.length); // copy data chunk after the remainder\n        remainder = buffer.slice(len - remainderLength); // create a new remainder\n\n        data = buffer.slice(0, len - remainderLength).toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n\n        if (data.length) {\n            if (!this._cacheOutput) {\n                this.emit(\"data\", new Buffer(data.trim() + this._lineEnding, \"utf-8\"));\n            } else {\n                this._outputBuffer += data.trim() + this._lineEnding;\n            }\n        }\n    }).bind(this));\n\n    stream.on(\"end\", (function() {\n        var data;\n\n        // stream the remainder (if any)\n        if (remainder.length) {\n            data = remainder.toString(\"base64\").replace(/.{76}/g, \"$&\\r\\n\");\n            if (!this._cacheOutput) {\n                this.emit(\"data\", new Buffer(data.trim() + this._lineEnding, \"utf-8\"));\n            } else {\n                this._outputBuffer += data.trim() + this._lineEnding;\n            }\n        }\n\n        this._currentStream = false;\n\n        if (typeof setImmediate == \"function\") {\n            setImmediate(callback);\n        } else {\n            process.nextTick(callback);\n        }\n    }).bind(this));\n\n    // resume streaming if paused\n    stream.resume();\n};\n\n/**\n * <p>Processes buffered output and emits 'end'</p>\n */\nMailComposer.prototype._processBufferedOutput = function() {\n    var dkimSignature;\n\n    if (this._dkim) {\n        if ((dkimSignature = runDKIMSign(this.options.escapeSMTP ? this._outputBuffer.replace(/^\\.\\./mg, \".\") : this._outputBuffer, this._dkim))) {\n            this.emit(\"data\", new Buffer(dkimSignature + this._lineEnding, \"utf-8\"));\n        }\n    }\n\n    this.emit(\"data\", new Buffer(this._outputBuffer, \"utf-8\"));\n\n    if (typeof setImmediate == \"function\") {\n        setImmediate(this.emit.bind(this, \"end\"));\n    } else {\n        process.nextTick(this.emit.bind(this, \"end\"));\n    }\n};\n\n/* HELPER FUNCTIONS */\n\n/**\n * <p>Normalizes a key name by cpitalizing first chars of words, except for\n * custom keys (starting with \"X-\") that have only uppercase letters, which will\n * not be modified.</p>\n *\n * <p><code>x-mailer</code> will become <code>X-Mailer</code></p>\n *\n * <p>Needed to avoid duplicate header keys</p>\n *\n * @param {String} key Key name\n * @return {String} First chars uppercased\n */\nMailComposer.prototype._normalizeKey = function(key) {\n    key = (key || \"\").toString().trim();\n\n    // If only uppercase letters, leave everything as is\n    if (key.match(/^X\\-[A-Z0-9\\-]+$/)) {\n        return key;\n    }\n\n    // Convert first letter upper case, others lower case\n    return key.\n    toLowerCase().\n    replace(/^\\S|[\\-\\s]\\S/g, function(c) {\n        return c.toUpperCase();\n    }).\n    replace(/^MIME\\-/i, \"MIME-\").\n    replace(/^DKIM\\-/i, \"DKIM-\");\n};\n\n/**\n * <p>Tests if a string has high bit (UTF-8) symbols</p>\n *\n * @param {String} str String to be tested for high bit symbols\n * @return {Boolean} true if high bit symbols were found\n */\nMailComposer.prototype._hasUTFChars = function(str) {\n    var rforeign = /[^\\u0000-\\u007f]/;\n    return !!rforeign.test(str);\n};\n\n/**\n * <p>Generates a boundary for multipart bodies</p>\n *\n * @return {String} Boundary String\n */\nMailComposer.prototype._generateBoundary = function() {\n    // \"_\" is not allowed in quoted-printable and \"?\" not in base64\n    return \"----\" + this.options.identityString + \"-?=_\" + (++this._gencounter) + \"-\" + Date.now();\n};\n\n/**\n * <p>Converts a string to mime word format. If the length is longer than\n * <code>maxlen</code>, split it</p>\n *\n * <p>If the string doesn't have any unicode characters return the original\n * string instead</p>\n *\n * @param {String} str String to be encoded\n * @param {String} encoding Either Q for Quoted-Printable or B for Base64\n * @param {Number} [maxlen] Optional length of the resulting string, whitespace will be inserted if needed\n *\n * @return {String} Mime-word encoded string (if needed)\n */\nMailComposer.prototype._encodeMimeWord = function(str, encoding, maxlen) {\n    return mimelib.encodeMimeWords(str, encoding, maxlen, this.options.charset);\n};\n\n/**\n * <p>Converts a partial string to mime word format. If the length is longer than\n * <code>maxlen</code>, split it</p>\n *\n * <p>If the string doesn't have any unicode characters return the original\n * string instead</p>\n *\n * @param {String} str String to be encoded\n * @param {String} encoding Either Q for Quoted-Printable or B for Base64\n * @param {Number} [maxlen] Optional length of the resulting string, whitespace will be inserted if needed\n *\n * @return {String} Mime-word encoded string (if needed)\n */\nMailComposer.prototype._encodePartialMimeWord = function(str, encoding, maxlen) {\n    return str.replace(/[^\\s]*[^\\s\\w\\?!*=+-]+[^\\s]*(\\s+[^\\s]*[^\\s\\w\\?!*=+-]+[^\\s]*)*/g, (function(str) {\n        if (!str.length) {\n            return '';\n        }\n\n        return mimelib.encodeMimeWord(str, encoding, this.options.charset, maxlen)\n            .replace(/[^\\w\\s\\?!*=+-]/g, function(chr) {\n                var code = chr.charCodeAt(0);\n                return \"=\" + (code < 0x10 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n            });\n    }).bind(this));\n};\n\n/**\n * <p>Splits a mime-encoded string</p>\n *\n * @param {String} str Input string\n * @param {Number} maxlen Maximum line length\n * @return {Array} split string\n */\nMailComposer.prototype._splitEncodedString = function(str, maxlen) {\n    var curLine, match, chr, done,\n        lines = [];\n\n    while (str.length) {\n        curLine = str.substr(0, maxlen);\n\n        // move incomplete escaped char back to main\n        if ((match = curLine.match(/\\=[0-9A-F]?$/i))) {\n            curLine = curLine.substr(0, match.index);\n        }\n\n        done = false;\n        while (!done) {\n            done = true;\n            // check if not middle of a unicode char sequence\n            if ((match = str.substr(curLine.length).match(/^\\=([0-9A-F]{2})/i))) {\n                chr = parseInt(match[1], 16);\n                // invalid sequence, move one char back anc recheck\n                if (chr < 0xC2 && chr > 0x7F) {\n                    curLine = curLine.substr(0, curLine.length - 3);\n                    done = false;\n                }\n            }\n        }\n\n        if (curLine.length) {\n            lines.push(curLine);\n        }\n        str = str.substr(curLine.length);\n    }\n\n    return lines;\n};\n\n/**\n * Detects image urls and paths from HTML code and replaces with attachments\n * for embedding images inline\n */\nMailComposer.prototype._convertImagesToInline = function() {\n    if (!this._message.html) {\n        return;\n    }\n\n    this._message.html = this._message.html.replace(/<img[^>]*>/gi, (function(imgTag) {\n        return imgTag.replace(/\\b(src\\s*=\\s*(?:['\"]?))([^'\"> ]+)/i, (function(src, prefix, url) {\n            var cid;\n            url = he.decode(url || \"\").trim();\n            prefix = prefix || \"\";\n\n            if (url.match(/^https?:\\/\\//i) || url.match(/^\\//i) || url.match(/^[a-z]:\\\\/i)) {\n                cid = crypto.randomBytes(20).toString(\"hex\") + \"@\" + this.options.identityString;\n                this.addAttachment({\n                    filePath: url,\n                    cid: cid\n                });\n                url = \"cid:\" + cid;\n            }\n\n            return prefix + url;\n        }).bind(this));\n    }).bind(this));\n};"]},"metadata":{},"sourceType":"script"}