{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar AWS = require('./core');\n\nvar apis = require('aws-sdk-apis'); // define services using map\n\n\napis.services.forEach(function (identifier) {\n  var name = apis.serviceName(identifier);\n  var versions = apis.serviceVersions(identifier);\n  AWS[name] = AWS.Service.defineService(identifier, versions); // load any customizations from lib/services/<svcidentifier>.js\n\n  var svcFile = path.join(__dirname, 'services', identifier + '.js');\n  if (fs.existsSync(svcFile)) require('./services/' + identifier);\n});","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/services.js"],"names":["fs","require","path","AWS","apis","services","forEach","identifier","name","serviceName","versions","serviceVersions","Service","defineService","svcFile","join","__dirname","existsSync"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,cAAD,CAAlB,C,CAEA;;;AACAG,IAAI,CAACC,QAAL,CAAcC,OAAd,CAAsB,UAASC,UAAT,EAAqB;AACzC,MAAIC,IAAI,GAAGJ,IAAI,CAACK,WAAL,CAAiBF,UAAjB,CAAX;AACA,MAAIG,QAAQ,GAAGN,IAAI,CAACO,eAAL,CAAqBJ,UAArB,CAAf;AACAJ,EAAAA,GAAG,CAACK,IAAD,CAAH,GAAYL,GAAG,CAACS,OAAJ,CAAYC,aAAZ,CAA0BN,UAA1B,EAAsCG,QAAtC,CAAZ,CAHyC,CAKzC;;AACA,MAAII,OAAO,GAAGZ,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqB,UAArB,EAAiCT,UAAU,GAAG,KAA9C,CAAd;AACA,MAAIP,EAAE,CAACiB,UAAH,CAAcH,OAAd,CAAJ,EAA4Bb,OAAO,CAAC,gBAAgBM,UAAjB,CAAP;AAC7B,CARD","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar AWS = require('./core');\nvar apis = require('aws-sdk-apis');\n\n// define services using map\napis.services.forEach(function(identifier) {\n  var name = apis.serviceName(identifier);\n  var versions = apis.serviceVersions(identifier);\n  AWS[name] = AWS.Service.defineService(identifier, versions);\n\n  // load any customizations from lib/services/<svcidentifier>.js\n  var svcFile = path.join(__dirname, 'services', identifier + '.js');\n  if (fs.existsSync(svcFile)) require('./services/' + identifier);\n});\n"]},"metadata":{},"sourceType":"script"}