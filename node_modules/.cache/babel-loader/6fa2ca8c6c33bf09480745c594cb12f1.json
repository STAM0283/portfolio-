{"ast":null,"code":"// Magic tag, hardcoded into parser\n\n/**\n * Forces the content to not be auto-escaped. All swig instructions will be ignored and the content will be rendered exactly as it was given.\n *\n * @alias raw\n *\n * @example\n * // foobar = '<p>'\n * {% raw %}{{ foobar }}{% endraw %}\n * // => {{ foobar }}\n *\n */\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  return compiler(content, parents, options, blockName);\n};\n\nexports.parse = function (str, line, parser) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected token \"' + token.match + '\" in raw tag on line ' + line + '.');\n  });\n  return true;\n};\n\nexports.ends = true;","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/swig/lib/tags/raw.js"],"names":["exports","compile","compiler","args","content","parents","options","blockName","parse","str","line","parser","on","token","Error","match","ends"],"mappings":"AAAA;;AAEA;;;;;;;;;;;AAWAA,OAAO,CAACC,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,SAArD,EAAgE;AAChF,SAAOL,QAAQ,CAACE,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,SAA5B,CAAf;AACD,CAFD;;AAGAP,OAAO,CAACQ,KAAR,GAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAC3CA,EAAAA,MAAM,CAACC,EAAP,CAAU,GAAV,EAAe,UAAUC,KAAV,EAAiB;AAC9B,UAAM,IAAIC,KAAJ,CAAU,uBAAuBD,KAAK,CAACE,KAA7B,GAAqC,uBAArC,GAA+DL,IAA/D,GAAsE,GAAhF,CAAN;AACD,GAFD;AAGA,SAAO,IAAP;AACD,CALD;;AAMAV,OAAO,CAACgB,IAAR,GAAe,IAAf","sourcesContent":["// Magic tag, hardcoded into parser\n\n/**\n * Forces the content to not be auto-escaped. All swig instructions will be ignored and the content will be rendered exactly as it was given.\n *\n * @alias raw\n *\n * @example\n * // foobar = '<p>'\n * {% raw %}{{ foobar }}{% endraw %}\n * // => {{ foobar }}\n *\n */\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  return compiler(content, parents, options, blockName);\n};\nexports.parse = function (str, line, parser) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected token \"' + token.match + '\" in raw tag on line ' + line + '.');\n  });\n  return true;\n};\nexports.ends = true;\n"]},"metadata":{},"sourceType":"script"}