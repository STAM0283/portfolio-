{"ast":null,"code":"var ifparser = require('./if').parse;\n/**\n * Like <code data-language=\"swig\">{% else %}</code>, except this tag can take more conditional statements.\n *\n * @alias elseif\n * @alias elif\n *\n * @example\n * {% if false %}\n *   Tacos\n * {% elseif true %}\n *   Burritos\n * {% else %}\n *   Churros\n * {% endif %}\n * // => Burritos\n *\n * @param {...mixed} conditional  Conditional statement that returns a truthy or falsy value.\n */\n\n\nexports.compile = function (compiler, args) {\n  return '} else if (' + args.join(' ') + ') {\\n';\n};\n\nexports.parse = function (str, line, parser, types, stack) {\n  var okay = ifparser(str, line, parser, types, stack);\n  return okay && stack.length && stack[stack.length - 1].name === 'if';\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/swig/lib/tags/elseif.js"],"names":["ifparser","require","parse","exports","compile","compiler","args","join","str","line","parser","types","stack","okay","length","name"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBC,KAA/B;AAEA;;;;;;;;;;;;;;;;;;;;AAkBAC,OAAO,CAACC,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AAC1C,SAAO,gBAAgBA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAhB,GAAiC,OAAxC;AACD,CAFD;;AAIAJ,OAAO,CAACD,KAAR,GAAgB,UAAUM,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzD,MAAIC,IAAI,GAAGb,QAAQ,CAACQ,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,KAA3B,CAAnB;AACA,SAAOC,IAAI,IAAKD,KAAK,CAACE,MAAN,IAAgBF,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,CAAwBC,IAAxB,KAAiC,IAAjE;AACD,CAHD","sourcesContent":["var ifparser = require('./if').parse;\n\n/**\n * Like <code data-language=\"swig\">{% else %}</code>, except this tag can take more conditional statements.\n *\n * @alias elseif\n * @alias elif\n *\n * @example\n * {% if false %}\n *   Tacos\n * {% elseif true %}\n *   Burritos\n * {% else %}\n *   Churros\n * {% endif %}\n * // => Burritos\n *\n * @param {...mixed} conditional  Conditional statement that returns a truthy or falsy value.\n */\nexports.compile = function (compiler, args) {\n  return '} else if (' + args.join(' ') + ') {\\n';\n};\n\nexports.parse = function (str, line, parser, types, stack) {\n  var okay = ifparser(str, line, parser, types, stack);\n  return okay && (stack.length && stack[stack.length - 1].name === 'if');\n};\n"]},"metadata":{},"sourceType":"script"}