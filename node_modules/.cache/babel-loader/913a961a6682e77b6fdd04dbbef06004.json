{"ast":null,"code":"\"use strict\"; // SOURCE: https://gist.github.com/848444\n// Target API:\n//\n//  var s = require('net').createStream(25, 'smtp.example.com');\n//  s.on('connect', function() {\n//   require('starttls')(s, options, function() {\n//      if (!s.authorized) {\n//        s.destroy();\n//        return;\n//      }\n//\n//      s.end(\"hello world\\n\");\n//    });\n//  });\n//\n//\n\n/**\n * @namespace STARTTLS module\n * @name starttls\n */\n\nmodule.exports.starttls = starttls;\n/**\n * <p>Upgrades a socket to a secure TLS connection</p>\n *\n * @memberOf starttls\n * @param {Object} socket Plaintext socket to be upgraded\n * @param {Object} options Certificate data for the server\n * @param {Function} callback Callback function to be run after upgrade\n */\n\nfunction starttls(socket, options, callback) {\n  var sslcontext, pair, cleartext;\n  socket.removeAllListeners(\"data\");\n  sslcontext = require('crypto').createCredentials(options);\n  pair = require('tls').createSecurePair(sslcontext, true);\n  cleartext = pipe(pair, socket);\n  pair.on('secure', function () {\n    var verifyError = (pair._ssl || pair.ssl).verifyError();\n\n    if (verifyError) {\n      cleartext.authorized = false;\n      cleartext.authorizationError = verifyError;\n    } else {\n      cleartext.authorized = true;\n    }\n\n    callback(cleartext);\n  });\n  cleartext._controlReleased = true;\n  return pair;\n}\n\nfunction forwardEvents(events, emitterSource, emitterDestination) {\n  var map = [],\n      handler;\n  events.forEach(function (name) {\n    handler = function () {\n      this.emit.apply(this, arguments);\n    }.bind(emitterDestination, name);\n\n    map.push(name);\n    emitterSource.on(name, handler);\n  });\n  return map;\n}\n\nfunction removeEvents(map, emitterSource) {\n  for (var i = 0, len = map.length; i < len; i++) {\n    emitterSource.removeAllListeners(map[i]);\n  }\n}\n\nfunction pipe(pair, socket) {\n  pair.encrypted.pipe(socket);\n  socket.pipe(pair.encrypted);\n  pair.fd = socket.fd;\n  var cleartext = pair.cleartext;\n  cleartext.socket = socket;\n  cleartext.encrypted = pair.encrypted;\n  cleartext.authorized = false;\n\n  function onerror(e) {\n    if (cleartext._controlReleased) {\n      cleartext.emit('error', e);\n    }\n  }\n\n  var map = forwardEvents([\"timeout\", \"end\", \"close\", \"drain\", \"error\"], socket, cleartext);\n\n  function onclose() {\n    socket.removeListener('error', onerror);\n    socket.removeListener('close', onclose);\n    removeEvents(map, socket);\n  }\n\n  socket.on('error', onerror);\n  socket.on('close', onclose);\n  return cleartext;\n}","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/rai/lib/starttls.js"],"names":["module","exports","starttls","socket","options","callback","sslcontext","pair","cleartext","removeAllListeners","require","createCredentials","createSecurePair","pipe","on","verifyError","_ssl","ssl","authorized","authorizationError","_controlReleased","forwardEvents","events","emitterSource","emitterDestination","map","handler","forEach","name","emit","apply","arguments","bind","push","removeEvents","i","len","length","encrypted","fd","onerror","e","onclose","removeListener"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// SOURCE: https://gist.github.com/848444\n\n// Target API:\n//\n//  var s = require('net').createStream(25, 'smtp.example.com');\n//  s.on('connect', function() {\n//   require('starttls')(s, options, function() {\n//      if (!s.authorized) {\n//        s.destroy();\n//        return;\n//      }\n//\n//      s.end(\"hello world\\n\");\n//    });\n//  });\n//\n//\n\n/**\n * @namespace STARTTLS module\n * @name starttls\n */\nmodule.exports.starttls = starttls;\n\n/**\n * <p>Upgrades a socket to a secure TLS connection</p>\n *\n * @memberOf starttls\n * @param {Object} socket Plaintext socket to be upgraded\n * @param {Object} options Certificate data for the server\n * @param {Function} callback Callback function to be run after upgrade\n */\nfunction starttls(socket, options, callback) {\n    var sslcontext, pair, cleartext;\n\n    socket.removeAllListeners(\"data\");\n    sslcontext = require('crypto').createCredentials(options);\n    pair = require('tls').createSecurePair(sslcontext, true);\n    cleartext = pipe(pair, socket);\n\n    pair.on('secure', function() {\n        var verifyError = (pair._ssl || pair.ssl).verifyError();\n\n        if (verifyError) {\n            cleartext.authorized = false;\n            cleartext.authorizationError = verifyError;\n        } else {\n            cleartext.authorized = true;\n        }\n\n        callback(cleartext);\n    });\n\n    cleartext._controlReleased = true;\n    return pair;\n}\n\nfunction forwardEvents(events, emitterSource, emitterDestination) {\n    var map = [], handler;\n\n    events.forEach(function(name){\n        handler = function(){\n            this.emit.apply(this, arguments);\n        }.bind(emitterDestination, name);\n\n        map.push(name);\n        emitterSource.on(name, handler);\n    });\n\n    return map;\n}\n\nfunction removeEvents(map, emitterSource) {\n    for(var i = 0, len = map.length; i < len; i++){\n        emitterSource.removeAllListeners(map[i]);\n    }\n}\n\nfunction pipe(pair, socket) {\n    pair.encrypted.pipe(socket);\n    socket.pipe(pair.encrypted);\n\n    pair.fd = socket.fd;\n\n    var cleartext = pair.cleartext;\n\n    cleartext.socket = socket;\n    cleartext.encrypted = pair.encrypted;\n    cleartext.authorized = false;\n\n    function onerror(e) {\n        if (cleartext._controlReleased) {\n            cleartext.emit('error', e);\n        }\n    }\n\n    var map = forwardEvents([\"timeout\", \"end\", \"close\", \"drain\", \"error\"], socket, cleartext);\n\n    function onclose() {\n        socket.removeListener('error', onerror);\n        socket.removeListener('close', onclose);\n        removeEvents(map,socket);\n    }\n\n    socket.on('error', onerror);\n    socket.on('close', onclose);\n\n    return cleartext;\n}"]},"metadata":{},"sourceType":"script"}