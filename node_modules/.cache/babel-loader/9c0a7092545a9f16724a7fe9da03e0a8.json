{"ast":null,"code":"\"use strict\"; // Expose to the world\n\nmodule.exports = StubTransport;\n/**\n * <p>Generates a stub Transport object for testing purposes</p>\n *\n * @constructor\n */\n\nfunction StubTransport(options) {\n  this.options = options || {};\n}\n/**\n * <p>Generates a raw e-mail source and returns it with callback</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the e-mail is composed\n */\n\n\nStubTransport.prototype.sendMail = function (emailMessage, callback) {\n  var output = \"\";\n\n  if (this.options.error) {\n    return callback(new Error(this.options.error.message || this.options.error));\n  } // sendmail strips this header line by itself\n\n\n  emailMessage.options.keepBcc = true;\n  emailMessage.on(\"data\", function (data) {\n    output += (data || \"\").toString(\"utf-8\");\n  });\n  emailMessage.on(\"error\", function (err) {\n    callback(err);\n  });\n  emailMessage.on(\"end\", function () {\n    callback(null, {\n      message: output,\n      envelope: emailMessage.getEnvelope(),\n      messageId: emailMessage._messageId\n    });\n  });\n  emailMessage.streamMessage();\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/express-mailer/node_modules/nodemailer/lib/engines/stub.js"],"names":["module","exports","StubTransport","options","prototype","sendMail","emailMessage","callback","output","error","Error","message","keepBcc","on","data","toString","err","envelope","getEnvelope","messageId","_messageId","streamMessage"],"mappings":"AAAA,a,CAEA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA;;;;;;AAKA,SAASA,aAAT,CAAuBC,OAAvB,EAA+B;AAC3B,OAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACH;AAED;;;;;;;;AAMAD,aAAa,CAACE,SAAd,CAAwBC,QAAxB,GAAmC,UAASC,YAAT,EAAuBC,QAAvB,EAAiC;AAEhE,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAG,KAAKL,OAAL,CAAaM,KAAhB,EAAsB;AAClB,WAAOF,QAAQ,CAAC,IAAIG,KAAJ,CAAU,KAAKP,OAAL,CAAaM,KAAb,CAAmBE,OAAnB,IAA8B,KAAKR,OAAL,CAAaM,KAArD,CAAD,CAAf;AACH,GAN+D,CAQhE;;;AACAH,EAAAA,YAAY,CAACH,OAAb,CAAqBS,OAArB,GAA+B,IAA/B;AAEAN,EAAAA,YAAY,CAACO,EAAb,CAAgB,MAAhB,EAAwB,UAASC,IAAT,EAAc;AAClCN,IAAAA,MAAM,IAAI,CAACM,IAAI,IAAI,EAAT,EAAaC,QAAb,CAAsB,OAAtB,CAAV;AACH,GAFD;AAIAT,EAAAA,YAAY,CAACO,EAAb,CAAgB,OAAhB,EAAyB,UAASG,GAAT,EAAa;AAClCT,IAAAA,QAAQ,CAACS,GAAD,CAAR;AACH,GAFD;AAIAV,EAAAA,YAAY,CAACO,EAAb,CAAgB,KAAhB,EAAuB,YAAU;AAC7BN,IAAAA,QAAQ,CAAC,IAAD,EAAO;AAACI,MAAAA,OAAO,EAAEH,MAAV;AAAkBS,MAAAA,QAAQ,EAAEX,YAAY,CAACY,WAAb,EAA5B;AAAwDC,MAAAA,SAAS,EAAEb,YAAY,CAACc;AAAhF,KAAP,CAAR;AACH,GAFD;AAIAd,EAAAA,YAAY,CAACe,aAAb;AAEH,CAzBD","sourcesContent":["\"use strict\";\n\n// Expose to the world\nmodule.exports = StubTransport;\n\n/**\n * <p>Generates a stub Transport object for testing purposes</p>\n *\n * @constructor\n */\nfunction StubTransport(options){\n    this.options = options || {};\n}\n\n/**\n * <p>Generates a raw e-mail source and returns it with callback</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the e-mail is composed\n */\nStubTransport.prototype.sendMail = function(emailMessage, callback) {\n\n    var output = \"\";\n\n    if(this.options.error){\n        return callback(new Error(this.options.error.message || this.options.error));\n    }\n\n    // sendmail strips this header line by itself\n    emailMessage.options.keepBcc = true;\n\n    emailMessage.on(\"data\", function(data){\n        output += (data || \"\").toString(\"utf-8\");\n    });\n\n    emailMessage.on(\"error\", function(err){\n        callback(err);\n    });\n\n    emailMessage.on(\"end\", function(){\n        callback(null, {message: output, envelope: emailMessage.getEnvelope(), messageId: emailMessage._messageId});\n    });\n\n    emailMessage.streamMessage();\n\n};\n"]},"metadata":{},"sourceType":"script"}