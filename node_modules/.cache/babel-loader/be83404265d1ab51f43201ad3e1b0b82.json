{"ast":null,"code":"\"use strict\";\n\nvar spawn = require(\"child_process\").spawn;\n\nvar util = require(\"util\");\n\nvar Transform = require(\"stream\").Transform || require(\"readable-stream\").Transform; // Transforming stream that replaces SMTP-style \\r\\n line endings to\n// Sendmail-style \\n line endings.\n\n\nfunction NewlineTransform(options) {\n  Transform.call(this, options);\n}\n\nutil.inherits(NewlineTransform, Transform);\n\nNewlineTransform.prototype._transform = function (chunk, encoding, done) {\n  this.push(chunk.toString().replace(/\\r\\n/g, \"\\n\"));\n  done();\n}; // Expose to the world\n\n\nmodule.exports = SendmailTransport;\n/**\n * <p>Generates a Transport object for Sendmail</p>\n *\n * @constructor\n * @param {String} [config] path to the sendmail command\n */\n\nfunction SendmailTransport(config) {\n  this.path = \"sendmail\";\n  this.args = false;\n\n  if (typeof config == \"string\") {\n    this.path = config;\n  } else if (typeof config == \"object\") {\n    if (config.path) {\n      this.path = config.path;\n    }\n\n    if (Array.isArray(config.args)) {\n      this.args = config.args;\n    }\n  }\n}\n/**\n * <p>Spawns a sendmail command either using <code>sendmail -i -f from_addr to_addr[]</code>\n * (by default) or <code>sendmail -i list_of_args[]</code> (if args property was given)\n * and pipes message to sendmail stdin. Return callback checks if the sendmail process\n * ended with 0 (no error) or not.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the sending is completed\n */\n\n\nSendmailTransport.prototype.sendMail = function sendMail(emailMessage, callback) {\n  var envelope = emailMessage.getEnvelope(),\n      args = this.args ? this.args.slice() : [\"-f\"].concat(envelope.from).concat(envelope.to),\n      sendmail,\n      cbCounter = 2,\n      didCb,\n      marker = \"SendmailTransport.sendMail\",\n      transform;\n  args.unshift(\"-i\"); // force -i to keep single dots\n\n  try {\n    sendmail = spawn(this.path, args);\n  } catch (e) {\n    e[marker] = \"spawn exception\";\n    sendmailResult(e);\n  }\n\n  if (sendmail) {\n    sendmail.on(\"error\", sendmailError);\n    sendmail.once(\"exit\", sendmailExit);\n    sendmail.once(\"close\", endEvent);\n    sendmail.stdin.on(\"error\", sendmailStdinError);\n    transform = new NewlineTransform();\n    emailMessage.pipe(transform).pipe(sendmail.stdin);\n    emailMessage.streamMessage();\n  }\n\n  function sendmailError(e) {\n    e[marker] = \"sendmailError\";\n    sendmailResult(e);\n  }\n\n  function sendmailStdinError(e) {\n    e[marker] = \"sendmailStdinError\";\n    sendmailResult(e);\n  }\n\n  function sendmailExit(code) {\n    if (!code) {\n      endEvent();\n    } else {\n      sendmailResult(new Error(\"Sendmail exited with \" + code));\n    }\n  }\n\n  function endEvent() {\n    if (! --cbCounter) {\n      sendmailResult();\n    }\n  }\n\n  function sendmailResult(e) {\n    if (didCb) {\n      // ignore any additional responses\n      return;\n    }\n\n    didCb = true;\n\n    if (typeof callback === \"function\") {\n      if (e) {\n        callback(e);\n      } else {\n        callback(null, {\n          messageId: emailMessage._messageId\n        });\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/express-mailer/node_modules/nodemailer/lib/engines/sendmail.js"],"names":["spawn","require","util","Transform","NewlineTransform","options","call","inherits","prototype","_transform","chunk","encoding","done","push","toString","replace","module","exports","SendmailTransport","config","path","args","Array","isArray","sendMail","emailMessage","callback","envelope","getEnvelope","slice","concat","from","to","sendmail","cbCounter","didCb","marker","transform","unshift","e","sendmailResult","on","sendmailError","once","sendmailExit","endEvent","stdin","sendmailStdinError","pipe","streamMessage","code","Error","messageId","_messageId"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar spawn = require(\"child_process\").spawn;\nvar util = require(\"util\");\nvar Transform = require(\"stream\").Transform || require(\"readable-stream\").Transform;\n\n\n// Transforming stream that replaces SMTP-style \\r\\n line endings to\n// Sendmail-style \\n line endings.\nfunction NewlineTransform(options){\n    Transform.call(this, options);\n}\nutil.inherits(NewlineTransform, Transform);\n\nNewlineTransform.prototype._transform = function(chunk, encoding, done){\n    this.push(chunk.toString().replace(/\\r\\n/g, \"\\n\"));\n    done();\n};\n\n// Expose to the world\nmodule.exports = SendmailTransport;\n\n/**\n * <p>Generates a Transport object for Sendmail</p>\n *\n * @constructor\n * @param {String} [config] path to the sendmail command\n */\nfunction SendmailTransport(config){\n    this.path = \"sendmail\";\n    this.args = false;\n\n    if(typeof config==\"string\"){\n        this.path = config;\n    }else if(typeof config==\"object\"){\n        if(config.path){\n            this.path = config.path;\n        }\n        if(Array.isArray(config.args)){\n            this.args = config.args;\n        }\n    }\n}\n\n/**\n * <p>Spawns a sendmail command either using <code>sendmail -i -f from_addr to_addr[]</code>\n * (by default) or <code>sendmail -i list_of_args[]</code> (if args property was given)\n * and pipes message to sendmail stdin. Return callback checks if the sendmail process\n * ended with 0 (no error) or not.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the sending is completed\n */\nSendmailTransport.prototype.sendMail = function sendMail(emailMessage, callback){\n\n    var envelope = emailMessage.getEnvelope(),\n        args = this.args ? this.args.slice() : [\"-f\"].concat(envelope.from).concat(envelope.to),\n        sendmail,\n        cbCounter = 2,\n        didCb,\n        marker = \"SendmailTransport.sendMail\",\n        transform;\n\n    args.unshift(\"-i\"); // force -i to keep single dots\n\n    try {\n        sendmail = spawn(this.path, args);\n    } catch (e){\n        e[marker] = \"spawn exception\";\n        sendmailResult(e);\n    }\n\n    if(sendmail){\n        sendmail.on(\"error\", sendmailError);\n        sendmail.once(\"exit\", sendmailExit);\n        sendmail.once(\"close\", endEvent);\n        sendmail.stdin.on(\"error\", sendmailStdinError);\n\n        transform = new NewlineTransform();\n        emailMessage.pipe(transform).pipe(sendmail.stdin);\n        emailMessage.streamMessage();\n    }\n\n    function sendmailError(e){\n        e[marker] = \"sendmailError\";\n        sendmailResult(e);\n    }\n\n    function sendmailStdinError(e){\n        e[marker] = \"sendmailStdinError\";\n        sendmailResult(e);\n    }\n\n    function sendmailExit(code){\n        if(!code){\n            endEvent();\n        }else{\n            sendmailResult(new Error(\"Sendmail exited with \" + code));\n        }\n    }\n\n    function endEvent(){\n        if(!--cbCounter){\n            sendmailResult();\n        }\n    }\n\n    function sendmailResult(e){\n        if(didCb){\n            // ignore any additional responses\n            return;\n        }\n        didCb = true;\n        if(typeof callback === \"function\"){\n            if(e){\n                callback(e);\n            }else{\n                callback(null, {\n                    messageId: emailMessage._messageId\n                });\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}