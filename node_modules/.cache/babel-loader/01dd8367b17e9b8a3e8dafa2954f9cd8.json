{"ast":null,"code":"// Generated by CoffeeScript 1.3.3\n(function () {\n  var XMLBuilder, XMLFragment;\n  XMLFragment = require('./XMLFragment');\n\n  XMLBuilder = function () {\n    function XMLBuilder(name, xmldec, doctype) {\n      var att, child, _ref;\n\n      this.children = [];\n      this.rootObject = null;\n\n      if (this.is(name, 'Object')) {\n        _ref = [name, xmldec], xmldec = _ref[0], doctype = _ref[1];\n        name = null;\n      }\n\n      if (name != null) {\n        name = '' + name || '';\n\n        if (xmldec == null) {\n          xmldec = {\n            'version': '1.0'\n          };\n        }\n      }\n\n      if (xmldec != null && !(xmldec.version != null)) {\n        throw new Error(\"Version number is required\");\n      }\n\n      if (xmldec != null) {\n        xmldec.version = '' + xmldec.version || '';\n\n        if (!xmldec.version.match(/1\\.[0-9]+/)) {\n          throw new Error(\"Invalid version number: \" + xmldec.version);\n        }\n\n        att = {\n          version: xmldec.version\n        };\n\n        if (xmldec.encoding != null) {\n          xmldec.encoding = '' + xmldec.encoding || '';\n\n          if (!xmldec.encoding.match(/[A-Za-z](?:[A-Za-z0-9._-]|-)*/)) {\n            throw new Error(\"Invalid encoding: \" + xmldec.encoding);\n          }\n\n          att.encoding = xmldec.encoding;\n        }\n\n        if (xmldec.standalone != null) {\n          att.standalone = xmldec.standalone ? \"yes\" : \"no\";\n        }\n\n        child = new XMLFragment(this, '?xml', att);\n        this.children.push(child);\n      }\n\n      if (doctype != null) {\n        att = {};\n\n        if (name != null) {\n          att.name = name;\n        }\n\n        if (doctype.ext != null) {\n          doctype.ext = '' + doctype.ext || '';\n          att.ext = doctype.ext;\n        }\n\n        child = new XMLFragment(this, '!DOCTYPE', att);\n        this.children.push(child);\n      }\n\n      if (name != null) {\n        this.begin(name);\n      }\n    }\n\n    XMLBuilder.prototype.begin = function (name, xmldec, doctype) {\n      var doc, root;\n\n      if (!(name != null)) {\n        throw new Error(\"Root element needs a name\");\n      }\n\n      if (this.rootObject) {\n        this.children = [];\n        this.rootObject = null;\n      }\n\n      if (xmldec != null) {\n        doc = new XMLBuilder(name, xmldec, doctype);\n        return doc.root();\n      }\n\n      name = '' + name || '';\n      root = new XMLFragment(this, name, {});\n      root.isRoot = true;\n      root.documentObject = this;\n      this.children.push(root);\n      this.rootObject = root;\n      return root;\n    };\n\n    XMLBuilder.prototype.root = function () {\n      return this.rootObject;\n    };\n\n    XMLBuilder.prototype.end = function (options) {\n      return toString(options);\n    };\n\n    XMLBuilder.prototype.toString = function (options) {\n      var child, r, _i, _len, _ref;\n\n      r = '';\n      _ref = this.children;\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        child = _ref[_i];\n        r += child.toString(options);\n      }\n\n      return r;\n    };\n\n    XMLBuilder.prototype.is = function (obj, type) {\n      var clas;\n      clas = Object.prototype.toString.call(obj).slice(8, -1);\n      return obj != null && clas === type;\n    };\n\n    return XMLBuilder;\n  }();\n\n  module.exports = XMLBuilder;\n}).call(this);","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/xmlbuilder/lib/XMLBuilder.js"],"names":["XMLBuilder","XMLFragment","require","name","xmldec","doctype","att","child","_ref","children","rootObject","is","version","Error","match","encoding","standalone","push","ext","begin","prototype","doc","root","isRoot","documentObject","end","options","toString","r","_i","_len","length","obj","type","clas","Object","call","slice","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.3.3\n(function() {\n  var XMLBuilder, XMLFragment;\n\n  XMLFragment = require('./XMLFragment');\n\n  XMLBuilder = (function() {\n\n    function XMLBuilder(name, xmldec, doctype) {\n      var att, child, _ref;\n      this.children = [];\n      this.rootObject = null;\n      if (this.is(name, 'Object')) {\n        _ref = [name, xmldec], xmldec = _ref[0], doctype = _ref[1];\n        name = null;\n      }\n      if (name != null) {\n        name = '' + name || '';\n        if (xmldec == null) {\n          xmldec = {\n            'version': '1.0'\n          };\n        }\n      }\n      if ((xmldec != null) && !(xmldec.version != null)) {\n        throw new Error(\"Version number is required\");\n      }\n      if (xmldec != null) {\n        xmldec.version = '' + xmldec.version || '';\n        if (!xmldec.version.match(/1\\.[0-9]+/)) {\n          throw new Error(\"Invalid version number: \" + xmldec.version);\n        }\n        att = {\n          version: xmldec.version\n        };\n        if (xmldec.encoding != null) {\n          xmldec.encoding = '' + xmldec.encoding || '';\n          if (!xmldec.encoding.match(/[A-Za-z](?:[A-Za-z0-9._-]|-)*/)) {\n            throw new Error(\"Invalid encoding: \" + xmldec.encoding);\n          }\n          att.encoding = xmldec.encoding;\n        }\n        if (xmldec.standalone != null) {\n          att.standalone = xmldec.standalone ? \"yes\" : \"no\";\n        }\n        child = new XMLFragment(this, '?xml', att);\n        this.children.push(child);\n      }\n      if (doctype != null) {\n        att = {};\n        if (name != null) {\n          att.name = name;\n        }\n        if (doctype.ext != null) {\n          doctype.ext = '' + doctype.ext || '';\n          att.ext = doctype.ext;\n        }\n        child = new XMLFragment(this, '!DOCTYPE', att);\n        this.children.push(child);\n      }\n      if (name != null) {\n        this.begin(name);\n      }\n    }\n\n    XMLBuilder.prototype.begin = function(name, xmldec, doctype) {\n      var doc, root;\n      if (!(name != null)) {\n        throw new Error(\"Root element needs a name\");\n      }\n      if (this.rootObject) {\n        this.children = [];\n        this.rootObject = null;\n      }\n      if (xmldec != null) {\n        doc = new XMLBuilder(name, xmldec, doctype);\n        return doc.root();\n      }\n      name = '' + name || '';\n      root = new XMLFragment(this, name, {});\n      root.isRoot = true;\n      root.documentObject = this;\n      this.children.push(root);\n      this.rootObject = root;\n      return root;\n    };\n\n    XMLBuilder.prototype.root = function() {\n      return this.rootObject;\n    };\n\n    XMLBuilder.prototype.end = function(options) {\n      return toString(options);\n    };\n\n    XMLBuilder.prototype.toString = function(options) {\n      var child, r, _i, _len, _ref;\n      r = '';\n      _ref = this.children;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        child = _ref[_i];\n        r += child.toString(options);\n      }\n      return r;\n    };\n\n    XMLBuilder.prototype.is = function(obj, type) {\n      var clas;\n      clas = Object.prototype.toString.call(obj).slice(8, -1);\n      return (obj != null) && clas === type;\n    };\n\n    return XMLBuilder;\n\n  })();\n\n  module.exports = XMLBuilder;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}