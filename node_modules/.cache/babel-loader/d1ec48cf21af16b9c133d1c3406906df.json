{"ast":null,"code":"/**\n * Inject the content from the parent template's block of the same name into the current block.\n *\n * See <a href=\"#inheritance\">Template Inheritance</a> for more information.\n *\n * @alias parent\n *\n * @example\n * {% extends \"./foo.html\" %}\n * {% block content %}\n *   My content.\n *   {% parent %}\n * {% endblock %}\n *\n */\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  if (!parents || !parents.length) {\n    return '';\n  }\n\n  var parentFile = args[0],\n      breaker = true,\n      l = parents.length,\n      i = 0,\n      parent,\n      block;\n\n  for (i; i < l; i += 1) {\n    parent = parents[i];\n\n    if (!parent.blocks || !parent.blocks.hasOwnProperty(blockName)) {\n      continue;\n    } // Silly JSLint \"Strange Loop\" requires return to be in a conditional\n\n\n    if (breaker && parentFile !== parent.name) {\n      block = parent.blocks[blockName];\n      return block.compile(compiler, [blockName], block.content, parents.slice(i + 1), options) + '\\n';\n    }\n  }\n};\n\nexports.parse = function (str, line, parser, types, stack, opts) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected argument \"' + token.match + '\" on line ' + line + '.');\n  });\n  parser.on('end', function () {\n    this.out.push(opts.filename);\n  });\n  return true;\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/swig/lib/tags/parent.js"],"names":["exports","compile","compiler","args","content","parents","options","blockName","length","parentFile","breaker","l","i","parent","block","blocks","hasOwnProperty","name","slice","parse","str","line","parser","types","stack","opts","on","token","Error","match","out","push","filename"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeAA,OAAO,CAACC,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,SAArD,EAAgE;AAChF,MAAI,CAACF,OAAD,IAAY,CAACA,OAAO,CAACG,MAAzB,EAAiC;AAC/B,WAAO,EAAP;AACD;;AAED,MAAIC,UAAU,GAAGN,IAAI,CAAC,CAAD,CAArB;AAAA,MACEO,OAAO,GAAG,IADZ;AAAA,MAEEC,CAAC,GAAGN,OAAO,CAACG,MAFd;AAAA,MAGEI,CAAC,GAAG,CAHN;AAAA,MAIEC,MAJF;AAAA,MAKEC,KALF;;AAOA,OAAKF,CAAL,EAAQA,CAAC,GAAGD,CAAZ,EAAeC,CAAC,IAAI,CAApB,EAAuB;AACrBC,IAAAA,MAAM,GAAGR,OAAO,CAACO,CAAD,CAAhB;;AACA,QAAI,CAACC,MAAM,CAACE,MAAR,IAAkB,CAACF,MAAM,CAACE,MAAP,CAAcC,cAAd,CAA6BT,SAA7B,CAAvB,EAAgE;AAC9D;AACD,KAJoB,CAKrB;;;AACA,QAAIG,OAAO,IAAID,UAAU,KAAKI,MAAM,CAACI,IAArC,EAA2C;AACzCH,MAAAA,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcR,SAAd,CAAR;AACA,aAAOO,KAAK,CAACb,OAAN,CAAcC,QAAd,EAAwB,CAACK,SAAD,CAAxB,EAAqCO,KAAK,CAACV,OAA3C,EAAoDC,OAAO,CAACa,KAAR,CAAcN,CAAC,GAAG,CAAlB,CAApD,EAA0EN,OAA1E,IAAqF,IAA5F;AACD;AACF;AACF,CAvBD;;AAyBAN,OAAO,CAACmB,KAAR,GAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiD;AAC/DH,EAAAA,MAAM,CAACI,EAAP,CAAU,GAAV,EAAe,UAAUC,KAAV,EAAiB;AAC9B,UAAM,IAAIC,KAAJ,CAAU,0BAA0BD,KAAK,CAACE,KAAhC,GAAwC,YAAxC,GAAuDR,IAAvD,GAA8D,GAAxE,CAAN;AACD,GAFD;AAIAC,EAAAA,MAAM,CAACI,EAAP,CAAU,KAAV,EAAiB,YAAY;AAC3B,SAAKI,GAAL,CAASC,IAAT,CAAcN,IAAI,CAACO,QAAnB;AACD,GAFD;AAIA,SAAO,IAAP;AACD,CAVD","sourcesContent":["/**\n * Inject the content from the parent template's block of the same name into the current block.\n *\n * See <a href=\"#inheritance\">Template Inheritance</a> for more information.\n *\n * @alias parent\n *\n * @example\n * {% extends \"./foo.html\" %}\n * {% block content %}\n *   My content.\n *   {% parent %}\n * {% endblock %}\n *\n */\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  if (!parents || !parents.length) {\n    return '';\n  }\n\n  var parentFile = args[0],\n    breaker = true,\n    l = parents.length,\n    i = 0,\n    parent,\n    block;\n\n  for (i; i < l; i += 1) {\n    parent = parents[i];\n    if (!parent.blocks || !parent.blocks.hasOwnProperty(blockName)) {\n      continue;\n    }\n    // Silly JSLint \"Strange Loop\" requires return to be in a conditional\n    if (breaker && parentFile !== parent.name) {\n      block = parent.blocks[blockName];\n      return block.compile(compiler, [blockName], block.content, parents.slice(i + 1), options) + '\\n';\n    }\n  }\n};\n\nexports.parse = function (str, line, parser, types, stack, opts) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected argument \"' + token.match + '\" on line ' + line + '.');\n  });\n\n  parser.on('end', function () {\n    this.out.push(opts.filename);\n  });\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"script"}