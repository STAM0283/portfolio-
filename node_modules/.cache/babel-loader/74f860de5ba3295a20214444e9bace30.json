{"ast":null,"code":"/**\n * Used within an <code data-language=\"swig\">{% if %}</code> tag, the code block following this tag up until <code data-language=\"swig\">{% endif %}</code> will be rendered if the <i>if</i> statement returns false.\n *\n * @alias else\n *\n * @example\n * {% if false %}\n *   statement1\n * {% else %}\n *   statement2\n * {% endif %}\n * // => statement2\n *\n */\nexports.compile = function () {\n  return '} else {\\n';\n};\n\nexports.parse = function (str, line, parser, types, stack) {\n  parser.on('*', function (token) {\n    throw new Error('\"else\" tag does not accept any tokens. Found \"' + token.match + '\" on line ' + line + '.');\n  });\n  return stack.length && stack[stack.length - 1].name === 'if';\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/swig/lib/tags/else.js"],"names":["exports","compile","parse","str","line","parser","types","stack","on","token","Error","match","length","name"],"mappings":"AAAA;;;;;;;;;;;;;;AAcAA,OAAO,CAACC,OAAR,GAAkB,YAAY;AAC5B,SAAO,YAAP;AACD,CAFD;;AAIAD,OAAO,CAACE,KAAR,GAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzDF,EAAAA,MAAM,CAACG,EAAP,CAAU,GAAV,EAAe,UAAUC,KAAV,EAAiB;AAC9B,UAAM,IAAIC,KAAJ,CAAU,mDAAmDD,KAAK,CAACE,KAAzD,GAAiE,YAAjE,GAAgFP,IAAhF,GAAuF,GAAjG,CAAN;AACD,GAFD;AAIA,SAAQG,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACA,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAL,CAAwBC,IAAxB,KAAiC,IAAzD;AACD,CAND","sourcesContent":["/**\n * Used within an <code data-language=\"swig\">{% if %}</code> tag, the code block following this tag up until <code data-language=\"swig\">{% endif %}</code> will be rendered if the <i>if</i> statement returns false.\n *\n * @alias else\n *\n * @example\n * {% if false %}\n *   statement1\n * {% else %}\n *   statement2\n * {% endif %}\n * // => statement2\n *\n */\nexports.compile = function () {\n  return '} else {\\n';\n};\n\nexports.parse = function (str, line, parser, types, stack) {\n  parser.on('*', function (token) {\n    throw new Error('\"else\" tag does not accept any tokens. Found \"' + token.match + '\" on line ' + line + '.');\n  });\n\n  return (stack.length && stack[stack.length - 1].name === 'if');\n};\n"]},"metadata":{},"sourceType":"script"}