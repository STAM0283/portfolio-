{"ast":null,"code":"var util = require('../util');\n\nvar Rest = require('./rest');\n\nvar Json = require('./json');\n\nvar JsonBuilder = require('../json/builder');\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (params === undefined) return;\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params, payloadShape);\n    } else {\n      // non-JSON payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.build(req.params, input);\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n  populateBody(req);\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n  var req = resp.request;\n  var rules = req.service.api.operations[req.operation].output || {};\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n\n    if (payloadMember.isStreaming) {\n      resp.data[rules.payload] = resp.httpResponse.body;\n    } else if (payloadMember.type === 'structure') {\n      Json.extractData(resp);\n    } else {\n      resp.data[rules.payload] = resp.httpResponse.body.toString();\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/protocol/rest_json.js"],"names":["util","require","Rest","Json","JsonBuilder","populateBody","req","builder","input","service","api","operations","operation","payload","params","payloadShape","members","undefined","type","httpRequest","body","build","buildRequest","extractError","resp","extractData","request","rules","output","payloadMember","isStreaming","data","httpResponse","toString","merge","module","exports"],"mappings":"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","sourcesContent":["var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (params === undefined) return;\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params, payloadShape);\n    } else { // non-JSON payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.build(req.params, input);\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n  populateBody(req);\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var rules = req.service.api.operations[req.operation].output || {};\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    if (payloadMember.isStreaming) {\n      resp.data[rules.payload] = resp.httpResponse.body;\n    } else if (payloadMember.type === 'structure') {\n      Json.extractData(resp);\n    } else {\n      resp.data[rules.payload] = resp.httpResponse.body.toString();\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n"]},"metadata":{},"sourceType":"script"}