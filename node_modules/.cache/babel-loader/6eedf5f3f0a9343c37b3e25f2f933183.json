{"ast":null,"code":"var AWS = require('../core');\n\nAWS.util.update(AWS.ElasticTranscoder.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('extractError', this.extractErrorCode);\n  },\n\n  /**\n   * @api private\n   */\n  extractErrorCode: function extractErrorCode(resp) {\n    // ETS stores error type in the header\n    var errorType = resp.httpResponse.headers['x-amzn-errortype'];\n    if (!errorType) errorType = 'UnknownError';\n    resp.error.name = resp.error.code = errorType.split(':')[0];\n  }\n});","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/services/elastictranscoder.js"],"names":["AWS","require","util","update","ElasticTranscoder","prototype","setupRequestListeners","request","addListener","extractErrorCode","resp","errorType","httpResponse","headers","error","name","code","split"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AAEAD,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBH,GAAG,CAACI,iBAAJ,CAAsBC,SAAtC,EAAiD;AAC/C;;;AAGAC,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7DA,IAAAA,OAAO,CAACC,WAAR,CAAoB,cAApB,EAAoC,KAAKC,gBAAzC;AACD,GAN8C;;AAQ/C;;;AAGAA,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAChD;AACA,QAAIC,SAAS,GAAGD,IAAI,CAACE,YAAL,CAAkBC,OAAlB,CAA0B,kBAA1B,CAAhB;AACA,QAAI,CAACF,SAAL,EAAgBA,SAAS,GAAG,cAAZ;AAChBD,IAAAA,IAAI,CAACI,KAAL,CAAWC,IAAX,GAAkBL,IAAI,CAACI,KAAL,CAAWE,IAAX,GAAkBL,SAAS,CAACM,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAApC;AACD;AAhB8C,CAAjD","sourcesContent":["var AWS = require('../core');\n\nAWS.util.update(AWS.ElasticTranscoder.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('extractError', this.extractErrorCode);\n  },\n\n  /**\n   * @api private\n   */\n  extractErrorCode: function extractErrorCode(resp) {\n    // ETS stores error type in the header\n    var errorType = resp.httpResponse.headers['x-amzn-errortype'];\n    if (!errorType) errorType = 'UnknownError';\n    resp.error.name = resp.error.code = errorType.split(':')[0];\n  }\n});\n"]},"metadata":{},"sourceType":"script"}