{"ast":null,"code":"var utils = require('../utils');\n/**\n * Attempts to remove whitespace between HTML tags. Use at your own risk.\n *\n * @alias spaceless\n *\n * @example\n * {% spaceless %}\n *   {% for num in foo %}\n *   <li>{{ loop.index }}</li>\n *   {% endfor %}\n * {% endspaceless %}\n * // => <li>1</li><li>2</li><li>3</li>\n *\n */\n\n\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  function stripWhitespace(tokens) {\n    return utils.map(tokens, function (token) {\n      if (token.content || typeof token !== 'string') {\n        token.content = stripWhitespace(token.content);\n        return token;\n      }\n\n      return token.replace(/^\\s+/, '').replace(/>\\s+</g, '><').replace(/\\s+$/, '');\n    });\n  }\n\n  return compiler(stripWhitespace(content), parents, options, blockName);\n};\n\nexports.parse = function (str, line, parser) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected token \"' + token.match + '\" on line ' + line + '.');\n  });\n  return true;\n};\n\nexports.ends = true;","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/swig/lib/tags/spaceless.js"],"names":["utils","require","exports","compile","compiler","args","content","parents","options","blockName","stripWhitespace","tokens","map","token","replace","parse","str","line","parser","on","Error","match","ends"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;AAcAC,OAAO,CAACC,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,SAArD,EAAgE;AAChF,WAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,WAAOX,KAAK,CAACY,GAAN,CAAUD,MAAV,EAAkB,UAAUE,KAAV,EAAiB;AACxC,UAAIA,KAAK,CAACP,OAAN,IAAiB,OAAOO,KAAP,KAAiB,QAAtC,EAAgD;AAC9CA,QAAAA,KAAK,CAACP,OAAN,GAAgBI,eAAe,CAACG,KAAK,CAACP,OAAP,CAA/B;AACA,eAAOO,KAAP;AACD;;AAED,aAAOA,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsB,EAAtB,EACJA,OADI,CACI,QADJ,EACc,IADd,EAEJA,OAFI,CAEI,MAFJ,EAEY,EAFZ,CAAP;AAGD,KATM,CAAP;AAUD;;AAED,SAAOV,QAAQ,CAACM,eAAe,CAACJ,OAAD,CAAhB,EAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,SAA7C,CAAf;AACD,CAfD;;AAiBAP,OAAO,CAACa,KAAR,GAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAC3CA,EAAAA,MAAM,CAACC,EAAP,CAAU,GAAV,EAAe,UAAUN,KAAV,EAAiB;AAC9B,UAAM,IAAIO,KAAJ,CAAU,uBAAuBP,KAAK,CAACQ,KAA7B,GAAqC,YAArC,GAAoDJ,IAApD,GAA2D,GAArE,CAAN;AACD,GAFD;AAIA,SAAO,IAAP;AACD,CAND;;AAQAf,OAAO,CAACoB,IAAR,GAAe,IAAf","sourcesContent":["var utils = require('../utils');\n\n/**\n * Attempts to remove whitespace between HTML tags. Use at your own risk.\n *\n * @alias spaceless\n *\n * @example\n * {% spaceless %}\n *   {% for num in foo %}\n *   <li>{{ loop.index }}</li>\n *   {% endfor %}\n * {% endspaceless %}\n * // => <li>1</li><li>2</li><li>3</li>\n *\n */\nexports.compile = function (compiler, args, content, parents, options, blockName) {\n  function stripWhitespace(tokens) {\n    return utils.map(tokens, function (token) {\n      if (token.content || typeof token !== 'string') {\n        token.content = stripWhitespace(token.content);\n        return token;\n      }\n\n      return token.replace(/^\\s+/, '')\n        .replace(/>\\s+</g, '><')\n        .replace(/\\s+$/, '');\n    });\n  }\n\n  return compiler(stripWhitespace(content), parents, options, blockName);\n};\n\nexports.parse = function (str, line, parser) {\n  parser.on('*', function (token) {\n    throw new Error('Unexpected token \"' + token.match + '\" on line ' + line + '.');\n  });\n\n  return true;\n};\n\nexports.ends = true;\n"]},"metadata":{},"sourceType":"script"}