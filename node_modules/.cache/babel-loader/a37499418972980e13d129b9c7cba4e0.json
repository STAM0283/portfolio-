{"ast":null,"code":"// Generated by CoffeeScript 1.5.0\n(function () {\n  var events,\n      isEmpty,\n      sax,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      __bind = function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  };\n\n  sax = require('sax');\n  events = require('events');\n\n  isEmpty = function (thing) {\n    return typeof thing === \"object\" && thing != null && Object.keys(thing).length === 0;\n  };\n\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      async: false\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      async: false\n    }\n  };\n\n  exports.ValidationError = function (_super) {\n    __extends(ValidationError, _super);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n  }(Error);\n\n  exports.Parser = function (_super) {\n    __extends(Parser, _super);\n\n    function Parser(opts) {\n      this.parseString = __bind(this.parseString, this);\n      this.reset = __bind(this.reset, this);\n\n      var key, value, _ref;\n\n      this.options = {};\n      _ref = exports.defaults[\"0.2\"];\n\n      for (key in _ref) {\n        if (!__hasProp.call(_ref, key)) continue;\n        value = _ref[key];\n        this.options[key] = value;\n      }\n\n      for (key in opts) {\n        if (!__hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n\n      this.reset();\n    }\n\n    Parser.prototype.reset = function () {\n      var attrkey,\n          charkey,\n          err,\n          stack,\n          _this = this;\n\n      this.removeAllListeners();\n      this.saxParser = sax.parser(true, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      err = false;\n\n      this.saxParser.onerror = function (error) {\n        if (!err) {\n          err = true;\n          return _this.emit(\"error\", error);\n        }\n      };\n\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n\n      this.saxParser.onopentag = function (node) {\n        var key, obj, _ref;\n\n        obj = {};\n        obj[charkey] = \"\";\n\n        if (!_this.options.ignoreAttrs) {\n          _ref = node.attributes;\n\n          for (key in _ref) {\n            if (!__hasProp.call(_ref, key)) continue;\n\n            if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n              obj[attrkey] = {};\n            }\n\n            if (_this.options.mergeAttrs) {\n              obj[key] = node.attributes[key];\n            } else {\n              obj[attrkey][key] = node.attributes[key];\n            }\n          }\n        }\n\n        obj[\"#name\"] = _this.options.normalizeTags ? node.name.toLowerCase() : node.name;\n\n        if (_this.options.xmlns) {\n          obj[_this.options.xmlnskey] = {\n            uri: node.uri,\n            local: node.local\n          };\n        }\n\n        return stack.push(obj);\n      };\n\n      this.saxParser.onclosetag = function () {\n        var node, nodeName, obj, old, s, xpath;\n        obj = stack.pop();\n        nodeName = obj[\"#name\"];\n        delete obj[\"#name\"];\n        s = stack[stack.length - 1];\n\n        if (obj[charkey].match(/^\\s*$/)) {\n          delete obj[charkey];\n        } else {\n          if (_this.options.trim) {\n            obj[charkey] = obj[charkey].trim();\n          }\n\n          if (_this.options.normalize) {\n            obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n          }\n\n          if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n            obj = obj[charkey];\n          }\n        }\n\n        if (_this.options.emptyTag !== void 0 && isEmpty(obj)) {\n          obj = _this.options.emptyTag;\n        }\n\n        if (_this.options.validator != null) {\n          xpath = \"/\" + function () {\n            var _i, _len, _results;\n\n            _results = [];\n\n            for (_i = 0, _len = stack.length; _i < _len; _i++) {\n              node = stack[_i];\n\n              _results.push(node[\"#name\"]);\n            }\n\n            return _results;\n          }().concat(nodeName).join(\"/\");\n\n          try {\n            obj = _this.options.validator(xpath, s && s[nodeName], obj);\n          } catch (err) {\n            _this.emit(\"error\", err);\n          }\n        }\n\n        if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n          node = {};\n\n          if (_this.options.attrkey in obj) {\n            node[_this.options.attrkey] = obj[_this.options.attrkey];\n            delete obj[_this.options.attrkey];\n          }\n\n          if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n            node[_this.options.charkey] = obj[_this.options.charkey];\n            delete obj[_this.options.charkey];\n          }\n\n          if (Object.getOwnPropertyNames(obj).length > 0) {\n            node[_this.options.childkey] = obj;\n          }\n\n          obj = node;\n        }\n\n        if (stack.length > 0) {\n          if (!_this.options.explicitArray) {\n            if (!(nodeName in s)) {\n              return s[nodeName] = obj;\n            } else if (s[nodeName] instanceof Array) {\n              return s[nodeName].push(obj);\n            } else {\n              old = s[nodeName];\n              s[nodeName] = [old];\n              return s[nodeName].push(obj);\n            }\n          } else {\n            if (!(s[nodeName] instanceof Array)) {\n              s[nodeName] = [];\n            }\n\n            return s[nodeName].push(obj);\n          }\n        } else {\n          if (_this.options.explicitRoot) {\n            old = obj;\n            obj = {};\n            obj[nodeName] = old;\n          }\n\n          _this.resultObject = obj;\n          return _this.emit(\"end\", _this.resultObject);\n        }\n      };\n\n      return this.saxParser.ontext = this.saxParser.oncdata = function (text) {\n        var s;\n        s = stack[stack.length - 1];\n\n        if (s) {\n          return s[charkey] += text;\n        }\n      };\n    };\n\n    Parser.prototype.parseString = function (str, cb) {\n      if (cb != null && typeof cb === \"function\") {\n        this.on(\"end\", function (result) {\n          this.reset();\n\n          if (this.options.async) {\n            return process.nextTick(function () {\n              return cb(null, result);\n            });\n          } else {\n            return cb(null, result);\n          }\n        });\n        this.on(\"error\", function (err) {\n          this.reset();\n\n          if (this.options.async) {\n            return process.nextTick(function () {\n              return cb(err);\n            });\n          } else {\n            return cb(err);\n          }\n        });\n      }\n\n      if (str.toString().trim() === '') {\n        this.emit(\"end\", null);\n        return true;\n      }\n\n      return this.saxParser.write(str.toString());\n    };\n\n    return Parser;\n  }(events.EventEmitter);\n\n  exports.parseString = function (str, a, b) {\n    var cb, options, parser;\n\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n\n      options = {};\n    }\n\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n}).call(this);","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/xml2js/lib/xml2js.js"],"names":["events","isEmpty","sax","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","__bind","fn","me","apply","arguments","require","thing","Object","keys","length","exports","defaults","explicitCharkey","trim","normalize","normalizeTags","attrkey","charkey","explicitArray","ignoreAttrs","mergeAttrs","explicitRoot","validator","xmlns","explicitChildren","childkey","charsAsChildren","async","ValidationError","_super","message","Error","Parser","opts","parseString","reset","value","_ref","options","xmlnskey","err","stack","_this","removeAllListeners","saxParser","parser","onerror","error","emit","EXPLICIT_CHARKEY","resultObject","onopentag","node","obj","attributes","name","toLowerCase","uri","local","push","onclosetag","nodeName","old","s","xpath","pop","match","replace","emptyTag","_i","_len","_results","concat","join","getOwnPropertyNames","Array","ontext","oncdata","text","str","cb","on","result","process","nextTick","toString","write","EventEmitter","a","b"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.5.0\n(function() {\n  var events, isEmpty, sax,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  sax = require('sax');\n\n  events = require('events');\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      async: false\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      async: false\n    }\n  };\n\n  exports.ValidationError = (function(_super) {\n\n    __extends(ValidationError, _super);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Parser = (function(_super) {\n\n    __extends(Parser, _super);\n\n    function Parser(opts) {\n      this.parseString = __bind(this.parseString, this);\n      this.reset = __bind(this.reset, this);\n      var key, value, _ref;\n      this.options = {};\n      _ref = exports.defaults[\"0.2\"];\n      for (key in _ref) {\n        if (!__hasProp.call(_ref, key)) continue;\n        value = _ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!__hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      this.reset();\n    }\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, err, stack,\n        _this = this;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(true, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      err = false;\n      this.saxParser.onerror = function(error) {\n        if (!err) {\n          err = true;\n          return _this.emit(\"error\", error);\n        }\n      };\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = function(node) {\n        var key, obj, _ref;\n        obj = {};\n        obj[charkey] = \"\";\n        if (!_this.options.ignoreAttrs) {\n          _ref = node.attributes;\n          for (key in _ref) {\n            if (!__hasProp.call(_ref, key)) continue;\n            if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n              obj[attrkey] = {};\n            }\n            if (_this.options.mergeAttrs) {\n              obj[key] = node.attributes[key];\n            } else {\n              obj[attrkey][key] = node.attributes[key];\n            }\n          }\n        }\n        obj[\"#name\"] = _this.options.normalizeTags ? node.name.toLowerCase() : node.name;\n        if (_this.options.xmlns) {\n          obj[_this.options.xmlnskey] = {\n            uri: node.uri,\n            local: node.local\n          };\n        }\n        return stack.push(obj);\n      };\n      this.saxParser.onclosetag = function() {\n        var node, nodeName, obj, old, s, xpath;\n        obj = stack.pop();\n        nodeName = obj[\"#name\"];\n        delete obj[\"#name\"];\n        s = stack[stack.length - 1];\n        if (obj[charkey].match(/^\\s*$/)) {\n          delete obj[charkey];\n        } else {\n          if (_this.options.trim) {\n            obj[charkey] = obj[charkey].trim();\n          }\n          if (_this.options.normalize) {\n            obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n          }\n          if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n            obj = obj[charkey];\n          }\n        }\n        if (_this.options.emptyTag !== void 0 && isEmpty(obj)) {\n          obj = _this.options.emptyTag;\n        }\n        if (_this.options.validator != null) {\n          xpath = \"/\" + ((function() {\n            var _i, _len, _results;\n            _results = [];\n            for (_i = 0, _len = stack.length; _i < _len; _i++) {\n              node = stack[_i];\n              _results.push(node[\"#name\"]);\n            }\n            return _results;\n          })()).concat(nodeName).join(\"/\");\n          try {\n            obj = _this.options.validator(xpath, s && s[nodeName], obj);\n          } catch (err) {\n            _this.emit(\"error\", err);\n          }\n        }\n        if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n          node = {};\n          if (_this.options.attrkey in obj) {\n            node[_this.options.attrkey] = obj[_this.options.attrkey];\n            delete obj[_this.options.attrkey];\n          }\n          if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n            node[_this.options.charkey] = obj[_this.options.charkey];\n            delete obj[_this.options.charkey];\n          }\n          if (Object.getOwnPropertyNames(obj).length > 0) {\n            node[_this.options.childkey] = obj;\n          }\n          obj = node;\n        }\n        if (stack.length > 0) {\n          if (!_this.options.explicitArray) {\n            if (!(nodeName in s)) {\n              return s[nodeName] = obj;\n            } else if (s[nodeName] instanceof Array) {\n              return s[nodeName].push(obj);\n            } else {\n              old = s[nodeName];\n              s[nodeName] = [old];\n              return s[nodeName].push(obj);\n            }\n          } else {\n            if (!(s[nodeName] instanceof Array)) {\n              s[nodeName] = [];\n            }\n            return s[nodeName].push(obj);\n          }\n        } else {\n          if (_this.options.explicitRoot) {\n            old = obj;\n            obj = {};\n            obj[nodeName] = old;\n          }\n          _this.resultObject = obj;\n          return _this.emit(\"end\", _this.resultObject);\n        }\n      };\n      return this.saxParser.ontext = this.saxParser.oncdata = function(text) {\n        var s;\n        s = stack[stack.length - 1];\n        if (s) {\n          return s[charkey] += text;\n        }\n      };\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          if (this.options.async) {\n            return process.nextTick(function() {\n              return cb(null, result);\n            });\n          } else {\n            return cb(null, result);\n          }\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          if (this.options.async) {\n            return process.nextTick(function() {\n              return cb(err);\n            });\n          } else {\n            return cb(err);\n          }\n        });\n      }\n      if (str.toString().trim() === '') {\n        this.emit(\"end\", null);\n        return true;\n      }\n      return this.saxParser.write(str.toString());\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}