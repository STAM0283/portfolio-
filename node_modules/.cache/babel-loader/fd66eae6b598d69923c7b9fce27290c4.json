{"ast":null,"code":"var AWS = require('./core');\n\nvar Api = require('./model/api');\n\nvar regionConfig = require('./region_config');\n\nvar inherit = AWS.util.inherit;\n/**\n * The service class representing an AWS service.\n *\n * @abstract\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\n\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(), 'Service must be constructed with `new\\' operator');\n    }\n\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) return new ServiceClass(config);\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    this.config = new AWS.Config(AWS.config);\n    if (config) this.config.update(config, true);\n    this.validateService();\n    regionConfig(this);\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {},\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' + this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier + ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n\n    if (this.config.params) {\n      // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function (key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(), AWS.EventListeners.CorePost];\n\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    } // disable parameter validation\n\n\n    if (!this.config.paramValidation) {\n      request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) {\n      // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @abstract\n   */\n  setupRequestListeners: function setupRequestListeners() {},\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass() {\n    var version;\n\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else {\n      version = this.api.signatureVersion;\n    }\n\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'query':\n        return AWS.EventListeners.Query;\n\n      case 'json':\n        return AWS.EventListeners.Json;\n\n      case 'rest-json':\n        return AWS.EventListeners.RestJson;\n\n      case 'rest-xml':\n        return AWS.EventListeners.RestXml;\n    }\n\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' + this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays() {\n    var retryCount = this.numRetries();\n    var delays = [];\n\n    for (var i = 0; i < retryCount; ++i) {\n      delays[i] = Math.pow(2, i) * 30;\n    }\n\n    return delays;\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return error.code === 'ExpiredTokenException';\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    return error.code === 'ProvisionedThroughputExceededException';\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n\n      return null;\n    }\n\n    return paginator;\n  }\n});\nAWS.util.update(AWS.Service, {\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n\n      svc.prototype[method] = function (params, callback) {\n        return this.makeRequest(method, params, callback);\n      };\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else {\n      // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n    svc.services = svc.services || {};\n\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api);\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          var apis = AWS.util.nodeRequire('aws-sdk-apis');\n          setApi(apis.load(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' + superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n\n      if (!superclass.services.hasOwnProperty(version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  }\n});","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/service.js"],"names":["AWS","require","Api","regionConfig","inherit","util","Service","constructor","config","loadServiceClass","error","Error","ServiceClass","initialize","Config","update","validateService","endpoint","endpointFromTemplate","setEndpoint","serviceConfig","isEmpty","api","apiConfig","defineServiceApi","services","version","apiVersions","serviceIdentifier","apiVersion","getLatestServiceClass","getLatestServiceVersion","length","isType","Date","date","iso8601","split","Object","hasOwnProperty","keys","sort","selectedVersion","i","substr","defaultRetryCount","makeRequest","operation","params","callback","rules","operations","copy","each","key","value","input","members","undefined","request","Request","addAllRequestListeners","send","makeUnauthenticatedRequest","toUnauthenticated","waitFor","state","waiter","ResourceWaiter","wait","list","events","EventListeners","Core","serviceInterface","CorePost","addListeners","paramValidation","removeListener","VALIDATE_PARAMETERS","logger","Logger","setupRequestListeners","getSignerClass","signatureVersion","Signers","RequestSigner","getVersion","protocol","Query","Json","RestJson","RestXml","successfulResponse","resp","httpResponse","statusCode","numRetries","maxRetries","retryDelays","retryCount","delays","Math","pow","retryableError","networkingError","expiredCredentialsError","throttledError","code","e","replace","endpointPrefix","region","sslEnabled","Endpoint","paginationConfig","throwException","paginator","defineMethods","svc","prototype","iterator","method","defineService","versions","features","Array","isArray","addVersions","identifier","superclass","setApi","isApi","apis","nodeRequire","load","err","message","concat"],"mappings":"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","sourcesContent":["var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\nvar inherit = AWS.util.inherit;\n\n/**\n * The service class representing an AWS service.\n *\n * @abstract\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) return new ServiceClass(config);\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    this.config = new AWS.Config(AWS.config);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    regionConfig(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @abstract\n   */\n  setupRequestListeners: function setupRequestListeners() {\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass() {\n    var version;\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays() {\n    var retryCount = this.numRetries();\n    var delays = [];\n    for (var i = 0; i < retryCount; ++i) {\n      delays[i] = Math.pow(2, i) * 30;\n    }\n    return delays;\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    return (error.code === 'ProvisionedThroughputExceededException');\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      svc.prototype[method] = function (params, callback) {\n        return this.makeRequest(method, params, callback);\n      };\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api);\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          var apis = AWS.util.nodeRequire('aws-sdk-apis');\n          setApi(apis.load(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!superclass.services.hasOwnProperty(version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}