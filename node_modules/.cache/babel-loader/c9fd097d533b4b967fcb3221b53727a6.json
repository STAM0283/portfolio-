{"ast":null,"code":"// Generated by CoffeeScript 1.3.3\n(function () {\n  var XMLFragment,\n      __hasProp = {}.hasOwnProperty;\n\n  XMLFragment = function () {\n    function XMLFragment(parent, name, attributes, text) {\n      this.isRoot = false;\n      this.documentObject = null;\n      this.parent = parent;\n      this.name = name;\n      this.attributes = attributes;\n      this.value = text;\n      this.children = [];\n    }\n\n    XMLFragment.prototype.element = function (name, attributes, text) {\n      var child, key, val, _ref, _ref1;\n\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n\n      name = '' + name || '';\n      this.assertLegalChar(name);\n\n      if (attributes == null) {\n        attributes = {};\n      }\n\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n\n      child = new XMLFragment(this, name, attributes);\n\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n\n      this.children.push(child);\n      return child;\n    };\n\n    XMLFragment.prototype.insertBefore = function (name, attributes, text) {\n      var child, i, key, val, _ref, _ref1;\n\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n\n      name = '' + name || '';\n      this.assertLegalChar(name);\n\n      if (attributes == null) {\n        attributes = {};\n      }\n\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n\n      child = new XMLFragment(this.parent, name, attributes);\n\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n\n      i = this.parent.children.indexOf(this);\n      this.parent.children.splice(i, 0, child);\n      return child;\n    };\n\n    XMLFragment.prototype.insertAfter = function (name, attributes, text) {\n      var child, i, key, val, _ref, _ref1;\n\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n\n      name = '' + name || '';\n      this.assertLegalChar(name);\n\n      if (attributes == null) {\n        attributes = {};\n      }\n\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n\n      child = new XMLFragment(this.parent, name, attributes);\n\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n\n      i = this.parent.children.indexOf(this);\n      this.parent.children.splice(i + 1, 0, child);\n      return child;\n    };\n\n    XMLFragment.prototype.remove = function () {\n      var i, _ref;\n\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(_ref = [])), _ref;\n      return this.parent;\n    };\n\n    XMLFragment.prototype.text = function (value) {\n      var child;\n\n      if (!(value != null)) {\n        throw new Error(\"Missing element text\");\n      }\n\n      value = '' + value || '';\n      value = this.escape(value);\n      this.assertLegalChar(value);\n      child = new XMLFragment(this, '', {}, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.cdata = function (value) {\n      var child;\n\n      if (!(value != null)) {\n        throw new Error(\"Missing CDATA text\");\n      }\n\n      value = '' + value || '';\n      this.assertLegalChar(value);\n\n      if (value.match(/]]>/)) {\n        throw new Error(\"Invalid CDATA text: \" + value);\n      }\n\n      child = new XMLFragment(this, '', {}, '<![CDATA[' + value + ']]>');\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.comment = function (value) {\n      var child;\n\n      if (!(value != null)) {\n        throw new Error(\"Missing comment text\");\n      }\n\n      value = '' + value || '';\n      value = this.escape(value);\n      this.assertLegalChar(value);\n\n      if (value.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + value);\n      }\n\n      child = new XMLFragment(this, '', {}, '<!-- ' + value + ' -->');\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.raw = function (value) {\n      var child;\n\n      if (!(value != null)) {\n        throw new Error(\"Missing raw text\");\n      }\n\n      value = '' + value || '';\n      child = new XMLFragment(this, '', {}, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.up = function () {\n      if (this.isRoot) {\n        throw new Error(\"This node has no parent. Use doc() if you need to get the document object.\");\n      }\n\n      return this.parent;\n    };\n\n    XMLFragment.prototype.root = function () {\n      var child;\n\n      if (this.isRoot) {\n        return this;\n      }\n\n      child = this.parent;\n\n      while (!child.isRoot) {\n        child = child.parent;\n      }\n\n      return child;\n    };\n\n    XMLFragment.prototype.document = function () {\n      return this.root().documentObject;\n    };\n\n    XMLFragment.prototype.end = function (options) {\n      return this.document().toString(options);\n    };\n\n    XMLFragment.prototype.prev = function () {\n      var i;\n\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n\n      i = this.parent.children.indexOf(this);\n\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n\n      return this.parent.children[i - 1];\n    };\n\n    XMLFragment.prototype.next = function () {\n      var i;\n\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n\n      i = this.parent.children.indexOf(this);\n\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n\n      return this.parent.children[i + 1];\n    };\n\n    XMLFragment.prototype.clone = function (deep) {\n      var clonedSelf;\n      clonedSelf = new XMLFragment(this.parent, this.name, this.attributes, this.value);\n\n      if (deep) {\n        this.children.forEach(function (child) {\n          var clonedChild;\n          clonedChild = child.clone(deep);\n          clonedChild.parent = clonedSelf;\n          return clonedSelf.children.push(clonedChild);\n        });\n      }\n\n      return clonedSelf;\n    };\n\n    XMLFragment.prototype.importXMLBuilder = function (xmlbuilder) {\n      var clonedRoot;\n      clonedRoot = xmlbuilder.root().clone(true);\n      clonedRoot.parent = this;\n      this.children.push(clonedRoot);\n      clonedRoot.isRoot = false;\n      return this;\n    };\n\n    XMLFragment.prototype.attribute = function (name, value) {\n      var _ref;\n\n      if (!(name != null)) {\n        throw new Error(\"Missing attribute name\");\n      }\n\n      if (!(value != null)) {\n        throw new Error(\"Missing attribute value\");\n      }\n\n      name = '' + name || '';\n      value = '' + value || '';\n\n      if ((_ref = this.attributes) == null) {\n        this.attributes = {};\n      }\n\n      this.attributes[name] = this.escape(value);\n      return this;\n    };\n\n    XMLFragment.prototype.removeAttribute = function (name) {\n      if (!(name != null)) {\n        throw new Error(\"Missing attribute name\");\n      }\n\n      name = '' + name || '';\n      delete this.attributes[name];\n      return this;\n    };\n\n    XMLFragment.prototype.toString = function (options, level) {\n      var attName, attValue, child, indent, newline, pretty, r, space, _i, _len, _ref, _ref1;\n\n      pretty = options != null && options.pretty || false;\n      indent = options != null && options.indent || '  ';\n      newline = options != null && options.newline || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n\n      if (pretty) {\n        r += space;\n      }\n\n      if (!(this.value != null)) {\n        r += '<' + this.name;\n      } else {\n        r += '' + this.value;\n      }\n\n      _ref = this.attributes;\n\n      for (attName in _ref) {\n        attValue = _ref[attName];\n\n        if (this.name === '!DOCTYPE') {\n          r += ' ' + attValue;\n        } else {\n          r += ' ' + attName + '=\"' + attValue + '\"';\n        }\n      }\n\n      if (this.children.length === 0) {\n        if (!(this.value != null)) {\n          r += this.name === '?xml' ? '?>' : this.name === '!DOCTYPE' ? '>' : '/>';\n        }\n\n        if (pretty) {\n          r += newline;\n        }\n      } else if (pretty && this.children.length === 1 && this.children[0].value) {\n        r += '>';\n        r += this.children[0].value;\n        r += '</' + this.name + '>';\n        r += newline;\n      } else {\n        r += '>';\n\n        if (pretty) {\n          r += newline;\n        }\n\n        _ref1 = this.children;\n\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          child = _ref1[_i];\n          r += child.toString(options, level + 1);\n        }\n\n        if (pretty) {\n          r += space;\n        }\n\n        r += '</' + this.name + '>';\n\n        if (pretty) {\n          r += newline;\n        }\n      }\n\n      return r;\n    };\n\n    XMLFragment.prototype.escape = function (str) {\n      return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n    };\n\n    XMLFragment.prototype.assertLegalChar = function (str) {\n      var chars, chr;\n      chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uD800-\\uDFFF\\uFFFE-\\uFFFF]/;\n      chr = str.match(chars);\n\n      if (chr) {\n        throw new Error(\"Invalid character (\" + chr + \") in string: \" + str);\n      }\n    };\n\n    XMLFragment.prototype.is = function (obj, type) {\n      var clas;\n      clas = Object.prototype.toString.call(obj).slice(8, -1);\n      return obj != null && clas === type;\n    };\n\n    XMLFragment.prototype.ele = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLFragment.prototype.txt = function (value) {\n      return this.text(value);\n    };\n\n    XMLFragment.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLFragment.prototype.att = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLFragment.prototype.com = function (value) {\n      return this.comment(value);\n    };\n\n    XMLFragment.prototype.doc = function () {\n      return this.document();\n    };\n\n    XMLFragment.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLFragment.prototype.t = function (value) {\n      return this.text(value);\n    };\n\n    XMLFragment.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLFragment.prototype.a = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLFragment.prototype.c = function (value) {\n      return this.comment(value);\n    };\n\n    XMLFragment.prototype.r = function (value) {\n      return this.raw(value);\n    };\n\n    XMLFragment.prototype.u = function () {\n      return this.up();\n    };\n\n    return XMLFragment;\n  }();\n\n  module.exports = XMLFragment;\n}).call(this);","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/xmlbuilder/lib/XMLFragment.js"],"names":["XMLFragment","__hasProp","hasOwnProperty","parent","name","attributes","text","isRoot","documentObject","value","children","prototype","element","child","key","val","_ref","_ref1","Error","assertLegalChar","is","call","escape","raw","push","insertBefore","i","indexOf","splice","insertAfter","remove","apply","concat","cdata","match","comment","up","root","document","end","options","toString","prev","next","length","clone","deep","clonedSelf","forEach","clonedChild","importXMLBuilder","xmlbuilder","clonedRoot","attribute","removeAttribute","level","attName","attValue","indent","newline","pretty","r","space","_i","_len","Array","join","str","replace","chars","chr","obj","type","clas","Object","slice","ele","txt","dat","att","com","doc","e","t","d","a","c","u","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.3.3\n(function() {\n  var XMLFragment,\n    __hasProp = {}.hasOwnProperty;\n\n  XMLFragment = (function() {\n\n    function XMLFragment(parent, name, attributes, text) {\n      this.isRoot = false;\n      this.documentObject = null;\n      this.parent = parent;\n      this.name = name;\n      this.attributes = attributes;\n      this.value = text;\n      this.children = [];\n    }\n\n    XMLFragment.prototype.element = function(name, attributes, text) {\n      var child, key, val, _ref, _ref1;\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n      name = '' + name || '';\n      this.assertLegalChar(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n      child = new XMLFragment(this, name, attributes);\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLFragment.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, key, val, _ref, _ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n      name = '' + name || '';\n      this.assertLegalChar(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n      child = new XMLFragment(this.parent, name, attributes);\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n      i = this.parent.children.indexOf(this);\n      this.parent.children.splice(i, 0, child);\n      return child;\n    };\n\n    XMLFragment.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, key, val, _ref, _ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      if (!(name != null)) {\n        throw new Error(\"Missing element name\");\n      }\n      name = '' + name || '';\n      this.assertLegalChar(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      if (this.is(attributes, 'String') && this.is(text, 'Object')) {\n        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];\n      } else if (this.is(attributes, 'String')) {\n        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];\n      }\n      for (key in attributes) {\n        if (!__hasProp.call(attributes, key)) continue;\n        val = attributes[key];\n        val = '' + val || '';\n        attributes[key] = this.escape(val);\n      }\n      child = new XMLFragment(this.parent, name, attributes);\n      if (text != null) {\n        text = '' + text || '';\n        text = this.escape(text);\n        this.assertLegalChar(text);\n        child.raw(text);\n      }\n      i = this.parent.children.indexOf(this);\n      this.parent.children.splice(i + 1, 0, child);\n      return child;\n    };\n\n    XMLFragment.prototype.remove = function() {\n      var i, _ref;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(_ref = [])), _ref;\n      return this.parent;\n    };\n\n    XMLFragment.prototype.text = function(value) {\n      var child;\n      if (!(value != null)) {\n        throw new Error(\"Missing element text\");\n      }\n      value = '' + value || '';\n      value = this.escape(value);\n      this.assertLegalChar(value);\n      child = new XMLFragment(this, '', {}, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.cdata = function(value) {\n      var child;\n      if (!(value != null)) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      value = '' + value || '';\n      this.assertLegalChar(value);\n      if (value.match(/]]>/)) {\n        throw new Error(\"Invalid CDATA text: \" + value);\n      }\n      child = new XMLFragment(this, '', {}, '<![CDATA[' + value + ']]>');\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.comment = function(value) {\n      var child;\n      if (!(value != null)) {\n        throw new Error(\"Missing comment text\");\n      }\n      value = '' + value || '';\n      value = this.escape(value);\n      this.assertLegalChar(value);\n      if (value.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + value);\n      }\n      child = new XMLFragment(this, '', {}, '<!-- ' + value + ' -->');\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.raw = function(value) {\n      var child;\n      if (!(value != null)) {\n        throw new Error(\"Missing raw text\");\n      }\n      value = '' + value || '';\n      child = new XMLFragment(this, '', {}, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLFragment.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"This node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLFragment.prototype.root = function() {\n      var child;\n      if (this.isRoot) {\n        return this;\n      }\n      child = this.parent;\n      while (!child.isRoot) {\n        child = child.parent;\n      }\n      return child;\n    };\n\n    XMLFragment.prototype.document = function() {\n      return this.root().documentObject;\n    };\n\n    XMLFragment.prototype.end = function(options) {\n      return this.document().toString(options);\n    };\n\n    XMLFragment.prototype.prev = function() {\n      var i;\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLFragment.prototype.next = function() {\n      var i;\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLFragment.prototype.clone = function(deep) {\n      var clonedSelf;\n      clonedSelf = new XMLFragment(this.parent, this.name, this.attributes, this.value);\n      if (deep) {\n        this.children.forEach(function(child) {\n          var clonedChild;\n          clonedChild = child.clone(deep);\n          clonedChild.parent = clonedSelf;\n          return clonedSelf.children.push(clonedChild);\n        });\n      }\n      return clonedSelf;\n    };\n\n    XMLFragment.prototype.importXMLBuilder = function(xmlbuilder) {\n      var clonedRoot;\n      clonedRoot = xmlbuilder.root().clone(true);\n      clonedRoot.parent = this;\n      this.children.push(clonedRoot);\n      clonedRoot.isRoot = false;\n      return this;\n    };\n\n    XMLFragment.prototype.attribute = function(name, value) {\n      var _ref;\n      if (!(name != null)) {\n        throw new Error(\"Missing attribute name\");\n      }\n      if (!(value != null)) {\n        throw new Error(\"Missing attribute value\");\n      }\n      name = '' + name || '';\n      value = '' + value || '';\n      if ((_ref = this.attributes) == null) {\n        this.attributes = {};\n      }\n      this.attributes[name] = this.escape(value);\n      return this;\n    };\n\n    XMLFragment.prototype.removeAttribute = function(name) {\n      if (!(name != null)) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = '' + name || '';\n      delete this.attributes[name];\n      return this;\n    };\n\n    XMLFragment.prototype.toString = function(options, level) {\n      var attName, attValue, child, indent, newline, pretty, r, space, _i, _len, _ref, _ref1;\n      pretty = (options != null) && options.pretty || false;\n      indent = (options != null) && options.indent || '  ';\n      newline = (options != null) && options.newline || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      if (!(this.value != null)) {\n        r += '<' + this.name;\n      } else {\n        r += '' + this.value;\n      }\n      _ref = this.attributes;\n      for (attName in _ref) {\n        attValue = _ref[attName];\n        if (this.name === '!DOCTYPE') {\n          r += ' ' + attValue;\n        } else {\n          r += ' ' + attName + '=\"' + attValue + '\"';\n        }\n      }\n      if (this.children.length === 0) {\n        if (!(this.value != null)) {\n          r += this.name === '?xml' ? '?>' : this.name === '!DOCTYPE' ? '>' : '/>';\n        }\n        if (pretty) {\n          r += newline;\n        }\n      } else if (pretty && this.children.length === 1 && this.children[0].value) {\n        r += '>';\n        r += this.children[0].value;\n        r += '</' + this.name + '>';\n        r += newline;\n      } else {\n        r += '>';\n        if (pretty) {\n          r += newline;\n        }\n        _ref1 = this.children;\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          child = _ref1[_i];\n          r += child.toString(options, level + 1);\n        }\n        if (pretty) {\n          r += space;\n        }\n        r += '</' + this.name + '>';\n        if (pretty) {\n          r += newline;\n        }\n      }\n      return r;\n    };\n\n    XMLFragment.prototype.escape = function(str) {\n      return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n    };\n\n    XMLFragment.prototype.assertLegalChar = function(str) {\n      var chars, chr;\n      chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uD800-\\uDFFF\\uFFFE-\\uFFFF]/;\n      chr = str.match(chars);\n      if (chr) {\n        throw new Error(\"Invalid character (\" + chr + \") in string: \" + str);\n      }\n    };\n\n    XMLFragment.prototype.is = function(obj, type) {\n      var clas;\n      clas = Object.prototype.toString.call(obj).slice(8, -1);\n      return (obj != null) && clas === type;\n    };\n\n    XMLFragment.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLFragment.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLFragment.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLFragment.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLFragment.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLFragment.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLFragment.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLFragment.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLFragment.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLFragment.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLFragment.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLFragment.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLFragment.prototype.u = function() {\n      return this.up();\n    };\n\n    return XMLFragment;\n\n  })();\n\n  module.exports = XMLFragment;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}