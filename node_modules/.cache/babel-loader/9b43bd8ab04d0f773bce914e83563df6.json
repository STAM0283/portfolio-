{"ast":null,"code":"var util = require('../util');\n\nfunction JsonBuilder() {}\n\nJsonBuilder.prototype.build = function (value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure':\n      return translateStructure(value, shape);\n\n    case 'map':\n      return translateMap(value, shape);\n\n    case 'list':\n      return translateList(value, shape);\n\n    default:\n      return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  var struct = {};\n  util.each(structure, function (name, value) {\n    var memberShape = shape.members[name];\n\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function (value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function (key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\nmodule.exports = JsonBuilder;","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/json/builder.js"],"names":["util","require","JsonBuilder","prototype","build","value","shape","JSON","stringify","translate","undefined","type","translateStructure","translateMap","translateList","translateScalar","structure","struct","each","name","memberShape","members","location","result","list","out","arrayEach","member","push","map","key","toWireFormat","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AAEA,SAASC,WAAT,GAAuB,CAAG;;AAE1BA,WAAW,CAACC,SAAZ,CAAsBC,KAAtB,GAA8B,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACnD,SAAOC,IAAI,CAACC,SAAL,CAAeC,SAAS,CAACJ,KAAD,EAAQC,KAAR,CAAxB,CAAP;AACD,CAFD;;AAIA,SAASG,SAAT,CAAmBJ,KAAnB,EAA0BC,KAA1B,EAAiC;AAC/B,MAAI,CAACA,KAAD,IAAUD,KAAK,KAAKK,SAApB,IAAiCL,KAAK,KAAK,IAA/C,EAAqD,OAAOK,SAAP;;AAErD,UAAQJ,KAAK,CAACK,IAAd;AACE,SAAK,WAAL;AAAkB,aAAOC,kBAAkB,CAACP,KAAD,EAAQC,KAAR,CAAzB;;AAClB,SAAK,KAAL;AAAY,aAAOO,YAAY,CAACR,KAAD,EAAQC,KAAR,CAAnB;;AACZ,SAAK,MAAL;AAAa,aAAOQ,aAAa,CAACT,KAAD,EAAQC,KAAR,CAApB;;AACb;AAAS,aAAOS,eAAe,CAACV,KAAD,EAAQC,KAAR,CAAtB;AAJX;AAMD;;AAED,SAASM,kBAAT,CAA4BI,SAA5B,EAAuCV,KAAvC,EAA8C;AAC5C,MAAIW,MAAM,GAAG,EAAb;AACAjB,EAAAA,IAAI,CAACkB,IAAL,CAAUF,SAAV,EAAqB,UAASG,IAAT,EAAed,KAAf,EAAsB;AACzC,QAAIe,WAAW,GAAGd,KAAK,CAACe,OAAN,CAAcF,IAAd,CAAlB;;AACA,QAAIC,WAAJ,EAAiB;AACf,UAAIA,WAAW,CAACE,QAAZ,KAAyB,MAA7B,EAAqC;AAErC,UAAIC,MAAM,GAAGd,SAAS,CAACJ,KAAD,EAAQe,WAAR,CAAtB;AACA,UAAIG,MAAM,KAAKb,SAAf,EAA0BO,MAAM,CAACE,IAAD,CAAN,GAAeI,MAAf;AAC3B;AACF,GARD;AASA,SAAON,MAAP;AACD;;AAED,SAASH,aAAT,CAAuBU,IAAvB,EAA6BlB,KAA7B,EAAoC;AAClC,MAAImB,GAAG,GAAG,EAAV;AACAzB,EAAAA,IAAI,CAAC0B,SAAL,CAAeF,IAAf,EAAqB,UAASnB,KAAT,EAAgB;AACnC,QAAIkB,MAAM,GAAGd,SAAS,CAACJ,KAAD,EAAQC,KAAK,CAACqB,MAAd,CAAtB;AACA,QAAIJ,MAAM,KAAKb,SAAf,EAA0Be,GAAG,CAACG,IAAJ,CAASL,MAAT;AAC3B,GAHD;AAIA,SAAOE,GAAP;AACD;;AAED,SAASZ,YAAT,CAAsBgB,GAAtB,EAA2BvB,KAA3B,EAAkC;AAChC,MAAImB,GAAG,GAAG,EAAV;AACAzB,EAAAA,IAAI,CAACkB,IAAL,CAAUW,GAAV,EAAe,UAASC,GAAT,EAAczB,KAAd,EAAqB;AAClC,QAAIkB,MAAM,GAAGd,SAAS,CAACJ,KAAD,EAAQC,KAAK,CAACD,KAAd,CAAtB;AACA,QAAIkB,MAAM,KAAKb,SAAf,EAA0Be,GAAG,CAACK,GAAD,CAAH,GAAWP,MAAX;AAC3B,GAHD;AAIA,SAAOE,GAAP;AACD;;AAED,SAASV,eAAT,CAAyBV,KAAzB,EAAgCC,KAAhC,EAAuC;AACrC,SAAOA,KAAK,CAACyB,YAAN,CAAmB1B,KAAnB,CAAP;AACD;;AAED2B,MAAM,CAACC,OAAP,GAAiB/B,WAAjB","sourcesContent":["var util = require('../util');\n\nfunction JsonBuilder() { }\n\nJsonBuilder.prototype.build = function(value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\nmodule.exports = JsonBuilder;\n"]},"metadata":{},"sourceType":"script"}