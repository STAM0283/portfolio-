{"ast":null,"code":"\"use strict\";\n\nvar createDirectmail = require(\"directmail\"); // Expose to the world\n\n\nmodule.exports = DirectTransport;\n/**\n * <p>Generates a Transport object for DirectMail</p>\n *\n * <p>Possible options can be the following:</p>\n *\n * <ul>\n *     <li><b>debug</b> - If true, logs output to console</li>\n * </ul>\n *\n * @constructor\n * @param {Object} options Options object for the DirectMail transport\n */\n\nfunction DirectTransport(options) {\n  this.directmail = createDirectmail(options);\n} // Setup version info for the transport\n\n\nDirectTransport.prototype.version = createDirectmail.version;\n/**\n * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the sending is completed\n */\n\nDirectTransport.prototype.sendMail = function (emailMessage, callback) {\n  this.generateMessage(emailMessage, function (err, email) {\n    if (err) {\n      return typeof callback == \"function\" && callback(err);\n    }\n\n    this.handleMessage(emailMessage, email, callback);\n  }.bind(this));\n};\n/**\n * <p>Compiles and sends the request to SMTP with e-mail data</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {String} email Compiled raw e-mail as a string\n * @param {Function} callback Callback function to run once the message has been sent\n */\n\n\nDirectTransport.prototype.handleMessage = function (emailMessage, email, callback) {\n  var statusHandler,\n      envelope = emailMessage.getEnvelope();\n\n  try {\n    statusHandler = this.directmail.send({\n      from: envelope.from,\n      recipients: envelope.to,\n      message: email\n    });\n  } catch (E) {\n    if (typeof callback == \"function\") {\n      callback(E);\n    }\n\n    return;\n  }\n\n  if (typeof callback == \"function\") {\n    callback(null, {\n      message: \"Message Queued\",\n      messageId: emailMessage._messageId,\n      statusHandler: statusHandler\n    });\n  }\n};\n/**\n * <p>Compiles the messagecomposer object to a string.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run once the message has been compiled\n */\n\n\nDirectTransport.prototype.generateMessage = function (emailMessage, callback) {\n  var email = \"\";\n  emailMessage.on(\"data\", function (chunk) {\n    email += (chunk || \"\").toString(\"utf-8\");\n  });\n  emailMessage.on(\"end\", function (chunk) {\n    email += (chunk || \"\").toString(\"utf-8\");\n    callback(null, email);\n  });\n  emailMessage.streamMessage();\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/express-mailer/node_modules/nodemailer/lib/engines/direct.js"],"names":["createDirectmail","require","module","exports","DirectTransport","options","directmail","prototype","version","sendMail","emailMessage","callback","generateMessage","err","email","handleMessage","bind","statusHandler","envelope","getEnvelope","send","from","recipients","to","message","E","messageId","_messageId","on","chunk","toString","streamMessage"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,YAAD,CAA9B,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiBC,eAAjB;AAEA;;;;;;;;;;;;;AAYA,SAASA,eAAT,CAAyBC,OAAzB,EAAiC;AAC7B,OAAKC,UAAL,GAAkBN,gBAAgB,CAACK,OAAD,CAAlC;AACH,C,CAED;;;AACAD,eAAe,CAACG,SAAhB,CAA0BC,OAA1B,GAAoCR,gBAAgB,CAACQ,OAArD;AAEA;;;;;;;AAMAJ,eAAe,CAACG,SAAhB,CAA0BE,QAA1B,GAAqC,UAASC,YAAT,EAAuBC,QAAvB,EAAiC;AAClE,OAAKC,eAAL,CAAqBF,YAArB,EAAoC,UAASG,GAAT,EAAcC,KAAd,EAAoB;AACpD,QAAGD,GAAH,EAAO;AACH,aAAO,OAAOF,QAAP,IAAmB,UAAnB,IAAiCA,QAAQ,CAACE,GAAD,CAAhD;AACH;;AACD,SAAKE,aAAL,CAAmBL,YAAnB,EAAiCI,KAAjC,EAAwCH,QAAxC;AACH,GALkC,CAKhCK,IALgC,CAK3B,IAL2B,CAAnC;AAMH,CAPD;AASA;;;;;;;;;AAOAZ,eAAe,CAACG,SAAhB,CAA0BQ,aAA1B,GAA0C,UAASL,YAAT,EAAuBI,KAAvB,EAA8BH,QAA9B,EAAwC;AAC9E,MAAIM,aAAJ;AAAA,MACIC,QAAQ,GAAGR,YAAY,CAACS,WAAb,EADf;;AAGA,MAAG;AACCF,IAAAA,aAAa,GAAG,KAAKX,UAAL,CAAgBc,IAAhB,CAAqB;AACjCC,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IADkB;AAEjCC,MAAAA,UAAU,EAAEJ,QAAQ,CAACK,EAFY;AAGjCC,MAAAA,OAAO,EAAEV;AAHwB,KAArB,CAAhB;AAKH,GAND,CAMC,OAAMW,CAAN,EAAQ;AACL,QAAG,OAAOd,QAAP,IAAmB,UAAtB,EAAiC;AAC7BA,MAAAA,QAAQ,CAACc,CAAD,CAAR;AACH;;AACD;AACH;;AAED,MAAG,OAAOd,QAAP,IAAmB,UAAtB,EAAiC;AAC7BA,IAAAA,QAAQ,CAAC,IAAD,EAAO;AACXa,MAAAA,OAAO,EAAE,gBADE;AAEXE,MAAAA,SAAS,EAAEhB,YAAY,CAACiB,UAFb;AAGXV,MAAAA,aAAa,EAAEA;AAHJ,KAAP,CAAR;AAKH;AACJ,CAxBD;AA0BA;;;;;;;;AAOAb,eAAe,CAACG,SAAhB,CAA0BK,eAA1B,GAA4C,UAASF,YAAT,EAAuBC,QAAvB,EAAiC;AACzE,MAAIG,KAAK,GAAG,EAAZ;AAEAJ,EAAAA,YAAY,CAACkB,EAAb,CAAgB,MAAhB,EAAwB,UAASC,KAAT,EAAe;AACnCf,IAAAA,KAAK,IAAI,CAACe,KAAK,IAAI,EAAV,EAAcC,QAAd,CAAuB,OAAvB,CAAT;AACH,GAFD;AAIApB,EAAAA,YAAY,CAACkB,EAAb,CAAgB,KAAhB,EAAuB,UAASC,KAAT,EAAe;AAClCf,IAAAA,KAAK,IAAI,CAACe,KAAK,IAAI,EAAV,EAAcC,QAAd,CAAuB,OAAvB,CAAT;AACAnB,IAAAA,QAAQ,CAAC,IAAD,EAAOG,KAAP,CAAR;AACH,GAHD;AAKAJ,EAAAA,YAAY,CAACqB,aAAb;AACH,CAbD","sourcesContent":["\"use strict\";\n\nvar createDirectmail = require(\"directmail\");\n\n// Expose to the world\nmodule.exports = DirectTransport;\n\n/**\n * <p>Generates a Transport object for DirectMail</p>\n *\n * <p>Possible options can be the following:</p>\n *\n * <ul>\n *     <li><b>debug</b> - If true, logs output to console</li>\n * </ul>\n *\n * @constructor\n * @param {Object} options Options object for the DirectMail transport\n */\nfunction DirectTransport(options){\n    this.directmail = createDirectmail(options);\n}\n\n// Setup version info for the transport\nDirectTransport.prototype.version = createDirectmail.version;\n\n/**\n * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run when the sending is completed\n */\nDirectTransport.prototype.sendMail = function(emailMessage, callback) {\n    this.generateMessage(emailMessage, (function(err, email){\n        if(err){\n            return typeof callback == \"function\" && callback(err);\n        }\n        this.handleMessage(emailMessage, email, callback);\n    }).bind(this));\n};\n\n/**\n * <p>Compiles and sends the request to SMTP with e-mail data</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {String} email Compiled raw e-mail as a string\n * @param {Function} callback Callback function to run once the message has been sent\n */\nDirectTransport.prototype.handleMessage = function(emailMessage, email, callback) {\n    var statusHandler,\n        envelope = emailMessage.getEnvelope();\n\n    try{\n        statusHandler = this.directmail.send({\n            from: envelope.from,\n            recipients: envelope.to,\n            message: email\n        });\n    }catch(E){\n        if(typeof callback == \"function\"){\n            callback(E);\n        }\n        return;\n    }\n\n    if(typeof callback == \"function\"){\n        callback(null, {\n            message: \"Message Queued\",\n            messageId: emailMessage._messageId,\n            statusHandler: statusHandler\n        });\n    }\n};\n\n/**\n * <p>Compiles the messagecomposer object to a string.</p>\n *\n * @param {Object} emailMessage MailComposer object\n * @param {Function} callback Callback function to run once the message has been compiled\n */\n\nDirectTransport.prototype.generateMessage = function(emailMessage, callback) {\n    var email = \"\";\n\n    emailMessage.on(\"data\", function(chunk){\n        email += (chunk || \"\").toString(\"utf-8\");\n    });\n\n    emailMessage.on(\"end\", function(chunk){\n        email += (chunk || \"\").toString(\"utf-8\");\n        callback(null, email);\n    });\n\n    emailMessage.streamMessage();\n};\n"]},"metadata":{},"sourceType":"script"}