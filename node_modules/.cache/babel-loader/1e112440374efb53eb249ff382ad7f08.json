{"ast":null,"code":"var AWS = require('../core');\n\nvar inherit = AWS.util.inherit;\n/**\n * @api private\n */\n\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2':\n      return AWS.Signers.V2;\n\n    case 'v3':\n      return AWS.Signers.V3;\n\n    case 'v4':\n      return AWS.Signers.V4;\n\n    case 's3':\n      return AWS.Signers.S3;\n\n    case 'v3https':\n      return AWS.Signers.V3Https;\n  }\n\n  throw new Error('Unknown signing version ' + version);\n};\n\nrequire('./v2');\n\nrequire('./v3');\n\nrequire('./v3https');\n\nrequire('./v4');\n\nrequire('./s3');\n\nrequire('./presign');","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/signers/request_signer.js"],"names":["AWS","require","inherit","util","Signers","RequestSigner","constructor","request","getVersion","version","V2","V3","V4","S3","V3Https","Error"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AACA,IAAIC,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASD,OAAvB;AAEA;;;;AAGAF,GAAG,CAACI,OAAJ,CAAYC,aAAZ,GAA4BH,OAAO,CAAC;AAClCI,EAAAA,WAAW,EAAE,SAASD,aAAT,CAAuBE,OAAvB,EAAgC;AAC3C,SAAKA,OAAL,GAAeA,OAAf;AACD;AAHiC,CAAD,CAAnC;;AAMAP,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BG,UAA1B,GAAuC,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAClE,UAAQA,OAAR;AACE,SAAK,IAAL;AAAW,aAAOT,GAAG,CAACI,OAAJ,CAAYM,EAAnB;;AACX,SAAK,IAAL;AAAW,aAAOV,GAAG,CAACI,OAAJ,CAAYO,EAAnB;;AACX,SAAK,IAAL;AAAW,aAAOX,GAAG,CAACI,OAAJ,CAAYQ,EAAnB;;AACX,SAAK,IAAL;AAAW,aAAOZ,GAAG,CAACI,OAAJ,CAAYS,EAAnB;;AACX,SAAK,SAAL;AAAgB,aAAOb,GAAG,CAACI,OAAJ,CAAYU,OAAnB;AALlB;;AAOA,QAAM,IAAIC,KAAJ,CAAU,6BAA6BN,OAAvC,CAAN;AACD,CATD;;AAWAR,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,WAAD,CAAP;;AACAA,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,WAAD,CAAP","sourcesContent":["var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2': return AWS.Signers.V2;\n    case 'v3': return AWS.Signers.V3;\n    case 'v4': return AWS.Signers.V4;\n    case 's3': return AWS.Signers.S3;\n    case 'v3https': return AWS.Signers.V3Https;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\n\nrequire('./v2');\nrequire('./v3');\nrequire('./v3https');\nrequire('./v4');\nrequire('./s3');\nrequire('./presign');\n"]},"metadata":{},"sourceType":"script"}