{"ast":null,"code":"var util = require('../util');\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n  var uri = [req.httpRequest.endpoint.path, operation.httpPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n  var escapePathParamFn = req.service.escapePathParam || escapePathParam;\n  var escapeQuerystringParamFn = req.service.escapeQuerystringParam || escapeQuerystringParam;\n  var queryString = {},\n      queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = req.params[name];\n    if (paramValue === null || paramValue === undefined) return;\n\n    if (member.location === 'uri') {\n      uri = uri.replace('{' + member.name + '}', escapePathParamFn(paramValue));\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n      queryString[member.name] = escapeQuerystringParamFn(paramValue);\n    }\n  });\n\n  if (queryStringSet) {\n    uri += uri.indexOf('?') >= 0 ? '&' : '?';\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function (key) {\n      parts.push(escapeQuerystringParam(key) + '=' + queryString[key]);\n    });\n    uri += parts.join('&');\n  }\n\n  req.httpRequest.path = uri;\n}\n\nfunction escapePathParam(value) {\n  return util.uriEscape(String(value));\n}\n\nfunction escapeQuerystringParam(value) {\n  return util.uriEscape(String(value));\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function (key, value) {\n        req.httpRequest.headers[member.name + key] = value;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n}\n\nfunction extractError() {}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output; // normalize headers names to lower-cased keys for matching\n\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n  util.each(output.members, function (name, member) {\n    var header = (member.name || name).toLowerCase();\n\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      util.each(r.headers, function (k, v) {\n        var result = k.match(new RegExp('^' + member.name + '(.+)', 'i'));\n\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        data[name] = headers[header];\n      }\n    } else if (member.location === 'status') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n  resp.data = data;\n}\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/protocol/rest.js"],"names":["util","require","populateMethod","req","httpRequest","method","service","api","operations","operation","httpMethod","populateURI","input","uri","endpoint","path","httpPath","join","replace","escapePathParamFn","escapePathParam","escapeQuerystringParamFn","escapeQuerystringParam","queryString","queryStringSet","each","members","name","member","paramValue","params","undefined","location","indexOf","parts","arrayEach","Object","keys","sort","key","push","value","uriEscape","String","populateHeaders","type","headers","toWireFormat","toString","buildRequest","extractError","extractData","resp","request","data","r","httpResponse","output","k","v","toLowerCase","header","result","match","RegExp","parseInt","statusCode","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3BA,EAAAA,GAAG,CAACC,WAAJ,CAAgBC,MAAhB,GAAyBF,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgBC,UAAhB,CAA2BL,GAAG,CAACM,SAA/B,EAA0CC,UAAnE;AACD;;AAED,SAASC,WAAT,CAAqBR,GAArB,EAA0B;AACxB,MAAIM,SAAS,GAAGN,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgBC,UAAhB,CAA2BL,GAAG,CAACM,SAA/B,CAAhB;AACA,MAAIG,KAAK,GAAGH,SAAS,CAACG,KAAtB;AACA,MAAIC,GAAG,GAAG,CAACV,GAAG,CAACC,WAAJ,CAAgBU,QAAhB,CAAyBC,IAA1B,EAAgCN,SAAS,CAACO,QAA1C,EAAoDC,IAApD,CAAyD,GAAzD,CAAV;AACAJ,EAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAN;AAEA,MAAIC,iBAAiB,GAAGhB,GAAG,CAACG,OAAJ,CAAYc,eAAZ,IAA+BA,eAAvD;AACA,MAAIC,wBAAwB,GAAGlB,GAAG,CAACG,OAAJ,CAAYgB,sBAAZ,IACAA,sBAD/B;AAGA,MAAIC,WAAW,GAAG,EAAlB;AAAA,MAAsBC,cAAc,GAAG,KAAvC;AACAxB,EAAAA,IAAI,CAACyB,IAAL,CAAUb,KAAK,CAACc,OAAhB,EAAyB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC/C,QAAIC,UAAU,GAAG1B,GAAG,CAAC2B,MAAJ,CAAWH,IAAX,CAAjB;AACA,QAAIE,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAKE,SAA1C,EAAqD;;AACrD,QAAIH,MAAM,CAACI,QAAP,KAAoB,KAAxB,EAA+B;AAC7BnB,MAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,MAAMU,MAAM,CAACD,IAAb,GAAoB,GAAhC,EAAqCR,iBAAiB,CAACU,UAAD,CAAtD,CAAN;AACD,KAFD,MAEO,IAAID,MAAM,CAACI,QAAP,KAAoB,aAAxB,EAAuC;AAC5CR,MAAAA,cAAc,GAAG,IAAjB;AACAD,MAAAA,WAAW,CAACK,MAAM,CAACD,IAAR,CAAX,GAA2BN,wBAAwB,CAACQ,UAAD,CAAnD;AACD;AACF,GATD;;AAWA,MAAIL,cAAJ,EAAoB;AAClBX,IAAAA,GAAG,IAAKA,GAAG,CAACoB,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAAtC;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAlC,IAAAA,IAAI,CAACmC,SAAL,CAAeC,MAAM,CAACC,IAAP,CAAYd,WAAZ,EAAyBe,IAAzB,EAAf,EAAgD,UAASC,GAAT,EAAc;AAC5DL,MAAAA,KAAK,CAACM,IAAN,CAAWlB,sBAAsB,CAACiB,GAAD,CAAtB,GAA8B,GAA9B,GAAoChB,WAAW,CAACgB,GAAD,CAA1D;AACD,KAFD;AAGA1B,IAAAA,GAAG,IAAIqB,KAAK,CAACjB,IAAN,CAAW,GAAX,CAAP;AACD;;AAEDd,EAAAA,GAAG,CAACC,WAAJ,CAAgBW,IAAhB,GAAuBF,GAAvB;AACD;;AAED,SAASO,eAAT,CAAyBqB,KAAzB,EAAgC;AAC9B,SAAOzC,IAAI,CAAC0C,SAAL,CAAeC,MAAM,CAACF,KAAD,CAArB,CAAP;AACD;;AAED,SAASnB,sBAAT,CAAgCmB,KAAhC,EAAuC;AACrC,SAAOzC,IAAI,CAAC0C,SAAL,CAAeC,MAAM,CAACF,KAAD,CAArB,CAAP;AACD;;AAED,SAASG,eAAT,CAAyBzC,GAAzB,EAA8B;AAC5B,MAAIM,SAAS,GAAGN,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgBC,UAAhB,CAA2BL,GAAG,CAACM,SAA/B,CAAhB;AACAT,EAAAA,IAAI,CAACyB,IAAL,CAAUhB,SAAS,CAACG,KAAV,CAAgBc,OAA1B,EAAmC,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACzD,QAAIa,KAAK,GAAGtC,GAAG,CAAC2B,MAAJ,CAAWH,IAAX,CAAZ;AACA,QAAIc,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKV,SAAhC,EAA2C;;AAE3C,QAAIH,MAAM,CAACI,QAAP,KAAoB,SAApB,IAAiCJ,MAAM,CAACiB,IAAP,KAAgB,KAArD,EAA4D;AAC1D7C,MAAAA,IAAI,CAACyB,IAAL,CAAUgB,KAAV,EAAiB,UAASF,GAAT,EAAcE,KAAd,EAAqB;AACpCtC,QAAAA,GAAG,CAACC,WAAJ,CAAgB0C,OAAhB,CAAwBlB,MAAM,CAACD,IAAP,GAAcY,GAAtC,IAA6CE,KAA7C;AACD,OAFD;AAGD,KAJD,MAIO,IAAIb,MAAM,CAACI,QAAP,KAAoB,QAAxB,EAAkC;AACvCS,MAAAA,KAAK,GAAGb,MAAM,CAACmB,YAAP,CAAoBN,KAApB,EAA2BO,QAA3B,EAAR;AACA7C,MAAAA,GAAG,CAACC,WAAJ,CAAgB0C,OAAhB,CAAwBlB,MAAM,CAACD,IAA/B,IAAuCc,KAAvC;AACD;AACF,GAZD;AAaD;;AAED,SAASQ,YAAT,CAAsB9C,GAAtB,EAA2B;AACzBD,EAAAA,cAAc,CAACC,GAAD,CAAd;AACAQ,EAAAA,WAAW,CAACR,GAAD,CAAX;AACAyC,EAAAA,eAAe,CAACzC,GAAD,CAAf;AACD;;AAED,SAAS+C,YAAT,GAAwB,CACvB;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIjD,GAAG,GAAGiD,IAAI,CAACC,OAAf;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,CAAC,GAAGH,IAAI,CAACI,YAAb;AACA,MAAI/C,SAAS,GAAGN,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgBC,UAAhB,CAA2BL,GAAG,CAACM,SAA/B,CAAhB;AACA,MAAIgD,MAAM,GAAGhD,SAAS,CAACgD,MAAvB,CALyB,CAOzB;;AACA,MAAIX,OAAO,GAAG,EAAd;AACA9C,EAAAA,IAAI,CAACyB,IAAL,CAAU8B,CAAC,CAACT,OAAZ,EAAqB,UAAUY,CAAV,EAAaC,CAAb,EAAgB;AACnCb,IAAAA,OAAO,CAACY,CAAC,CAACE,WAAF,EAAD,CAAP,GAA2BD,CAA3B;AACD,GAFD;AAIA3D,EAAAA,IAAI,CAACyB,IAAL,CAAUgC,MAAM,CAAC/B,OAAjB,EAA0B,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAC/C,QAAIiC,MAAM,GAAG,CAACjC,MAAM,CAACD,IAAP,IAAeA,IAAhB,EAAsBiC,WAAtB,EAAb;;AACA,QAAIhC,MAAM,CAACI,QAAP,KAAoB,SAApB,IAAiCJ,MAAM,CAACiB,IAAP,KAAgB,KAArD,EAA4D;AAC1DS,MAAAA,IAAI,CAAC3B,IAAD,CAAJ,GAAa,EAAb;AACA3B,MAAAA,IAAI,CAACyB,IAAL,CAAU8B,CAAC,CAACT,OAAZ,EAAqB,UAAUY,CAAV,EAAaC,CAAb,EAAgB;AACnC,YAAIG,MAAM,GAAGJ,CAAC,CAACK,KAAF,CAAQ,IAAIC,MAAJ,CAAW,MAAMpC,MAAM,CAACD,IAAb,GAAoB,MAA/B,EAAuC,GAAvC,CAAR,CAAb;;AACA,YAAImC,MAAM,KAAK,IAAf,EAAqB;AACnBR,UAAAA,IAAI,CAAC3B,IAAD,CAAJ,CAAWmC,MAAM,CAAC,CAAD,CAAjB,IAAwBH,CAAxB;AACD;AACF,OALD;AAMD,KARD,MAQO,IAAI/B,MAAM,CAACI,QAAP,KAAoB,QAAxB,EAAkC;AACvC,UAAIc,OAAO,CAACe,MAAD,CAAP,KAAoB9B,SAAxB,EAAmC;AACjCuB,QAAAA,IAAI,CAAC3B,IAAD,CAAJ,GAAamB,OAAO,CAACe,MAAD,CAApB;AACD;AACF,KAJM,MAIA,IAAIjC,MAAM,CAACI,QAAP,KAAoB,QAAxB,EAAkC;AACvCsB,MAAAA,IAAI,CAAC3B,IAAD,CAAJ,GAAasC,QAAQ,CAACV,CAAC,CAACW,UAAH,EAAe,EAAf,CAArB;AACD;AACF,GAjBD;AAmBAd,EAAAA,IAAI,CAACE,IAAL,GAAYA,IAAZ;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,YAAY,EAAEA,YADC;AAEfC,EAAAA,YAAY,EAAEA,YAFC;AAGfC,EAAAA,WAAW,EAAEA;AAHE,CAAjB","sourcesContent":["var util = require('../util');\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n  var uri = [req.httpRequest.endpoint.path, operation.httpPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var escapePathParamFn = req.service.escapePathParam || escapePathParam;\n  var escapeQuerystringParamFn = req.service.escapeQuerystringParam ||\n                                 escapeQuerystringParam;\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = req.params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      uri = uri.replace('{' + member.name + '}', escapePathParamFn(paramValue));\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n      queryString[member.name] = escapeQuerystringParamFn(paramValue);\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      parts.push(escapeQuerystringParam(key) + '=' + queryString[key]);\n    });\n    uri += parts.join('&');\n  }\n\n  req.httpRequest.path = uri;\n}\n\nfunction escapePathParam(value) {\n  return util.uriEscape(String(value));\n}\n\nfunction escapeQuerystringParam(value) {\n  return util.uriEscape(String(value));\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, value) {\n        req.httpRequest.headers[member.name + key] = value;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      util.each(r.headers, function (k, v) {\n        var result = k.match(new RegExp('^' + member.name + '(.+)', 'i'));\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        data[name] = headers[header];\n      }\n    } else if (member.location === 'status') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n"]},"metadata":{},"sourceType":"script"}