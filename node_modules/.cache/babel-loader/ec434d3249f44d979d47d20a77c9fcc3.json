{"ast":null,"code":"var util = require('./util');\n\nvar config = require('./region_config.json');\n\nfunction regionConfig(service) {\n  var sId = service.serviceIdentifier || '';\n  var sRegion = service.config.region || '';\n  var finalConfig = {};\n  config.forEach(function (item) {\n    (item.regions || []).forEach(function (region) {\n      if (sRegion.match(new RegExp('^' + region.replace('*', '.*') + '$'))) {\n        (item.serviceConfigs || []).forEach(function (svcConfig) {\n          (svcConfig.services || []).forEach(function (svcName) {\n            if (sId.match(new RegExp('^' + svcName.replace('*', '.*') + '$'))) {\n              util.update(finalConfig, svcConfig.config);\n              service.isGlobalEndpoint = !!svcConfig.globalEndpoint;\n            }\n          });\n        });\n      }\n    });\n  });\n  util.each(finalConfig, function (key, value) {\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nmodule.exports = regionConfig;","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk/lib/region_config.js"],"names":["util","require","config","regionConfig","service","sId","serviceIdentifier","sRegion","region","finalConfig","forEach","item","regions","match","RegExp","replace","serviceConfigs","svcConfig","services","svcName","update","isGlobalEndpoint","globalEndpoint","each","key","value","undefined","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAD,CAApB;;AAEA,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,MAAIC,GAAG,GAAGD,OAAO,CAACE,iBAAR,IAA6B,EAAvC;AACA,MAAIC,OAAO,GAAGH,OAAO,CAACF,MAAR,CAAeM,MAAf,IAAyB,EAAvC;AACA,MAAIC,WAAW,GAAG,EAAlB;AAEAP,EAAAA,MAAM,CAACQ,OAAP,CAAe,UAASC,IAAT,EAAe;AAC5B,KAACA,IAAI,CAACC,OAAL,IAAgB,EAAjB,EAAqBF,OAArB,CAA6B,UAASF,MAAT,EAAiB;AAC5C,UAAID,OAAO,CAACM,KAAR,CAAc,IAAIC,MAAJ,CAAW,MAAMN,MAAM,CAACO,OAAP,CAAe,GAAf,EAAoB,IAApB,CAAN,GAAkC,GAA7C,CAAd,CAAJ,EAAsE;AACpE,SAACJ,IAAI,CAACK,cAAL,IAAuB,EAAxB,EAA4BN,OAA5B,CAAoC,UAASO,SAAT,EAAoB;AACtD,WAACA,SAAS,CAACC,QAAV,IAAsB,EAAvB,EAA2BR,OAA3B,CAAmC,UAASS,OAAT,EAAkB;AACnD,gBAAId,GAAG,CAACQ,KAAJ,CAAU,IAAIC,MAAJ,CAAW,MAAMK,OAAO,CAACJ,OAAR,CAAgB,GAAhB,EAAqB,IAArB,CAAN,GAAmC,GAA9C,CAAV,CAAJ,EAAmE;AACjEf,cAAAA,IAAI,CAACoB,MAAL,CAAYX,WAAZ,EAAyBQ,SAAS,CAACf,MAAnC;AACAE,cAAAA,OAAO,CAACiB,gBAAR,GAA2B,CAAC,CAACJ,SAAS,CAACK,cAAvC;AACD;AACF,WALD;AAMD,SAPD;AAQD;AACF,KAXD;AAYD,GAbD;AAeAtB,EAAAA,IAAI,CAACuB,IAAL,CAAUd,WAAV,EAAuB,UAASe,GAAT,EAAcC,KAAd,EAAqB;AAC1C,QAAIrB,OAAO,CAACF,MAAR,CAAesB,GAAf,MAAwBE,SAAxB,IAAqCtB,OAAO,CAACF,MAAR,CAAesB,GAAf,MAAwB,IAAjE,EAAuE;AACrEpB,MAAAA,OAAO,CAACF,MAAR,CAAesB,GAAf,IAAsBC,KAAtB;AACD;AACF,GAJD;AAKD;;AAEDE,MAAM,CAACC,OAAP,GAAiBzB,YAAjB","sourcesContent":["var util = require('./util');\nvar config = require('./region_config.json');\n\nfunction regionConfig(service) {\n  var sId = service.serviceIdentifier || '';\n  var sRegion = service.config.region || '';\n  var finalConfig = {};\n\n  config.forEach(function(item) {\n    (item.regions || []).forEach(function(region) {\n      if (sRegion.match(new RegExp('^' + region.replace('*', '.*') + '$'))) {\n        (item.serviceConfigs || []).forEach(function(svcConfig) {\n          (svcConfig.services || []).forEach(function(svcName) {\n            if (sId.match(new RegExp('^' + svcName.replace('*', '.*') + '$'))) {\n              util.update(finalConfig, svcConfig.config);\n              service.isGlobalEndpoint = !!svcConfig.globalEndpoint;\n            }\n          });\n        });\n      }\n    });\n  });\n\n  util.each(finalConfig, function(key, value) {\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nmodule.exports = regionConfig;\n"]},"metadata":{},"sourceType":"script"}