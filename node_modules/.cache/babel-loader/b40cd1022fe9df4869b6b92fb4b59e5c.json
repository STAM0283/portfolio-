{"ast":null,"code":"var fs = require('fs');\n\nvar apiRoot = __dirname + '/apis';\nvar serviceMap = null;\nvar serviceIdentifiers = [];\nvar serviceNames = [];\n\nfunction buildServiceMap() {\n  if (serviceMap !== null) return; // load info file for API metadata\n\n  var infoFile = __dirname + '/metadata.json';\n  serviceMap = JSON.parse(fs.readFileSync(infoFile).toString());\n  var prefixMap = {};\n  Object.keys(serviceMap).forEach(function (identifier) {\n    serviceMap[identifier].prefix = serviceMap[identifier].prefix || identifier;\n    prefixMap[serviceMap[identifier].prefix] = identifier;\n  });\n  fs.readdirSync(apiRoot).forEach(function (file) {\n    var match = file.match(/^(.+?)-(\\d+-\\d+-\\d+)\\.api\\.json$/);\n\n    if (match) {\n      var id = prefixMap[match[1]],\n          version = match[2];\n\n      if (serviceMap[id]) {\n        serviceMap[id].versions = serviceMap[id].versions || [];\n        serviceMap[id].versions.push(version);\n      }\n    }\n  });\n  Object.keys(serviceMap).forEach(function (identifier) {\n    serviceMap[identifier].versions = serviceMap[identifier].versions.sort();\n    serviceIdentifiers.push(identifier);\n    serviceNames.push(serviceMap[identifier].name);\n  });\n}\n\nfunction getServices() {\n  buildServiceMap();\n  return serviceIdentifiers;\n}\n\nfunction getServiceNames() {\n  buildServiceMap();\n  return serviceNames;\n}\n\nfunction serviceVersions(svc) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  return serviceMap[svc] ? serviceMap[svc].versions : null;\n}\n\nfunction serviceName(svc) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  return serviceMap[svc] ? serviceMap[svc].name : null;\n}\n\nfunction serviceFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix.toLowerCase() + '-' + version + '.api.json';\n}\n\nfunction paginatorsFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix + '-' + version + '.paginators.json';\n}\n\nfunction waitersFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix + '-' + version + '.waiters.json';\n}\n\nfunction load(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (version === 'latest') version = null;\n  version = version || serviceMap[svc].versions[serviceMap[svc].versions.length - 1];\n  if (!serviceMap[svc]) return null;\n  var api = JSON.parse(fs.readFileSync(serviceFile(svc, version))); // Try to load paginators\n\n  if (fs.existsSync(paginatorsFile(svc, version))) {\n    var paginators = JSON.parse(fs.readFileSync(paginatorsFile(svc, version)));\n    api.paginators = paginators.pagination;\n  } // Try to load waiters\n\n\n  if (fs.existsSync(waitersFile(svc, version))) {\n    var waiters = JSON.parse(fs.readFileSync(waitersFile(svc, version)));\n    api.waiters = waiters.waiters;\n  }\n\n  return api;\n}\n\nfunction serviceIdentifier(svc) {\n  return svc.toLowerCase();\n}\n\nmodule.exports = {\n  serviceVersions: serviceVersions,\n  serviceName: serviceName,\n  serviceIdentifier: serviceIdentifier,\n  serviceFile: serviceFile,\n  load: load\n};\nObject.defineProperty(module.exports, 'services', {\n  enumerable: true,\n  get: getServices\n});\nObject.defineProperty(module.exports, 'serviceNames', {\n  enumerable: true,\n  get: getServiceNames\n});","map":{"version":3,"sources":["/home/wilder/Documents/portfolio/node_modules/aws-sdk-apis/index.js"],"names":["fs","require","apiRoot","__dirname","serviceMap","serviceIdentifiers","serviceNames","buildServiceMap","infoFile","JSON","parse","readFileSync","toString","prefixMap","Object","keys","forEach","identifier","prefix","readdirSync","file","match","id","version","versions","push","sort","name","getServices","getServiceNames","serviceVersions","svc","serviceIdentifier","serviceName","serviceFile","toLowerCase","paginatorsFile","waitersFile","load","length","api","existsSync","paginators","pagination","waiters","module","exports","defineProperty","enumerable","get"],"mappings":"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","sourcesContent":["var fs = require('fs');\n\nvar apiRoot = __dirname + '/apis';\nvar serviceMap = null;\nvar serviceIdentifiers = [];\nvar serviceNames = [];\n\nfunction buildServiceMap() {\n  if (serviceMap !== null) return;\n\n  // load info file for API metadata\n  var infoFile = __dirname + '/metadata.json';\n  serviceMap = JSON.parse(fs.readFileSync(infoFile).toString());\n\n  var prefixMap = {};\n  Object.keys(serviceMap).forEach(function(identifier) {\n    serviceMap[identifier].prefix = serviceMap[identifier].prefix || identifier;\n    prefixMap[serviceMap[identifier].prefix] = identifier;\n  });\n\n  fs.readdirSync(apiRoot).forEach(function (file) {\n    var match = file.match(/^(.+?)-(\\d+-\\d+-\\d+)\\.api\\.json$/);\n    if (match) {\n      var id = prefixMap[match[1]], version = match[2];\n      if (serviceMap[id]) {\n        serviceMap[id].versions = serviceMap[id].versions || [];\n        serviceMap[id].versions.push(version);\n      }\n    }\n  });\n\n  Object.keys(serviceMap).forEach(function(identifier) {\n    serviceMap[identifier].versions = serviceMap[identifier].versions.sort();\n    serviceIdentifiers.push(identifier);\n    serviceNames.push(serviceMap[identifier].name);\n  });\n}\n\nfunction getServices() {\n  buildServiceMap();\n  return serviceIdentifiers;\n}\n\nfunction getServiceNames() {\n  buildServiceMap();\n  return serviceNames;\n}\n\nfunction serviceVersions(svc) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  return serviceMap[svc] ? serviceMap[svc].versions : null;\n}\n\nfunction serviceName(svc) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  return serviceMap[svc] ? serviceMap[svc].name : null;\n}\n\nfunction serviceFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix.toLowerCase() + '-' + version + '.api.json';\n}\n\nfunction paginatorsFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix + '-' + version + '.paginators.json';  \n}\n\nfunction waitersFile(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (!serviceMap[svc]) return null;\n\n  var prefix = serviceMap[svc].prefix || svc;\n  return apiRoot + '/' + prefix + '-' + version + '.waiters.json';  \n}\n\nfunction load(svc, version) {\n  buildServiceMap();\n  svc = serviceIdentifier(svc);\n  if (version === 'latest') version = null;\n  version = version || serviceMap[svc].versions[serviceMap[svc].versions.length - 1];\n  if (!serviceMap[svc]) return null;\n\n  var api = JSON.parse(fs.readFileSync(serviceFile(svc, version)));\n\n  // Try to load paginators\n  if (fs.existsSync(paginatorsFile(svc, version))) {\n    var paginators = JSON.parse(fs.readFileSync(paginatorsFile(svc, version)));\n    api.paginators = paginators.pagination;    \n  }\n\n  // Try to load waiters\n  if (fs.existsSync(waitersFile(svc, version))) {\n    var waiters = JSON.parse(fs.readFileSync(waitersFile(svc, version)));\n    api.waiters = waiters.waiters;    \n  }\n\n  return api;\n}\n\nfunction serviceIdentifier(svc) {\n  return svc.toLowerCase();\n}\n\nmodule.exports = {\n  serviceVersions: serviceVersions,\n  serviceName: serviceName,\n  serviceIdentifier: serviceIdentifier,\n  serviceFile: serviceFile,\n  load: load\n};\n\nObject.defineProperty(module.exports, 'services', {\n  enumerable: true, get: getServices\n});\n\nObject.defineProperty(module.exports, 'serviceNames', {\n  enumerable: true, get: getServiceNames\n});\n"]},"metadata":{},"sourceType":"script"}